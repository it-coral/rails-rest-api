{
  "swagger": "2.0",
  "info": {
    "title": "API V1",
    "version": "v1"
  },
  "paths": {
    "/api/v1/{commentable_type}/{commentable_id}/comments": {
      "get": {
        "summary": "List of Comments as tree view by default",
        "tags": [
          "Comments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "commentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "commentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Group",
              "Task",
              "CourseThread"
            ]
          },
          {
            "name": "only_roots",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "returns only root comments"
          },
          {
            "name": "root_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "returns comments under specific comment"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "comments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "commentable_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "commentable_type": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "body": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer"
                      },
                      "root_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "main_root_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "tree_path": {
                        "type": "text",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "comments"
              ]
            },
            "examples": {
              "application/json": {
                "comments": [
                  {
                    "id": 1,
                    "commentable_id": 1,
                    "commentable_type": "Task",
                    "title": "Eaque quibusdam nemo vel fugit.",
                    "body": "Ut provident quis repellat reprehenderit rerum. Asperiores id aut dolore aut dolorem molestias. Est dolore officia deleniti quo voluptatem quisquam. Reprehenderit aut amet qui aliquam beatae dolorem et. Velit nihil quam culpa.",
                    "user_id": 1,
                    "root_id": 0,
                    "main_root_id": 1,
                    "created_at": "April 10, 2018 13:39",
                    "updated_at": "April 10, 2018 13:39",
                    "tree_path": [
                      "1"
                    ],
                    "user": {
                      "id": 1,
                      "first_name": "Ms. Bradford Graham",
                      "last_name": "Britney Ward",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 1,
                      "state_id": 1,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "April 10, 2018 13:39",
                      "updated_at": "April 10, 2018 13:39",
                      "email": "jonathan_nitzsche@legros.net",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "organization_ids": [
                        1
                      ],
                      "roles": null,
                      "group_ids": [

                      ],
                      "organization_settings": {
                        "id": 1,
                        "user_id": 1,
                        "organization_id": 1,
                        "role": "student",
                        "created_at": "April 10, 2018 13:39",
                        "updated_at": "April 10, 2018 13:39",
                        "status": "active",
                        "exclude_students_ids": [

                        ],
                        "files_controll_enabled": false,
                        "messanger_access_enabled": false
                      }
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Comment",
        "tags": [
          "Comments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "commentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "commentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Group",
              "Task",
              "CourseThread"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "object",
                  "properties": {
                    "body": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "subject": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "root_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "attachment_id": {
                      "description": "attachment from thread, that uploaded before and should to be attached to current message",
                      "type": "integer"
                    }
                  }
                }
              },
              "required": [
                "comment"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "commentable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "commentable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "body": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer"
                    },
                    "root_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "main_root_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "tree_path": {
                      "type": "text",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "comment"
              ]
            },
            "examples": {
              "application/json": {
                "comment": {
                  "id": 5,
                  "commentable_id": 4,
                  "commentable_type": "Task",
                  "title": "Eaque quibusdam nemo vel fugit.",
                  "body": "Ut provident quis repellat reprehenderit rerum. Asperiores id aut dolore aut dolorem molestias. Est dolore officia deleniti quo voluptatem quisquam. Reprehenderit aut amet qui aliquam beatae dolorem et. Velit nihil quam culpa.",
                  "user_id": 14,
                  "root_id": 0,
                  "main_root_id": 0,
                  "created_at": "April 10, 2018 13:39",
                  "updated_at": "April 10, 2018 13:39",
                  "tree_path": [

                  ],
                  "user": {
                    "id": 14,
                    "first_name": "Ms. Bradford Graham",
                    "last_name": "Britney Ward",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 27,
                    "state_id": 14,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "April 10, 2018 13:39",
                    "updated_at": "April 10, 2018 13:39",
                    "email": "janet@koeppboyer.net",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      13
                    ],
                    "roles": null,
                    "group_ids": [

                    ],
                    "organization_settings": {
                      "id": 13,
                      "user_id": 14,
                      "organization_id": 13,
                      "role": "student",
                      "created_at": "April 10, 2018 13:39",
                      "updated_at": "April 10, 2018 13:39",
                      "status": "active",
                      "exclude_students_ids": [

                      ],
                      "files_controll_enabled": false,
                      "messanger_access_enabled": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{commentable_type}/{commentable_id}/comments/{id}": {
      "put": {
        "summary": "Update details of Comment",
        "tags": [
          "Comments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "commentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "commentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Group",
              "Task",
              "CourseThread"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "object",
                  "properties": {
                    "body": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "subject": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "root_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "attachment_id": {
                      "description": "attachment from thread, that uploaded before and should to be attached to current message",
                      "type": "integer"
                    }
                  }
                }
              },
              "required": [
                "comment"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "body": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "root_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "comment"
              ]
            },
            "examples": {
              "application/json": {
                "comment": {
                  "id": 8,
                  "commentable_id": 7,
                  "commentable_type": "Task",
                  "title": "Eaque quibusdam nemo vel fugit.",
                  "body": "Ut provident quis repellat reprehenderit rerum. Asperiores id aut dolore aut dolorem molestias. Est dolore officia deleniti quo voluptatem quisquam. Reprehenderit aut amet qui aliquam beatae dolorem et. Velit nihil quam culpa.",
                  "user_id": 28,
                  "root_id": 0,
                  "main_root_id": 8,
                  "created_at": "April 10, 2018 13:39",
                  "updated_at": "April 10, 2018 13:39",
                  "tree_path": [
                    "8"
                  ],
                  "user": {
                    "id": 28,
                    "first_name": "Ms. Bradford Graham",
                    "last_name": "Britney Ward",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 55,
                    "state_id": 28,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "April 10, 2018 13:39",
                    "updated_at": "April 10, 2018 13:39",
                    "email": "rafael@murray.biz",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      27
                    ],
                    "roles": null,
                    "group_ids": [

                    ],
                    "organization_settings": {
                      "id": 26,
                      "user_id": 28,
                      "organization_id": 27,
                      "role": "student",
                      "created_at": "April 10, 2018 13:39",
                      "updated_at": "April 10, 2018 13:39",
                      "status": "active",
                      "exclude_students_ids": [

                      ],
                      "files_controll_enabled": false,
                      "messanger_access_enabled": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Comment with 'id'=0 [WHERE \"comments\".\"commentable_id\" = $1 AND \"comments\".\"commentable_type\" = $2]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Comment",
        "tags": [
          "Comments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "commentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "commentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Group",
              "Task",
              "CourseThread"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Comment account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Comment with 'id'=0 [WHERE \"comments\".\"commentable_id\" = $1 AND \"comments\".\"commentable_type\" = $2]"
                ]
              }
            }
          }
        }
      }
    }
  }
}
