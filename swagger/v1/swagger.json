{
  "swagger": "2.0",
  "info": {
    "title": "API V1",
    "version": "v1"
  },
  "paths": {
    "/api/v1/{attachmentable_type}/{attachmentable_id}/attachments": {
      "get": {
        "summary": "Attachments",
        "tags": [
          "Attachments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "attachmentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "attachmentable_type",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "attachments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "file": {
                        "type": "object",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "organization_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "attachmentable_type": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "attachmentable_id": {
                        "type": "integer",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "attachments"
              ]
            },
            "examples": {
              "application/json": {
                "attachments": [
                  {
                    "id": 1,
                    "title": "Conroy, Gleason and Kihn",
                    "description": "facilitate cutting-edge bandwidth",
                    "file": {
                      "url": "/uploads/attachment/file/1/test.jpg"
                    },
                    "user_id": 1,
                    "organization_id": 1,
                    "created_at": "March 05, 2018 20:21",
                    "updated_at": "March 05, 2018 20:21",
                    "attachmentable_type": "Organization",
                    "attachmentable_id": 1,
                    "attachmentable": {
                      "id": 1,
                      "title": "Sipes, Baumbach and Schumm",
                      "subdomain": "krisbradtke",
                      "domain": "grant.co",
                      "created_at": "March 05, 2018 20:21",
                      "updated_at": "March 05, 2018 20:21"
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Attachment",
        "tags": [
          "Attachments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "attachment": {
                  "type": "object",
                  "properties": {
                    "attachmentable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "attachmentable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "file": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "attachment"
              ]
            }
          },
          {
            "name": "attachmentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "attachmentable_type",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "attachment": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "file": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "attachmentable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "attachmentable_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "attachment"
              ]
            },
            "examples": {
              "application/json": {
                "attachment": {
                  "id": null,
                  "title": "Conroy, Gleason and Kihn",
                  "description": "facilitate cutting-edge bandwidth",
                  "file": {
                    "url": null
                  },
                  "user_id": 5,
                  "organization_id": null,
                  "created_at": null,
                  "updated_at": null,
                  "attachmentable_type": "Organization",
                  "attachmentable_id": 7,
                  "attachmentable": {
                    "id": 7,
                    "title": "Sipes, Baumbach and Schumm",
                    "subdomain": "krisbradtke",
                    "domain": "grant.co",
                    "created_at": "March 05, 2018 20:21",
                    "updated_at": "March 05, 2018 20:21"
                  }
                },
                "errors": {
                  "organization": [
                    {
                      "error": "blank"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{attachmentable_type}/{attachmentable_id}/attachments/{id}": {
      "put": {
        "summary": "Update Attachment",
        "tags": [
          "Attachments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "attachment": {
                  "type": "object",
                  "properties": {
                    "attachmentable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "attachmentable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "file": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "attachment"
              ]
            }
          },
          {
            "name": "attachmentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "attachmentable_type",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "attachment": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "file": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "attachmentable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "attachmentable_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "attachment"
              ]
            },
            "examples": {
              "application/json": {
                "attachment": {
                  "id": 7,
                  "title": "Conroy, Gleason and Kihn",
                  "description": "facilitate cutting-edge bandwidth",
                  "file": {
                    "url": "/uploads/attachment/file/7/test.jpg"
                  },
                  "user_id": 10,
                  "organization_id": 10,
                  "created_at": "March 05, 2018 20:21",
                  "updated_at": "March 05, 2018 20:21",
                  "attachmentable_type": "Organization",
                  "attachmentable_id": 13,
                  "attachmentable": {
                    "id": 13,
                    "title": "Sipes, Baumbach and Schumm",
                    "subdomain": "krisbradtke",
                    "domain": "grant.co",
                    "created_at": "March 05, 2018 20:21",
                    "updated_at": "March 05, 2018 20:21"
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Attachment with 'id'=0 [WHERE \"attachments\".\"attachmentable_id\" = $1 AND \"attachments\".\"attachmentable_type\" = $2]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Attachment",
        "tags": [
          "Attachments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "attachmentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "attachmentable_type",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Attachment account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Attachment with 'id'=0 [WHERE \"attachments\".\"attachmentable_id\" = $1 AND \"attachments\".\"attachmentable_type\" = $2]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/course_groups": {
      "get": {
        "summary": "Courses in group",
        "tags": [
          "Courses vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "course_groups": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "course_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "group_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "precourse_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "complete_lesson_can": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "teacher",
                          "student",
                          "all"
                        ]
                      },
                      "reports_enabled": {
                        "type": "boolean",
                        "x-nullable": true
                      },
                      "files_enabled": {
                        "type": "boolean",
                        "x-nullable": true
                      },
                      "discussing_enabled": {
                        "type": "boolean",
                        "x-nullable": true
                      },
                      "student_content_enabled": {
                        "type": "boolean",
                        "x-nullable": true
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "active",
                          "pause"
                        ]
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "required": [
                "course_groups"
              ]
            },
            "examples": {
              "application/json": {
                "course_groups": [
                  {
                    "id": 1,
                    "course_id": 1,
                    "group_id": 1,
                    "precourse_id": 2,
                    "complete_lesson_can": "all",
                    "reports_enabled": true,
                    "files_enabled": true,
                    "discussing_enabled": true,
                    "student_content_enabled": true,
                    "status": "active",
                    "created_at": "March 05, 2018 20:21",
                    "updated_at": "March 05, 2018 20:21"
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Course to group",
        "tags": [
          "Courses vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course_group": {
                  "type": "object",
                  "properties": {
                    "complete_lesson_can": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "teacher",
                        "student",
                        "all"
                      ]
                    },
                    "discussing_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "files_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "precourse_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "reports_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "student_content_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "course_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course_group"
              ]
            }
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "course_group": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "course_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "group_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "precourse_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "complete_lesson_can": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "teacher",
                        "student",
                        "all"
                      ]
                    },
                    "reports_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "files_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "discussing_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "student_content_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    }
                  }
                }
              },
              "required": [
                "course_group"
              ]
            },
            "examples": {
              "application/json": {
                "course_group": {
                  "id": 5,
                  "course_id": 9,
                  "group_id": 4,
                  "precourse_id": 10,
                  "complete_lesson_can": "all",
                  "reports_enabled": true,
                  "files_enabled": true,
                  "discussing_enabled": true,
                  "student_content_enabled": true,
                  "status": "active",
                  "created_at": "March 05, 2018 20:21",
                  "updated_at": "March 05, 2018 20:21"
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/course_groups/{id}": {
      "put": {
        "summary": "Update Course in group",
        "tags": [
          "Courses vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course_group": {
                  "type": "object",
                  "properties": {
                    "complete_lesson_can": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "teacher",
                        "student",
                        "all"
                      ]
                    },
                    "discussing_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "files_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "precourse_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "reports_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "student_content_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course_group"
              ]
            }
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "course_group": {
                  "type": "object",
                  "properties": {
                    "precourse_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "complete_lesson_can": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "teacher",
                        "student",
                        "all"
                      ]
                    },
                    "reports_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "files_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "discussing_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "student_content_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    }
                  }
                }
              },
              "required": [
                "course_group"
              ]
            },
            "examples": {
              "application/json": {
                "course_group": {
                  "id": 8,
                  "course_id": 15,
                  "group_id": 8,
                  "precourse_id": 18,
                  "complete_lesson_can": "all",
                  "reports_enabled": true,
                  "files_enabled": true,
                  "discussing_enabled": true,
                  "student_content_enabled": true,
                  "status": "active",
                  "created_at": "March 05, 2018 20:21",
                  "updated_at": "March 05, 2018 20:21"
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find CourseGroup with 'id'=0 [WHERE \"course_groups\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Course from group",
        "tags": [
          "Courses vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting CourseGroup account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find CourseGroup with 'id'=0 [WHERE \"course_groups\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses": {
      "get": {
        "summary": "Get Courses inside organization",
        "tags": [
          "Courses"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "courses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "image": {
                        "type": "object",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "organization_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "required": [
                "courses"
              ]
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Course",
        "tags": [
          "Courses"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "image": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "image": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    }
                  }
                }
              },
              "required": [
                "course"
              ]
            },
            "examples": {
              "application/json": {
                "course": {
                  "id": 41,
                  "title": "Purdy LLC",
                  "description": "scale user-centric communities",
                  "image": {
                    "url": null
                  },
                  "user_id": 87,
                  "organization_id": 101,
                  "created_at": "March 05, 2018 20:21",
                  "updated_at": "March 05, 2018 20:21",
                  "user": {
                    "id": 87,
                    "first_name": "Robb Feil",
                    "last_name": "Queen Stokes",
                    "admin_role": "super_admin",
                    "phone_number": null,
                    "date_of_birth": null,
                    "address": null,
                    "country_id": 173,
                    "state_id": 87,
                    "zip_code": null,
                    "status": "active",
                    "created_at": "March 05, 2018 20:21",
                    "updated_at": "March 05, 2018 20:21",
                    "email": "jasen@welch.biz",
                    "confirmation_token": null,
                    "unconfirmed_email": null,
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      101
                    ],
                    "group_ids": [

                    ]
                  },
                  "organization": {
                    "id": 101,
                    "title": "Sipes, Baumbach and Schumm",
                    "subdomain": "krisbradtke",
                    "domain": "grant.co",
                    "created_at": "March 05, 2018 20:21",
                    "updated_at": "March 05, 2018 20:21"
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses/{id}": {
      "get": {
        "summary": "Get Course Details",
        "tags": [
          "Courses"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "image": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    }
                  }
                }
              },
              "required": [
                "course"
              ]
            },
            "examples": {
              "application/json": {
                "course": {
                  "id": 36,
                  "title": "Purdy LLC",
                  "description": "scale user-centric communities",
                  "image": {
                    "url": "/uploads/course/image/36/test.jpg"
                  },
                  "user_id": 79,
                  "organization_id": 93,
                  "created_at": "March 05, 2018 20:21",
                  "updated_at": "March 05, 2018 20:21",
                  "user": {
                    "id": 79,
                    "first_name": "Robb Feil",
                    "last_name": "Queen Stokes",
                    "admin_role": "super_admin",
                    "phone_number": null,
                    "date_of_birth": null,
                    "address": null,
                    "country_id": 157,
                    "state_id": 79,
                    "zip_code": null,
                    "status": "active",
                    "created_at": "March 05, 2018 20:21",
                    "updated_at": "March 05, 2018 20:21",
                    "email": "johnny_runolfsdottir@stamm.org",
                    "confirmation_token": null,
                    "unconfirmed_email": null,
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      94
                    ],
                    "group_ids": [

                    ]
                  },
                  "organization": {
                    "id": 93,
                    "title": "Sipes, Baumbach and Schumm",
                    "subdomain": "krisbradtke",
                    "domain": "grant.co",
                    "created_at": "March 05, 2018 20:21",
                    "updated_at": "March 05, 2018 20:21"
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Course with 'id'=0 [WHERE \"courses\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Course Details",
        "tags": [
          "Courses"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "image": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "image": {
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course"
              ]
            },
            "examples": {
              "application/json": {
                "course": {
                  "id": 44,
                  "title": "Purdy LLC",
                  "description": "scale user-centric communities",
                  "image": {
                    "url": "/uploads/course/image/44/test.jpg"
                  },
                  "user_id": 96,
                  "organization_id": 109,
                  "created_at": "March 05, 2018 20:21",
                  "updated_at": "March 05, 2018 20:21",
                  "user": {
                    "id": 96,
                    "first_name": "Robb Feil",
                    "last_name": "Queen Stokes",
                    "admin_role": "super_admin",
                    "phone_number": null,
                    "date_of_birth": null,
                    "address": null,
                    "country_id": 191,
                    "state_id": 96,
                    "zip_code": null,
                    "status": "active",
                    "created_at": "March 05, 2018 20:21",
                    "updated_at": "March 05, 2018 20:21",
                    "email": "scotty@streichthiel.info",
                    "confirmation_token": null,
                    "unconfirmed_email": null,
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      110
                    ],
                    "group_ids": [

                    ]
                  },
                  "organization": {
                    "id": 109,
                    "title": "Sipes, Baumbach and Schumm",
                    "subdomain": "krisbradtke",
                    "domain": "grant.co",
                    "created_at": "March 05, 2018 20:21",
                    "updated_at": "March 05, 2018 20:21"
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Course with 'id'=0 [WHERE \"courses\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Course",
        "tags": [
          "Courses"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Course account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Course with 'id'=0 [WHERE \"courses\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/group_users": {
      "get": {
        "summary": "Users in group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "status",
            "in": "body",
            "type": "string",
            "enum": [
              "active",
              "pause"
            ],
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "group_users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "group_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "active",
                          "pause"
                        ]
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "role": {
                        "type": "string"
                      },
                      "organization_id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "required": [
                "group_users"
              ]
            },
            "examples": {
              "application/json": {
                "group_users": [
                  {
                    "id": 18,
                    "first_name": "Margaretta Gibson",
                    "last_name": "Shaniya Dach",
                    "role": "admin",
                    "organization_id": 127
                  },
                  {
                    "id": 1,
                    "first_name": "Robb Feil",
                    "last_name": "Queen Stokes",
                    "role": "admin",
                    "organization_id": 127
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 2,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add User to group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "group_user": {
                  "type": "object",
                  "properties": {
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "group_user"
              ]
            }
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "status",
            "in": "body",
            "type": "string",
            "enum": [
              "active",
              "pause"
            ],
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "group_user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "group_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string"
                    },
                    "organization_id": {
                      "type": "integer"
                    }
                  }
                }
              },
              "required": [
                "group_user"
              ]
            },
            "examples": {
              "application/json": {
                "group_user": {
                  "id": 5,
                  "user_id": 119,
                  "group_id": 20,
                  "created_at": "March 05, 2018 20:21",
                  "updated_at": "March 05, 2018 20:21",
                  "status": "active",
                  "first_name": "Robb Feil",
                  "last_name": "Queen Stokes",
                  "role": "",
                  "organization_id": 130
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/group_users/{id}": {
      "put": {
        "summary": "Change status of user in group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "group_user": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    }
                  }
                }
              },
              "required": [
                "group_user"
              ]
            }
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "status",
            "in": "body",
            "type": "string",
            "enum": [
              "active",
              "pause"
            ],
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "group_user": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    }
                  }
                }
              },
              "required": [
                "group_user"
              ]
            },
            "examples": {
              "application/json": {
                "group_user": {
                  "id": 8,
                  "user_id": 123,
                  "group_id": 24,
                  "created_at": "March 05, 2018 20:21",
                  "updated_at": "March 05, 2018 20:21",
                  "status": "active",
                  "first_name": "Robb Feil",
                  "last_name": "Queen Stokes",
                  "role": "admin",
                  "organization_id": 135
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find GroupUser with 'id'=0 [WHERE \"group_users\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user from group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "status",
            "in": "body",
            "type": "string",
            "enum": [
              "active",
              "pause"
            ],
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting GroupUser account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find GroupUser with 'id'=0 [WHERE \"group_users\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/group_users/batch_update": {
      "put": {
        "summary": "Change status of batch users in group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "status",
            "in": "body",
            "type": "string",
            "enum": [
              "active",
              "pause"
            ],
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns status and errors",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                },
                "errors": {
                  "type": "array"
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "errors": [

                ],
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups": {
      "get": {
        "summary": "Get Groups inside organization",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "groups": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "organization_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "active",
                          "pause"
                        ]
                      },
                      "user_limit": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "visibility": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "private",
                          "public"
                        ]
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "count_participants": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "user_ids": {
                        "type": "array",
                        "items": {
                          "type": "integer",
                          "properties": {
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "groups"
              ]
            },
            "examples": {
              "application/json": {
                "groups": [

                ],
                "meta": {
                  "total_pages": 0,
                  "size": 0,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Group",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "user_limit": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "visibility": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "private",
                        "public"
                      ]
                    }
                  }
                }
              },
              "required": [
                "group"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "user_limit": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "visibility": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "private",
                        "public"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "count_participants": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "group"
              ]
            },
            "examples": {
              "application/json": {
                "group": {
                  "id": 44,
                  "organization_id": 155,
                  "title": "Schiller, Jacobson and Kozey",
                  "description": "empower robust ROI",
                  "status": "active",
                  "user_limit": 10,
                  "visibility": "public",
                  "created_at": "March 05, 2018 20:21",
                  "updated_at": "March 05, 2018 20:21",
                  "count_participants": null,
                  "user_id": 147,
                  "user_ids": [

                  ],
                  "organization": {
                    "id": 155,
                    "title": "Sipes, Baumbach and Schumm",
                    "subdomain": "krisbradtke",
                    "domain": "grant.co",
                    "created_at": "March 05, 2018 20:21",
                    "updated_at": "March 05, 2018 20:21"
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{id}": {
      "get": {
        "summary": "Get Group Details",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "user_limit": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "visibility": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "private",
                        "public"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "count_participants": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "group"
              ]
            },
            "examples": {
              "application/json": {
                "group": {
                  "id": 39,
                  "organization_id": 151,
                  "title": "Schiller, Jacobson and Kozey",
                  "description": "empower robust ROI",
                  "status": "active",
                  "user_limit": 10,
                  "visibility": "public",
                  "created_at": "March 05, 2018 20:21",
                  "updated_at": "March 05, 2018 20:21",
                  "count_participants": null,
                  "user_id": null,
                  "user_ids": [

                  ],
                  "organization": {
                    "id": 151,
                    "title": "Sipes, Baumbach and Schumm",
                    "subdomain": "krisbradtke",
                    "domain": "grant.co",
                    "created_at": "March 05, 2018 20:21",
                    "updated_at": "March 05, 2018 20:21"
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Group with 'id'=0 [WHERE \"groups\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Group Details",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "user_limit": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "visibility": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "private",
                        "public"
                      ]
                    }
                  }
                }
              },
              "required": [
                "group"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "user_limit": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "visibility": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "private",
                        "public"
                      ]
                    }
                  }
                }
              },
              "required": [
                "group"
              ]
            },
            "examples": {
              "application/json": {
                "group": {
                  "id": 47,
                  "organization_id": 159,
                  "title": "Schiller, Jacobson and Kozey",
                  "description": "empower robust ROI",
                  "status": "active",
                  "user_limit": 10,
                  "visibility": "public",
                  "created_at": "March 05, 2018 20:21",
                  "updated_at": "March 05, 2018 20:21",
                  "count_participants": null,
                  "user_id": null,
                  "user_ids": [

                  ],
                  "organization": {
                    "id": 159,
                    "title": "Sipes, Baumbach and Schumm",
                    "subdomain": "krisbradtke",
                    "domain": "grant.co",
                    "created_at": "March 05, 2018 20:21",
                    "updated_at": "March 05, 2018 20:21"
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Group with 'id'=0 [WHERE \"groups\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Group",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Group account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Group with 'id'=0 [WHERE \"groups\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses/{course_id}/lessons": {
      "get": {
        "summary": "Lessons for course",
        "tags": [
          "Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "lessons": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "active",
                          "pause"
                        ]
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "course_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "required": [
                "lessons"
              ]
            },
            "examples": {
              "application/json": {
                "lessons": [
                  {
                    "id": 1,
                    "title": "Prohaska, Lowe and Bartoletti",
                    "description": "engineer wireless web services",
                    "status": "active",
                    "user_id": 161,
                    "course_id": 52,
                    "created_at": "March 05, 2018 20:21",
                    "updated_at": "March 05, 2018 20:21",
                    "actions": [

                    ],
                    "course": {
                      "id": 52,
                      "title": "Purdy LLC",
                      "description": "scale user-centric communities",
                      "image": {
                        "url": "/uploads/course/image/52/test.jpg"
                      },
                      "user_id": 162,
                      "organization_id": 168,
                      "created_at": "March 05, 2018 20:21",
                      "updated_at": "March 05, 2018 20:21"
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add lesson to course",
        "tags": [
          "Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "lesson": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "lesson"
              ]
            }
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "lesson": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "course_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    }
                  }
                }
              },
              "required": [
                "lesson"
              ]
            },
            "examples": {
              "application/json": {
                "lesson": {
                  "id": 5,
                  "title": "Prohaska, Lowe and Bartoletti",
                  "description": "engineer wireless web services",
                  "status": "active",
                  "user_id": 168,
                  "course_id": 55,
                  "created_at": "March 05, 2018 20:21",
                  "updated_at": "March 05, 2018 20:21",
                  "actions": [

                  ],
                  "course": {
                    "id": 55,
                    "title": "Purdy LLC",
                    "description": "scale user-centric communities",
                    "image": {
                      "url": "/uploads/course/image/55/test.jpg"
                    },
                    "user_id": 169,
                    "organization_id": 174,
                    "created_at": "March 05, 2018 20:21",
                    "updated_at": "March 05, 2018 20:21"
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses/{course_id}/lessons/{id}": {
      "put": {
        "summary": "Update attributes of lesson",
        "tags": [
          "Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "lesson": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "lesson"
              ]
            }
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "lesson": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    }
                  }
                }
              },
              "required": [
                "lesson"
              ]
            },
            "examples": {
              "application/json": {
                "lesson": {
                  "id": 8,
                  "title": "Prohaska, Lowe and Bartoletti",
                  "description": "engineer wireless web services",
                  "status": "active",
                  "user_id": 177,
                  "course_id": 59,
                  "created_at": "March 05, 2018 20:22",
                  "updated_at": "March 05, 2018 20:22",
                  "actions": [

                  ],
                  "course": {
                    "id": 59,
                    "title": "Purdy LLC",
                    "description": "scale user-centric communities",
                    "image": {
                      "url": "/uploads/course/image/59/test.jpg"
                    },
                    "user_id": 178,
                    "organization_id": 183,
                    "created_at": "March 05, 2018 20:22",
                    "updated_at": "March 05, 2018 20:22"
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Lesson with 'id'=0 [WHERE \"lessons\".\"course_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete lesson",
        "tags": [
          "Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting GroupUser account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Lesson with 'id'=0 [WHERE \"lessons\".\"course_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/registrations": {
      "post": {
        "summary": "Sign up",
        "tags": [
          "Sign up"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "user created",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "x-nullable": true
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "admin_role": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "super_admin"
                      ]
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended",
                        "deleted"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "email": {
                      "type": "string"
                    },
                    "confirmation_token": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "unconfirmed_email": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "organization_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "group_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 212,
                  "first_name": null,
                  "last_name": null,
                  "admin_role": "super_admin",
                  "phone_number": null,
                  "date_of_birth": null,
                  "address": null,
                  "country_id": null,
                  "state_id": null,
                  "zip_code": null,
                  "status": "active",
                  "created_at": "March 05, 2018 20:22",
                  "updated_at": "March 05, 2018 20:22",
                  "email": "enoch@zemlak.io",
                  "confirmation_token": "iwG5WTcVxjzqP-GaYudi",
                  "unconfirmed_email": null,
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "organization_ids": [

                  ],
                  "group_ids": [

                  ],
                  "country": null,
                  "state": null
                }
              }
            }
          },
          "400": {
            "description": "registration is fail with existing email",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "items": {
                      "email": "array"
                    }
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "wrong_data",
                "errors": [
                  {
                    "email": [
                      "has already been taken"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions": {
      "delete": {
        "summary": "Destroy a session",
        "tags": [
          "Session"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "session destroyed",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a session",
        "tags": [
          "Session"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "session created",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "x-nullable": true
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "admin_role": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "super_admin"
                      ]
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended",
                        "deleted"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "email": {
                      "type": "string"
                    },
                    "confirmation_token": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "unconfirmed_email": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "organization_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "group_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 216,
                  "first_name": "Robb Feil",
                  "last_name": "Queen Stokes",
                  "admin_role": "super_admin",
                  "phone_number": null,
                  "date_of_birth": null,
                  "address": null,
                  "country_id": 429,
                  "state_id": 215,
                  "zip_code": null,
                  "status": "active",
                  "created_at": "March 05, 2018 20:22",
                  "updated_at": "March 05, 2018 20:22",
                  "email": "maya@franeckicruickshank.org",
                  "confirmation_token": null,
                  "unconfirmed_email": null,
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "organization_ids": [
                    220
                  ],
                  "group_ids": [

                  ],
                  "country": {
                    "id": 429,
                    "code": null,
                    "name": "Canada",
                    "phonecode": null
                  },
                  "state": {
                  }
                },
                "token": "eyJhbGciOiJIUzI1NiJ9.eyJpZCI6MjE2LCJleHAiOjE1NTE4MTczMjIsInR5cGUiOiJ1c2VyIiwiZW1haWwiOiJtYXlhQGZyYW5lY2tpY3J1aWNrc2hhbmsub3JnIn0.1YQkxA-dSHHeZI2tnEispQL30T3e482VmLe3Cxgg-iM"
              }
            }
          },
          "401": {
            "description": "session is fail with wrong email",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "wrong_credentials",
                "errors": [
                  "Error with your login or password"
                ]
              }
            }
          },
          "400": {
            "description": "session is fail if user is not confirmed",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "items": {
                      "email": "array"
                    }
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": 400,
                "errors": [
                  {
                    "email": "email is not confirmed"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "summary": "Get Users inside organization",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "first_name": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "last_name": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "admin_role": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "super_admin"
                        ]
                      },
                      "phone_number": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "date_of_birth": {
                        "type": "date",
                        "x-nullable": true
                      },
                      "address": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "country_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "state_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "zip_code": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "active",
                          "suspended",
                          "deleted"
                        ]
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "email": {
                        "type": "string"
                      },
                      "confirmation_token": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "unconfirmed_email": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "avatar": {
                        "type": "object",
                        "x-nullable": true
                      },
                      "organization_ids": {
                        "type": "array",
                        "items": {
                          "type": "integer",
                          "properties": {
                          }
                        }
                      },
                      "group_ids": {
                        "type": "array",
                        "items": {
                          "type": "integer",
                          "properties": {
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "users"
              ]
            },
            "examples": {
              "application/json": {
                "users": [
                  {
                    "id": 235,
                    "first_name": "Robb Feil",
                    "last_name": "Queen Stokes",
                    "admin_role": "super_admin",
                    "phone_number": null,
                    "date_of_birth": null,
                    "address": null,
                    "country_id": 467,
                    "state_id": 234,
                    "zip_code": null,
                    "status": "active",
                    "created_at": "March 05, 2018 20:22",
                    "updated_at": "March 05, 2018 20:22",
                    "email": "alphonso_white@waelchi.org",
                    "confirmation_token": null,
                    "unconfirmed_email": null,
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      239
                    ],
                    "group_ids": [

                    ],
                    "country": {
                      "id": 467,
                      "code": null,
                      "name": "Canada",
                      "phonecode": null
                    },
                    "state": {
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create User",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "email": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "password_confirmation": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "admin_role": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "super_admin"
                      ]
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended",
                        "deleted"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "email": {
                      "type": "string"
                    },
                    "confirmation_token": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "unconfirmed_email": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "organization_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "group_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 245,
                  "first_name": "Robb Feil",
                  "last_name": "Queen Stokes",
                  "admin_role": "super_admin",
                  "phone_number": null,
                  "date_of_birth": null,
                  "address": null,
                  "country_id": 487,
                  "state_id": 244,
                  "zip_code": null,
                  "status": "active",
                  "created_at": "March 05, 2018 20:22",
                  "updated_at": "March 05, 2018 20:22",
                  "email": "dayton_boyle@padbergrolfson.biz",
                  "confirmation_token": null,
                  "unconfirmed_email": null,
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "organization_ids": [

                  ],
                  "group_ids": [

                  ],
                  "country": {
                    "id": 487,
                    "code": null,
                    "name": "Canada",
                    "phonecode": null
                  },
                  "state": {
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "summary": "Get User Details",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "admin_role": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "super_admin"
                      ]
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended",
                        "deleted"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "email": {
                      "type": "string"
                    },
                    "confirmation_token": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "unconfirmed_email": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "organization_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "group_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 239,
                  "first_name": "Robb Feil",
                  "last_name": "Queen Stokes",
                  "admin_role": "super_admin",
                  "phone_number": null,
                  "date_of_birth": null,
                  "address": null,
                  "country_id": 475,
                  "state_id": 238,
                  "zip_code": null,
                  "status": "active",
                  "created_at": "March 05, 2018 20:22",
                  "updated_at": "March 05, 2018 20:22",
                  "email": "skyla@hauck.name",
                  "confirmation_token": null,
                  "unconfirmed_email": null,
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "organization_ids": [
                    242
                  ],
                  "group_ids": [

                  ],
                  "country": {
                    "id": 475,
                    "code": null,
                    "name": "Canada",
                    "phonecode": null
                  },
                  "state": {
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find User with 'id'=0"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update User Details",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "email": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "password_confirmation": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "organization_users_attributes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "role": {
                            "type": "string",
                            "x-nullable": true,
                            "enum": [
                              "student",
                              "teacher",
                              "admin"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "x-nullable": true,
                            "enum": [
                              "active",
                              "suspended"
                            ]
                          },
                          "exclude_students_ids": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "properties": {
                              }
                            }
                          },
                          "files_controll_enabled": {
                            "type": "boolean",
                            "x-nullable": true
                          },
                          "mesanger_access_enabled": {
                            "type": "boolean",
                            "x-nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "email": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 249,
                  "first_name": "Robb Feil",
                  "last_name": "Queen Stokes",
                  "admin_role": "super_admin",
                  "phone_number": null,
                  "date_of_birth": null,
                  "address": null,
                  "country_id": 497,
                  "state_id": 249,
                  "zip_code": null,
                  "status": "active",
                  "created_at": "March 05, 2018 20:22",
                  "updated_at": "March 05, 2018 20:22",
                  "email": "jacynthe_koch@hodkiewicz.io",
                  "confirmation_token": "DtQsRTFZyEzkUdS1AJsU",
                  "unconfirmed_email": "elia@glover.net",
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "organization_ids": [
                    249
                  ],
                  "group_ids": [

                  ],
                  "country": {
                    "id": 497,
                    "code": null,
                    "name": "Canada",
                    "phonecode": null
                  },
                  "state": {
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find User with 'id'=0"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete User",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting User account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find User with 'id'=0"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}/send_set_password_link": {
      "post": {
        "summary": "Send set password link to user",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns result",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find User with 'id'=0"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{videoable_type}/{videoable_id}/videos": {
      "get": {
        "summary": "Videos",
        "tags": [
          "Videos"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "videoable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "videoable_type",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "videos": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "length": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "video": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "organization_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "videoable_type": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "videoable_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "required": [
                "videos"
              ]
            },
            "examples": {
              "application/json": {
                "videos": [
                  {
                    "id": 1,
                    "title": "Legros-Considine",
                    "length": 100,
                    "video": "#<Rack::Test::UploadedFile:0x007fe4d6ef86d0>",
                    "organization_id": 261,
                    "user_id": 264,
                    "videoable_type": "Organization",
                    "videoable_id": 261,
                    "created_at": "March 05, 2018 20:22",
                    "updated_at": "March 05, 2018 20:22",
                    "videoable": {
                      "id": 261,
                      "title": "Sipes, Baumbach and Schumm",
                      "subdomain": "krisbradtke",
                      "domain": "grant.co",
                      "created_at": "March 05, 2018 20:22",
                      "updated_at": "March 05, 2018 20:22"
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Video",
        "tags": [
          "Videos"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "video": {
                  "type": "object",
                  "properties": {
                    "videoable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "videoable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "video": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "length": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "video"
              ]
            }
          },
          {
            "name": "videoable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "videoable_type",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "video": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "length": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "video": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "videoable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "videoable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    }
                  }
                }
              },
              "required": [
                "video"
              ]
            },
            "examples": {
              "application/json": {
                "video": {
                  "id": null,
                  "title": "Legros-Considine",
                  "length": 100,
                  "video": "#<Rack::Test::UploadedFile:0x007fe4da15fce0>",
                  "organization_id": null,
                  "user_id": 268,
                  "videoable_type": "Organization",
                  "videoable_id": 267,
                  "created_at": null,
                  "updated_at": null,
                  "videoable": {
                    "id": 267,
                    "title": "Sipes, Baumbach and Schumm",
                    "subdomain": "krisbradtke",
                    "domain": "grant.co",
                    "created_at": "March 05, 2018 20:22",
                    "updated_at": "March 05, 2018 20:22"
                  }
                },
                "errors": {
                  "organization": [
                    {
                      "error": "blank"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{videoable_type}/{videoable_id}/videos/{id}": {
      "put": {
        "summary": "Update Video",
        "tags": [
          "Videos"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "video": {
                  "type": "object",
                  "properties": {
                    "videoable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "videoable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "video": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "length": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "video"
              ]
            }
          },
          {
            "name": "videoable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "videoable_type",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "video": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "length": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "video": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "videoable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "videoable_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "video"
              ]
            },
            "examples": {
              "application/json": {
                "video": {
                  "id": 7,
                  "title": "Legros-Considine",
                  "length": 100,
                  "video": "#<Rack::Test::UploadedFile:0x007fe4d96cf0a0>",
                  "organization_id": 270,
                  "user_id": 273,
                  "videoable_type": "Organization",
                  "videoable_id": 273,
                  "created_at": "March 05, 2018 20:22",
                  "updated_at": "March 05, 2018 20:22",
                  "videoable": {
                    "id": 273,
                    "title": "Sipes, Baumbach and Schumm",
                    "subdomain": "krisbradtke",
                    "domain": "grant.co",
                    "created_at": "March 05, 2018 20:22",
                    "updated_at": "March 05, 2018 20:22"
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Video with 'id'=0 [WHERE \"videos\".\"videoable_id\" = $1 AND \"videos\".\"videoable_type\" = $2]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Video",
        "tags": [
          "Videos"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "videoable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "videoable_type",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Video account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Video with 'id'=0 [WHERE \"videos\".\"videoable_id\" = $1 AND \"videos\".\"videoable_type\" = $2]"
                ]
              }
            }
          }
        }
      }
    }
  }
}