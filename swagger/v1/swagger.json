{
  "swagger": "2.0",
  "info": {
    "title": "API V1",
    "version": "v1"
  },
  "paths": {
    "/api/v1/groups/{group_id}/course_groups": {
      "post": {
        "summary": "Add Course to group",
        "tags": [
          "Courses vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course_group": {
                  "type": "object",
                  "properties": {
                    "complete_lesson_can": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "teacher",
                        "student",
                        "all"
                      ]
                    },
                    "discussing_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "files_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "precourse_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "reports_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "student_content_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "course_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course_group"
              ]
            }
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "course_group": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "course_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "group_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "precourse_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "complete_lesson_can": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "teacher",
                        "student",
                        "all"
                      ]
                    },
                    "reports_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "files_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "discussing_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "student_content_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    }
                  }
                }
              },
              "required": [
                "course_group"
              ]
            },
            "examples": {
              "application/json": {
                "course_group": {
                  "id": 2,
                  "course_id": 3,
                  "group_id": 1,
                  "precourse_id": 4,
                  "complete_lesson_can": "all",
                  "reports_enabled": true,
                  "files_enabled": true,
                  "discussing_enabled": true,
                  "student_content_enabled": true,
                  "status": "active",
                  "created_at": "March 02, 2018 19:27",
                  "updated_at": "March 02, 2018 19:27"
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/course_groups/{id}": {
      "put": {
        "summary": "Update Course in group",
        "tags": [
          "Courses vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course_group": {
                  "type": "object",
                  "properties": {
                    "complete_lesson_can": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "teacher",
                        "student",
                        "all"
                      ]
                    },
                    "discussing_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "files_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "precourse_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "reports_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "student_content_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course_group"
              ]
            }
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "course_group": {
                  "type": "object",
                  "properties": {
                    "precourse_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "complete_lesson_can": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "teacher",
                        "student",
                        "all"
                      ]
                    },
                    "reports_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "files_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "discussing_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "student_content_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    }
                  }
                }
              },
              "required": [
                "course_group"
              ]
            },
            "examples": {
              "application/json": {
                "course_group": {
                  "id": 5,
                  "course_id": 9,
                  "group_id": 5,
                  "precourse_id": 12,
                  "complete_lesson_can": "all",
                  "reports_enabled": true,
                  "files_enabled": true,
                  "discussing_enabled": true,
                  "student_content_enabled": true,
                  "status": "active",
                  "created_at": "March 02, 2018 19:27",
                  "updated_at": "March 02, 2018 19:27"
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find CourseGroup with 'id'=0 [WHERE \"course_groups\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Course from group",
        "tags": [
          "Courses vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting CourseGroup account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find CourseGroup with 'id'=0 [WHERE \"course_groups\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses": {
      "get": {
        "summary": "Get Courses inside organization",
        "tags": [
          "Courses"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "courses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "image": {
                        "type": "object",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "organization_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "required": [
                "courses"
              ]
            },
            "examples": {
              "application/json": {
                "courses": [
                  {
                    "id": 27,
                    "title": "Bahringer and Sons",
                    "description": "enhance dot-com partnerships",
                    "image": {
                      "url": "/uploads/course/image/27/test.jpg"
                    },
                    "user_id": 42,
                    "organization_id": 55,
                    "created_at": "March 02, 2018 19:27",
                    "updated_at": "March 02, 2018 19:27",
                    "user": {
                      "id": 42,
                      "first_name": "Ms. Dimitri Ernser",
                      "last_name": "Thalia Casper",
                      "admin_role": "super_admin",
                      "phone_number": null,
                      "date_of_birth": null,
                      "address": null,
                      "country_id": 83,
                      "state_id": 42,
                      "zip_code": null,
                      "status": "active",
                      "created_at": "March 02, 2018 19:27",
                      "updated_at": "March 02, 2018 19:27",
                      "email": "juston.kovacek@schillerlangworth.name",
                      "confirmation_token": null,
                      "unconfirmed_email": null,
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "organization_ids": [
                        56
                      ],
                      "group_ids": [

                      ]
                    },
                    "organization": {
                      "id": 55,
                      "title": "Moen, Reichel and Wisoky",
                      "subdomain": "zboncak",
                      "domain": "quitzon.io",
                      "created_at": "March 02, 2018 19:27",
                      "updated_at": "March 02, 2018 19:27"
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Course",
        "tags": [
          "Courses"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "image": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "image": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    }
                  }
                }
              },
              "required": [
                "course"
              ]
            },
            "examples": {
              "application/json": {
                "course": {
                  "id": 35,
                  "title": "Bahringer and Sons",
                  "description": "enhance dot-com partnerships",
                  "image": {
                    "url": null
                  },
                  "user_id": 57,
                  "organization_id": 69,
                  "created_at": "March 02, 2018 19:27",
                  "updated_at": "March 02, 2018 19:27",
                  "user": {
                    "id": 57,
                    "first_name": "Ms. Dimitri Ernser",
                    "last_name": "Thalia Casper",
                    "admin_role": "super_admin",
                    "phone_number": null,
                    "date_of_birth": null,
                    "address": null,
                    "country_id": 113,
                    "state_id": 57,
                    "zip_code": null,
                    "status": "active",
                    "created_at": "March 02, 2018 19:27",
                    "updated_at": "March 02, 2018 19:27",
                    "email": "robin@harris.name",
                    "confirmation_token": null,
                    "unconfirmed_email": null,
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      69
                    ],
                    "group_ids": [

                    ]
                  },
                  "organization": {
                    "id": 69,
                    "title": "Moen, Reichel and Wisoky",
                    "subdomain": "zboncak",
                    "domain": "quitzon.io",
                    "created_at": "March 02, 2018 19:27",
                    "updated_at": "March 02, 2018 19:27"
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses/{id}": {
      "get": {
        "summary": "Get Course Details",
        "tags": [
          "Courses"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "image": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    }
                  }
                }
              },
              "required": [
                "course"
              ]
            },
            "examples": {
              "application/json": {
                "course": {
                  "id": 30,
                  "title": "Bahringer and Sons",
                  "description": "enhance dot-com partnerships",
                  "image": {
                    "url": "/uploads/course/image/30/test.jpg"
                  },
                  "user_id": 49,
                  "organization_id": 61,
                  "created_at": "March 02, 2018 19:27",
                  "updated_at": "March 02, 2018 19:27",
                  "user": {
                    "id": 49,
                    "first_name": "Ms. Dimitri Ernser",
                    "last_name": "Thalia Casper",
                    "admin_role": "super_admin",
                    "phone_number": null,
                    "date_of_birth": null,
                    "address": null,
                    "country_id": 97,
                    "state_id": 49,
                    "zip_code": null,
                    "status": "active",
                    "created_at": "March 02, 2018 19:27",
                    "updated_at": "March 02, 2018 19:27",
                    "email": "eileen_gulgowski@feil.com",
                    "confirmation_token": null,
                    "unconfirmed_email": null,
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      62
                    ],
                    "group_ids": [

                    ]
                  },
                  "organization": {
                    "id": 61,
                    "title": "Moen, Reichel and Wisoky",
                    "subdomain": "zboncak",
                    "domain": "quitzon.io",
                    "created_at": "March 02, 2018 19:27",
                    "updated_at": "March 02, 2018 19:27"
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Course with 'id'=0 [WHERE \"courses\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Course Details",
        "tags": [
          "Courses"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "image": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "image": {
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course"
              ]
            },
            "examples": {
              "application/json": {
                "course": {
                  "id": 38,
                  "title": "Bahringer and Sons",
                  "description": "enhance dot-com partnerships",
                  "image": {
                    "url": "/uploads/course/image/38/test.jpg"
                  },
                  "user_id": 66,
                  "organization_id": 77,
                  "created_at": "March 02, 2018 19:27",
                  "updated_at": "March 02, 2018 19:27",
                  "user": {
                    "id": 66,
                    "first_name": "Ms. Dimitri Ernser",
                    "last_name": "Thalia Casper",
                    "admin_role": "super_admin",
                    "phone_number": null,
                    "date_of_birth": null,
                    "address": null,
                    "country_id": 131,
                    "state_id": 66,
                    "zip_code": null,
                    "status": "active",
                    "created_at": "March 02, 2018 19:27",
                    "updated_at": "March 02, 2018 19:27",
                    "email": "howard@bauchgulgowski.co",
                    "confirmation_token": null,
                    "unconfirmed_email": null,
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      78
                    ],
                    "group_ids": [

                    ]
                  },
                  "organization": {
                    "id": 77,
                    "title": "Moen, Reichel and Wisoky",
                    "subdomain": "zboncak",
                    "domain": "quitzon.io",
                    "created_at": "March 02, 2018 19:27",
                    "updated_at": "March 02, 2018 19:27"
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Course with 'id'=0 [WHERE \"courses\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Course",
        "tags": [
          "Courses"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Course account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Course with 'id'=0 [WHERE \"courses\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/group_users": {
      "get": {
        "summary": "Users in group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "status",
            "in": "body",
            "type": "string",
            "enum": [
              "active",
              "pause"
            ],
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "group_users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "group_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "active",
                          "pause"
                        ]
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "role": {
                        "type": "string"
                      },
                      "organization_id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "required": [
                "group_users"
              ]
            },
            "examples": {
              "application/json": {
                "group_users": [
                  {
                    "id": 1,
                    "first_name": "Ms. Dimitri Ernser",
                    "last_name": "Thalia Casper",
                    "role": "admin",
                    "organization_id": 95
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add User to group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "group_user": {
                  "type": "object",
                  "properties": {
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "group_user"
              ]
            }
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "status",
            "in": "body",
            "type": "string",
            "enum": [
              "active",
              "pause"
            ],
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "group_user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "group_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string"
                    },
                    "organization_id": {
                      "type": "integer"
                    }
                  }
                }
              },
              "required": [
                "group_user"
              ]
            },
            "examples": {
              "application/json": {
                "group_user": {
                  "id": 5,
                  "user_id": 89,
                  "group_id": 17,
                  "created_at": "March 02, 2018 19:27",
                  "updated_at": "March 02, 2018 19:27",
                  "status": "active",
                  "first_name": "Ms. Dimitri Ernser",
                  "last_name": "Thalia Casper",
                  "role": "",
                  "organization_id": 98
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/group_users/{id}": {
      "put": {
        "summary": "Change status of user in group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "group_user": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    }
                  }
                }
              },
              "required": [
                "group_user"
              ]
            }
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "status",
            "in": "body",
            "type": "string",
            "enum": [
              "active",
              "pause"
            ],
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "group_user": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    }
                  }
                }
              },
              "required": [
                "group_user"
              ]
            },
            "examples": {
              "application/json": {
                "group_user": {
                  "id": 8,
                  "user_id": 93,
                  "group_id": 21,
                  "created_at": "March 02, 2018 19:27",
                  "updated_at": "March 02, 2018 19:27",
                  "status": "active",
                  "first_name": "Ms. Dimitri Ernser",
                  "last_name": "Thalia Casper",
                  "role": "admin",
                  "organization_id": 103
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find GroupUser with 'id'=0 [WHERE \"group_users\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user from group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "status",
            "in": "body",
            "type": "string",
            "enum": [
              "active",
              "pause"
            ],
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting GroupUser account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find GroupUser with 'id'=0 [WHERE \"group_users\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/group_users/batch_update": {
      "put": {
        "summary": "Change status of batch users in group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "status",
            "in": "body",
            "type": "string",
            "enum": [
              "active",
              "pause"
            ],
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns status and errors",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                },
                "errors": {
                  "type": "array"
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "errors": [

                ],
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups": {
      "get": {
        "summary": "Get Groups inside organization",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "groups": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "organization_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "active",
                          "pause"
                        ]
                      },
                      "user_limit": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "visibility": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "private",
                          "public"
                        ]
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "count_participants": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "user_ids": {
                        "type": "array"
                      }
                    }
                  }
                }
              },
              "required": [
                "groups"
              ]
            },
            "examples": {
              "application/json": {
                "groups": [
                  {
                    "id": 33,
                    "organization_id": 116,
                    "title": "Renner LLC",
                    "description": "brand ubiquitous experiences",
                    "status": "active",
                    "user_limit": 10,
                    "visibility": "public",
                    "created_at": "March 02, 2018 19:27",
                    "updated_at": "March 02, 2018 19:27",
                    "count_participants": null,
                    "user_id": null,
                    "user_ids": [

                    ],
                    "organization": {
                      "id": 116,
                      "title": "Moen, Reichel and Wisoky",
                      "subdomain": "zboncak",
                      "domain": "quitzon.io",
                      "created_at": "March 02, 2018 19:27",
                      "updated_at": "March 02, 2018 19:27"
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Group",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "user_limit": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "visibility": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "private",
                        "public"
                      ]
                    }
                  }
                }
              },
              "required": [
                "group"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "user_limit": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "visibility": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "private",
                        "public"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "count_participants": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_ids": {
                      "type": "array"
                    }
                  }
                }
              },
              "required": [
                "group"
              ]
            },
            "examples": {
              "application/json": {
                "group": {
                  "id": 41,
                  "organization_id": 123,
                  "title": "Renner LLC",
                  "description": "brand ubiquitous experiences",
                  "status": "active",
                  "user_limit": 10,
                  "visibility": "public",
                  "created_at": "March 02, 2018 19:27",
                  "updated_at": "March 02, 2018 19:27",
                  "count_participants": null,
                  "user_id": 117,
                  "user_ids": [

                  ],
                  "organization": {
                    "id": 123,
                    "title": "Moen, Reichel and Wisoky",
                    "subdomain": "zboncak",
                    "domain": "quitzon.io",
                    "created_at": "March 02, 2018 19:27",
                    "updated_at": "March 02, 2018 19:27"
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{id}": {
      "get": {
        "summary": "Get Group Details",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "user_limit": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "visibility": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "private",
                        "public"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "count_participants": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_ids": {
                      "type": "array"
                    }
                  }
                }
              },
              "required": [
                "group"
              ]
            },
            "examples": {
              "application/json": {
                "group": {
                  "id": 36,
                  "organization_id": 119,
                  "title": "Renner LLC",
                  "description": "brand ubiquitous experiences",
                  "status": "active",
                  "user_limit": 10,
                  "visibility": "public",
                  "created_at": "March 02, 2018 19:27",
                  "updated_at": "March 02, 2018 19:27",
                  "count_participants": null,
                  "user_id": null,
                  "user_ids": [

                  ],
                  "organization": {
                    "id": 119,
                    "title": "Moen, Reichel and Wisoky",
                    "subdomain": "zboncak",
                    "domain": "quitzon.io",
                    "created_at": "March 02, 2018 19:27",
                    "updated_at": "March 02, 2018 19:27"
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Group with 'id'=0 [WHERE \"groups\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Group Details",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "user_limit": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "visibility": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "private",
                        "public"
                      ]
                    }
                  }
                }
              },
              "required": [
                "group"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "user_limit": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "visibility": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "private",
                        "public"
                      ]
                    }
                  }
                }
              },
              "required": [
                "group"
              ]
            },
            "examples": {
              "application/json": {
                "group": {
                  "id": 44,
                  "organization_id": 127,
                  "title": "Renner LLC",
                  "description": "brand ubiquitous experiences",
                  "status": "active",
                  "user_limit": 10,
                  "visibility": "public",
                  "created_at": "March 02, 2018 19:27",
                  "updated_at": "March 02, 2018 19:27",
                  "count_participants": null,
                  "user_id": null,
                  "user_ids": [

                  ],
                  "organization": {
                    "id": 127,
                    "title": "Moen, Reichel and Wisoky",
                    "subdomain": "zboncak",
                    "domain": "quitzon.io",
                    "created_at": "March 02, 2018 19:27",
                    "updated_at": "March 02, 2018 19:27"
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Group with 'id'=0 [WHERE \"groups\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Group",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Group account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Group with 'id'=0 [WHERE \"groups\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/registrations": {
      "post": {
        "summary": "Sign up",
        "tags": [
          "Sign up"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "user created",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "x-nullable": true
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "admin_role": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "super_admin"
                      ]
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended",
                        "deleted"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "email": {
                      "type": "string"
                    },
                    "confirmation_token": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "unconfirmed_email": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "organization_ids": {
                      "type": "array"
                    },
                    "group_ids": {
                      "type": "array"
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 146,
                  "first_name": null,
                  "last_name": null,
                  "admin_role": "super_admin",
                  "phone_number": null,
                  "date_of_birth": null,
                  "address": null,
                  "country_id": null,
                  "state_id": null,
                  "zip_code": null,
                  "status": "active",
                  "created_at": "March 02, 2018 19:27",
                  "updated_at": "March 02, 2018 19:27",
                  "email": "estrella.beier@ernser.info",
                  "confirmation_token": "gMM4cNvebWAbifCn-bg_",
                  "unconfirmed_email": null,
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "organization_ids": [

                  ],
                  "group_ids": [

                  ],
                  "country": null,
                  "state": null
                }
              }
            }
          },
          "400": {
            "description": "registration is fail with existing email",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "items": {
                      "email": "array"
                    }
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "wrong_data",
                "errors": [
                  {
                    "email": [
                      "has already been taken"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions": {
      "delete": {
        "summary": "Destroy a session",
        "tags": [
          "Session"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "session destroyed",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a session",
        "tags": [
          "Session"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "session created",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "x-nullable": true
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "admin_role": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "super_admin"
                      ]
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended",
                        "deleted"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "email": {
                      "type": "string"
                    },
                    "confirmation_token": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "unconfirmed_email": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "organization_ids": {
                      "type": "array"
                    },
                    "group_ids": {
                      "type": "array"
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 150,
                  "first_name": "Ms. Dimitri Ernser",
                  "last_name": "Thalia Casper",
                  "admin_role": "super_admin",
                  "phone_number": null,
                  "date_of_birth": null,
                  "address": null,
                  "country_id": 297,
                  "state_id": 149,
                  "zip_code": null,
                  "status": "active",
                  "created_at": "March 02, 2018 19:27",
                  "updated_at": "March 02, 2018 19:27",
                  "email": "amparo@gusikowskimcclure.org",
                  "confirmation_token": null,
                  "unconfirmed_email": null,
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "organization_ids": [
                    154
                  ],
                  "group_ids": [

                  ],
                  "country": {
                    "id": 297,
                    "code": null,
                    "name": "Canada",
                    "phonecode": null
                  },
                  "state": {
                  }
                },
                "token": "eyJhbGciOiJIUzI1NiJ9.eyJpZCI6MTUwLCJleHAiOjE1NTE1NTQ4NzgsInR5cGUiOiJ1c2VyIiwiZW1haWwiOiJhbXBhcm9AZ3VzaWtvd3NraW1jY2x1cmUub3JnIn0.cp7Zelw3cAfplmf1irHE8LEuqdqcMAFG7QXhr9Nvs_U"
              }
            }
          },
          "401": {
            "description": "session is fail with wrong email",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "wrong_credentials",
                "errors": [
                  "Error with your login or password"
                ]
              }
            }
          },
          "400": {
            "description": "session is fail if user is not confirmed",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "items": {
                      "email": "array"
                    }
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": 400,
                "errors": [
                  {
                    "email": "email is not confirmed"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "summary": "Get Users inside organization",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "first_name": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "last_name": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "admin_role": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "super_admin"
                        ]
                      },
                      "phone_number": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "date_of_birth": {
                        "type": "date",
                        "x-nullable": true
                      },
                      "address": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "country_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "state_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "zip_code": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "active",
                          "suspended",
                          "deleted"
                        ]
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "email": {
                        "type": "string"
                      },
                      "confirmation_token": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "unconfirmed_email": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "avatar": {
                        "type": "object",
                        "x-nullable": true
                      },
                      "organization_ids": {
                        "type": "array"
                      },
                      "group_ids": {
                        "type": "array"
                      }
                    }
                  }
                }
              },
              "required": [
                "users"
              ]
            },
            "examples": {
              "application/json": {
                "users": [
                  {
                    "id": 169,
                    "first_name": "Ms. Dimitri Ernser",
                    "last_name": "Thalia Casper",
                    "admin_role": "super_admin",
                    "phone_number": null,
                    "date_of_birth": null,
                    "address": null,
                    "country_id": 335,
                    "state_id": 168,
                    "zip_code": null,
                    "status": "active",
                    "created_at": "March 02, 2018 19:27",
                    "updated_at": "March 02, 2018 19:28",
                    "email": "durward_toy@lakinmoore.net",
                    "confirmation_token": null,
                    "unconfirmed_email": null,
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      173
                    ],
                    "group_ids": [

                    ],
                    "country": {
                      "id": 335,
                      "code": null,
                      "name": "Canada",
                      "phonecode": null
                    },
                    "state": {
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create User",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "email": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    },
                    "password_confirmation": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "admin_role": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "super_admin"
                      ]
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended",
                        "deleted"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "email": {
                      "type": "string"
                    },
                    "confirmation_token": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "unconfirmed_email": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "organization_ids": {
                      "type": "array"
                    },
                    "group_ids": {
                      "type": "array"
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 179,
                  "first_name": "Ms. Dimitri Ernser",
                  "last_name": "Thalia Casper",
                  "admin_role": "super_admin",
                  "phone_number": null,
                  "date_of_birth": null,
                  "address": null,
                  "country_id": 355,
                  "state_id": 178,
                  "zip_code": null,
                  "status": "active",
                  "created_at": "March 02, 2018 19:28",
                  "updated_at": "March 02, 2018 19:28",
                  "email": "herminia@roob.co",
                  "confirmation_token": null,
                  "unconfirmed_email": null,
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "organization_ids": [

                  ],
                  "group_ids": [

                  ],
                  "country": {
                    "id": 355,
                    "code": null,
                    "name": "Canada",
                    "phonecode": null
                  },
                  "state": {
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "summary": "Get User Details",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "admin_role": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "super_admin"
                      ]
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended",
                        "deleted"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "email": {
                      "type": "string"
                    },
                    "confirmation_token": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "unconfirmed_email": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "organization_ids": {
                      "type": "array"
                    },
                    "group_ids": {
                      "type": "array"
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 173,
                  "first_name": "Ms. Dimitri Ernser",
                  "last_name": "Thalia Casper",
                  "admin_role": "super_admin",
                  "phone_number": null,
                  "date_of_birth": null,
                  "address": null,
                  "country_id": 343,
                  "state_id": 172,
                  "zip_code": null,
                  "status": "active",
                  "created_at": "March 02, 2018 19:28",
                  "updated_at": "March 02, 2018 19:28",
                  "email": "jon.von@mraz.io",
                  "confirmation_token": null,
                  "unconfirmed_email": null,
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "organization_ids": [
                    176
                  ],
                  "group_ids": [

                  ],
                  "country": {
                    "id": 343,
                    "code": null,
                    "name": "Canada",
                    "phonecode": null
                  },
                  "state": {
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find User with 'id'=0"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update User Details",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "email": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    },
                    "password_confirmation": {
                      "type": "string"
                    },
                    "organization_users_attributes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "role": {
                            "type": "string",
                            "x-nullable": true,
                            "enum": [
                              "student",
                              "teacher",
                              "admin"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "x-nullable": true,
                            "enum": [
                              "active",
                              "suspended"
                            ]
                          },
                          "exclude_students_ids": {
                            "type": "text",
                            "x-nullable": true
                          },
                          "files_controll_enabled": {
                            "type": "boolean",
                            "x-nullable": true
                          },
                          "mesanger_access_enabled": {
                            "type": "boolean",
                            "x-nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "email": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 183,
                  "first_name": "Ms. Dimitri Ernser",
                  "last_name": "Thalia Casper",
                  "admin_role": "super_admin",
                  "phone_number": null,
                  "date_of_birth": null,
                  "address": null,
                  "country_id": 365,
                  "state_id": 183,
                  "zip_code": null,
                  "status": "active",
                  "created_at": "March 02, 2018 19:28",
                  "updated_at": "March 02, 2018 19:28",
                  "email": "hilda@littlegrady.co",
                  "confirmation_token": "ECpQ9MW-5wF4iqrrXyTR",
                  "unconfirmed_email": "jairo@toyhahn.info",
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "organization_ids": [
                    183
                  ],
                  "group_ids": [

                  ],
                  "country": {
                    "id": 365,
                    "code": null,
                    "name": "Canada",
                    "phonecode": null
                  },
                  "state": {
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find User with 'id'=0"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete User",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting User account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find User with 'id'=0"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}/send_set_password_link": {
      "post": {
        "summary": "Send set password link to user",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns result",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find User with 'id'=0"
                ]
              }
            }
          }
        }
      }
    }
  }
}