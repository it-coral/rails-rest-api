{
  "swagger": "2.0",
  "info": {
    "title": "API V1",
    "version": "v1"
  },
  "paths": {
    "/api/v1/{notifiable_type}/{notifiable_id}/activities": {
      "get": {
        "summary": "Activity",
        "tags": [
          "Activities"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "notifiable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "notifiable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "User",
              "Group"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "activities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "eventable_type": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "eventable_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "notifiable_type": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "notifiable_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "message": {
                        "type": "jsonb"
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "pending",
                          "sent",
                          "read"
                        ]
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "required": [
                "activities"
              ]
            },
            "examples": {
              "application/json": {
                "activities": [
                  {
                    "id": 1,
                    "eventable_type": "Comment",
                    "eventable_id": 1,
                    "notifiable_type": "User",
                    "notifiable_id": 1,
                    "message": {
                      "plain_text": "Voluptas autem nesciunt ea harum consequatur aut."
                    },
                    "status": "pending",
                    "created_at": "April 08, 2018 17:52",
                    "updated_at": "April 08, 2018 17:52",
                    "eventable": {
                      "id": 1,
                      "commentable_id": 1,
                      "commentable_type": "Group",
                      "title": "Dolor culpa unde illum quis vero perferendis.",
                      "body": "Deleniti quam accusamus sed unde aut repellendus. Qui rerum dolorem suscipit. Quo vel eaque perferendis delectus minima.",
                      "user_id": 2,
                      "root_id": 0,
                      "main_root_id": 1,
                      "created_at": "April 08, 2018 17:52",
                      "updated_at": "April 08, 2018 17:52",
                      "tree_path": [
                        "1"
                      ],
                      "user": {
                        "id": 2,
                        "first_name": "Reanna Hoppe",
                        "last_name": "Levi Runolfsson",
                        "phone_number": "",
                        "date_of_birth": null,
                        "address": "",
                        "country_id": 3,
                        "state_id": 2,
                        "zip_code": "",
                        "status": "active",
                        "created_at": "April 08, 2018 17:52",
                        "updated_at": "April 08, 2018 17:52",
                        "email": "meta@zulauf.net",
                        "avatar": {
                          "url": null,
                          "small": {
                            "url": null
                          },
                          "middle": {
                            "url": null
                          }
                        },
                        "organization_ids": [
                          3
                        ],
                        "roles": null,
                        "group_ids": [

                        ],
                        "organization_settings": null
                      }
                    },
                    "notifiable": {
                      "id": 1,
                      "first_name": "Reanna Hoppe",
                      "last_name": "Levi Runolfsson",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 1,
                      "state_id": 1,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "April 08, 2018 17:52",
                      "updated_at": "April 08, 2018 17:52",
                      "email": "eino@shanahanoreilly.biz",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "organization_ids": [
                        1
                      ],
                      "roles": null,
                      "group_ids": [

                      ],
                      "organization_settings": {
                        "id": 1,
                        "user_id": 1,
                        "organization_id": 1,
                        "role": "admin",
                        "created_at": "April 08, 2018 17:52",
                        "updated_at": "April 08, 2018 17:52",
                        "status": "active",
                        "exclude_students_ids": [

                        ],
                        "files_controll_enabled": false,
                        "messanger_access_enabled": false
                      }
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{notifiable_type}/{notifiable_id}/activities/{id}": {
      "put": {
        "summary": "Update status of Activity",
        "tags": [
          "Activities"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "notifiable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "notifiable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "User",
              "Group"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "activity": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "pending",
                        "sent",
                        "read"
                      ]
                    }
                  }
                }
              },
              "required": [
                "activity"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "activity": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "pending",
                        "sent",
                        "read"
                      ]
                    }
                  }
                }
              },
              "required": [
                "activity"
              ]
            },
            "examples": {
              "application/json": {
                "activity": {
                  "id": 6,
                  "eventable_type": "Comment",
                  "eventable_id": 4,
                  "notifiable_type": "User",
                  "notifiable_id": 8,
                  "message": {
                    "plain_text": "Qui nihil maxime ullam minus adipisci."
                  },
                  "status": "pending",
                  "created_at": "April 08, 2018 17:52",
                  "updated_at": "April 08, 2018 17:52",
                  "eventable": {
                    "id": 4,
                    "commentable_id": 4,
                    "commentable_type": "Group",
                    "title": "Dolor culpa unde illum quis vero perferendis.",
                    "body": "Deleniti quam accusamus sed unde aut repellendus. Qui rerum dolorem suscipit. Quo vel eaque perferendis delectus minima.",
                    "user_id": 9,
                    "root_id": 0,
                    "main_root_id": 4,
                    "created_at": "April 08, 2018 17:52",
                    "updated_at": "April 08, 2018 17:52",
                    "tree_path": [
                      "4"
                    ],
                    "user": {
                      "id": 9,
                      "first_name": "Reanna Hoppe",
                      "last_name": "Levi Runolfsson",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 17,
                      "state_id": 9,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "April 08, 2018 17:52",
                      "updated_at": "April 08, 2018 17:52",
                      "email": "stephan.gottlieb@heathcote.name",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "organization_ids": [
                        12
                      ],
                      "roles": null,
                      "group_ids": [

                      ],
                      "organization_settings": null
                    }
                  },
                  "notifiable": {
                    "id": 8,
                    "first_name": "Reanna Hoppe",
                    "last_name": "Levi Runolfsson",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 15,
                    "state_id": 8,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "April 08, 2018 17:52",
                    "updated_at": "April 08, 2018 17:52",
                    "email": "edison@bauch.io",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      10
                    ],
                    "roles": null,
                    "group_ids": [

                    ],
                    "organization_settings": {
                      "id": 7,
                      "user_id": 8,
                      "organization_id": 10,
                      "role": "admin",
                      "created_at": "April 08, 2018 17:52",
                      "updated_at": "April 08, 2018 17:52",
                      "status": "active",
                      "exclude_students_ids": [

                      ],
                      "files_controll_enabled": false,
                      "messanger_access_enabled": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Activity with 'id'=0 [WHERE \"activities\".\"notifiable_id\" = $1 AND \"activities\".\"notifiable_type\" = $2]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Activity",
        "tags": [
          "Activities"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "notifiable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "notifiable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "User",
              "Group"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Activity account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Activity with 'id'=0 [WHERE \"activities\".\"notifiable_id\" = $1 AND \"activities\".\"notifiable_type\" = $2]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses": {
      "get": {
        "summary": "Get Courses inside organization",
        "tags": [
          "Admin - Course"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "get courses from specific group"
          },
          {
            "name": "term",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "term for searching by [:title, :description]"
          },
          {
            "name": "sort_field",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "title",
              "created_at",
              "lessons_count",
              "active_user_ids"
            ],
            "description": "field for sorting"
          },
          {
            "name": "sort_flag",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "ASC",
              "DESC"
            ],
            "description": "flag for sorting"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "courses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "image": {
                        "type": "object",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "organization_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "lessons_count": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "group_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "integer",
                          "properties": {
                          }
                        }
                      },
                      "active_user_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "integer",
                          "properties": {
                          }
                        }
                      },
                      "course_users_state": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "string",
                          "properties": {
                          }
                        }
                      },
                      "course_for_current_user": {
                        "description": "information about user's association to this course",
                        "type": "object",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "courses"
              ]
            },
            "examples": {
              "application/json": {
                "courses": [
                  {
                    "id": 1,
                    "title": "Boehm, Schulist and Leffler",
                    "description": "aggregate open-source e-business",
                    "image": {
                      "url": "https://equipengine-dev.s3-eu-west-2.amazonaws.com/uploads/course/image/1/image.jpeg?X-Amz-Expires=600&X-Amz-Date=20180408T175248Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ4HLSQCUSVYCXNUA/20180408/eu-west-2/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=37bff29774e9255ada11b10415e5ed031f50e29502fd3242dc1782a412d0e95c"
                    },
                    "user_id": 29,
                    "organization_id": 37,
                    "created_at": "2018-04-08T17:52:46.681Z",
                    "updated_at": "2018-04-08T17:52:46.681Z",
                    "lessons_count": 0,
                    "group_ids": [

                    ],
                    "active_user_ids": [

                    ],
                    "course_users_state": [

                    ],
                    "course_for_current_user": null
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Course",
        "tags": [
          "Admin - Course"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "image": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "image": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "lessons_count": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "active_user_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "course_users_state": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "string",
                        "properties": {
                        }
                      }
                    },
                    "course_for_current_user": {
                      "description": "information about user's association to this course",
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course"
              ]
            },
            "examples": {
              "application/json": {
                "course": {
                  "id": 9,
                  "title": "Boehm, Schulist and Leffler",
                  "description": "aggregate open-source e-business",
                  "image": {
                    "url": null
                  },
                  "user_id": 44,
                  "organization_id": 51,
                  "created_at": "April 08, 2018 17:52",
                  "updated_at": "April 08, 2018 17:52",
                  "lessons_count": 0,
                  "group_ids": [

                  ],
                  "active_user_ids": null,
                  "course_users_state": null,
                  "course_for_current_user": null
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses/{id}": {
      "get": {
        "summary": "Get Course Details",
        "tags": [
          "Admin - Course"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "image": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "lessons_count": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "active_user_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "course_users_state": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "string",
                        "properties": {
                        }
                      }
                    },
                    "course_for_current_user": {
                      "description": "information about user's association to this course",
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course"
              ]
            },
            "examples": {
              "application/json": {
                "course": {
                  "id": 4,
                  "title": "Boehm, Schulist and Leffler",
                  "description": "aggregate open-source e-business",
                  "image": {
                    "url": "https://equipengine-dev.s3-eu-west-2.amazonaws.com/uploads/course/image/4/image.jpeg?X-Amz-Expires=600&X-Amz-Date=20180408T175252Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ4HLSQCUSVYCXNUA/20180408/eu-west-2/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=a45dda97c9fe64b8161101720de438bae8ff80760d436caad6cef71ebc33b505"
                  },
                  "user_id": 36,
                  "organization_id": 43,
                  "created_at": "April 08, 2018 17:52",
                  "updated_at": "April 08, 2018 17:52",
                  "lessons_count": 0,
                  "group_ids": [

                  ],
                  "active_user_ids": null,
                  "course_users_state": null,
                  "course_for_current_user": null
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Course with 'id'=0 [WHERE \"courses\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Course Details",
        "tags": [
          "Admin - Course"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "image": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "image": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "lesson_users": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "course"
              ]
            },
            "examples": {
              "application/json": {
                "course": {
                  "id": 12,
                  "title": "Boehm, Schulist and Leffler",
                  "description": "aggregate open-source e-business",
                  "image": {
                    "url": "https://equipengine-dev.s3-eu-west-2.amazonaws.com/uploads/course/image/12/image.jpeg?X-Amz-Expires=600&X-Amz-Date=20180408T175300Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ4HLSQCUSVYCXNUA/20180408/eu-west-2/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=4d0ebb8176d7fbf1467152441d880dc856f72c00b6352e2799e4a659ed0c5dcd"
                  },
                  "user_id": 53,
                  "organization_id": 59,
                  "created_at": "April 08, 2018 17:52",
                  "updated_at": "April 08, 2018 17:52",
                  "lessons_count": 0,
                  "group_ids": [

                  ],
                  "active_user_ids": null,
                  "course_users_state": null,
                  "course_for_current_user": null
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Course with 'id'=0 [WHERE \"courses\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Course",
        "tags": [
          "Admin - Course"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Course account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Course with 'id'=0 [WHERE \"courses\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses/{course_id}/lessons": {
      "get": {
        "summary": "Lessons for course",
        "tags": [
          "Admin - Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "lessons": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "active",
                          "pause"
                        ]
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "course_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "course_settings": {
                        "description": "course settings for current group",
                        "type": "object",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "lessons"
              ]
            },
            "examples": {
              "application/json": {
                "lessons": [
                  {
                    "id": 1,
                    "title": "Mayert LLC",
                    "description": "reinvent collaborative action-items",
                    "status": "active",
                    "user_id": 73,
                    "course_id": 20,
                    "created_at": "April 08, 2018 17:53",
                    "updated_at": "April 08, 2018 17:53",
                    "course_settings": null,
                    "tasks": [

                    ]
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add lesson to course",
        "tags": [
          "Admin - Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "lesson": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "lesson"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "lesson": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "course_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "course_settings": {
                      "description": "course settings for current group",
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "lesson"
              ]
            },
            "examples": {
              "application/json": {
                "lesson": {
                  "id": 5,
                  "title": "Mayert LLC",
                  "description": "reinvent collaborative action-items",
                  "status": "active",
                  "user_id": 81,
                  "course_id": 23,
                  "created_at": "April 08, 2018 17:53",
                  "updated_at": "April 08, 2018 17:53",
                  "course_settings": null,
                  "tasks": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses/{course_id}/lessons/{id}": {
      "get": {
        "summary": "Get info about lesson at specific course",
        "tags": [
          "Admin - Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "included_lesson_users_for_current_user",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "lesson_users for current user and courses will be included inside course instance in meta section"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "lesson": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "course_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "course_settings": {
                      "description": "course settings for current group",
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "lesson"
              ]
            },
            "examples": {
              "application/json": {
                "lesson": {
                  "id": 8,
                  "title": "Mayert LLC",
                  "description": "reinvent collaborative action-items",
                  "status": "active",
                  "user_id": 95,
                  "course_id": 27,
                  "created_at": "April 08, 2018 17:53",
                  "updated_at": "April 08, 2018 17:53",
                  "course_settings": null,
                  "tasks": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Lesson with 'id'=0 [WHERE \"lessons\".\"course_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update attributes of lesson",
        "tags": [
          "Admin - Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "lesson": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "lesson"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "lesson": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    }
                  }
                }
              },
              "required": [
                "lesson"
              ]
            },
            "examples": {
              "application/json": {
                "lesson": {
                  "id": 12,
                  "title": "Mayert LLC",
                  "description": "reinvent collaborative action-items",
                  "status": "active",
                  "user_id": 108,
                  "course_id": 31,
                  "created_at": "April 08, 2018 17:53",
                  "updated_at": "April 08, 2018 17:53",
                  "course_settings": null,
                  "tasks": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Lesson with 'id'=0 [WHERE \"lessons\".\"course_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete lesson",
        "tags": [
          "Admin - Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Lesson account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Lesson with 'id'=0 [WHERE \"lessons\".\"course_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses/{course_id}/lessons/{lesson_id}/tasks": {
      "get": {
        "summary": "List of Tasks",
        "tags": [
          "Admin - Tasks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "lesson_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "tasks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "action_type": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "reading",
                          "question",
                          "watch"
                        ]
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "lesson_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "required": [
                "tasks"
              ]
            },
            "examples": {
              "application/json": {
                "tasks": [
                  {
                    "id": 1,
                    "action_type": "reading",
                    "description": "Labore officia saepe aliquam. Molestias autem libero ab et quia. Et numquam dicta. Rem et repudiandae facere mollitia officia ut debitis. Et ex animi tenetur totam omnis odit.",
                    "lesson_id": 20,
                    "user_id": 134,
                    "created_at": "April 08, 2018 17:53",
                    "updated_at": "April 08, 2018 17:53",
                    "attachments": [

                    ],
                    "videos": [

                    ],
                    "comments": [

                    ]
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Task",
        "tags": [
          "Admin - Tasks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "lesson_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "properties": {
                    "action_type": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "reading",
                        "question",
                        "watch"
                      ]
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "attachments_attributes": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "description": {
                            "type": "text",
                            "x-nullable": true
                          },
                          "data": {
                            "type": "object",
                            "x-nullable": true
                          },
                          "title": {
                            "type": "string",
                            "x-nullable": true
                          }
                        }
                      }
                    },
                    "videos_attributes": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "video_link": {
                            "type": "string",
                            "x-nullable": true
                          },
                          "title": {
                            "type": "string",
                            "x-nullable": true
                          },
                          "description": {
                            "type": "string",
                            "x-nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "task"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "action_type": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "reading",
                        "question",
                        "watch"
                      ]
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "lesson_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    }
                  }
                }
              },
              "required": [
                "task"
              ]
            },
            "examples": {
              "application/json": {
                "task": {
                  "id": 9,
                  "action_type": "reading",
                  "description": "Labore officia saepe aliquam. Molestias autem libero ab et quia. Et numquam dicta. Rem et repudiandae facere mollitia officia ut debitis. Et ex animi tenetur totam omnis odit.",
                  "lesson_id": 27,
                  "user_id": 157,
                  "created_at": "April 08, 2018 17:53",
                  "updated_at": "April 08, 2018 17:53",
                  "attachments": [

                  ],
                  "videos": [

                  ],
                  "comments": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses/{course_id}/lessons/{lesson_id}/tasks/{id}": {
      "get": {
        "summary": "Details of Task",
        "tags": [
          "Admin - Tasks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "lesson_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "action_type": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "reading",
                        "question",
                        "watch"
                      ]
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "lesson_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    }
                  }
                }
              },
              "required": [
                "task"
              ]
            },
            "examples": {
              "application/json": {
                "task": {
                  "id": 4,
                  "action_type": "reading",
                  "description": "Labore officia saepe aliquam. Molestias autem libero ab et quia. Et numquam dicta. Rem et repudiandae facere mollitia officia ut debitis. Et ex animi tenetur totam omnis odit.",
                  "lesson_id": 23,
                  "user_id": 144,
                  "created_at": "April 08, 2018 17:53",
                  "updated_at": "April 08, 2018 17:53",
                  "attachments": [

                  ],
                  "videos": [

                  ],
                  "comments": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Task with 'id'=0 [WHERE \"tasks\".\"lesson_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update details of Task",
        "tags": [
          "Admin - Tasks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "lesson_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "properties": {
                    "action_type": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "reading",
                        "question",
                        "watch"
                      ]
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "attachments_attributes": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "description": {
                            "type": "text",
                            "x-nullable": true
                          },
                          "data": {
                            "type": "object",
                            "x-nullable": true
                          },
                          "title": {
                            "type": "string",
                            "x-nullable": true
                          }
                        }
                      }
                    },
                    "videos_attributes": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "video_link": {
                            "type": "string",
                            "x-nullable": true
                          },
                          "title": {
                            "type": "string",
                            "x-nullable": true
                          },
                          "description": {
                            "type": "string",
                            "x-nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "task"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "properties": {
                    "action_type": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "reading",
                        "question",
                        "watch"
                      ]
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "task"
              ]
            },
            "examples": {
              "application/json": {
                "task": {
                  "id": 12,
                  "action_type": "reading",
                  "description": "Labore officia saepe aliquam. Molestias autem libero ab et quia. Et numquam dicta. Rem et repudiandae facere mollitia officia ut debitis. Et ex animi tenetur totam omnis odit.",
                  "lesson_id": 31,
                  "user_id": 170,
                  "created_at": "April 08, 2018 17:53",
                  "updated_at": "April 08, 2018 17:53",
                  "attachments": [

                  ],
                  "videos": [

                  ],
                  "comments": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Task with 'id'=0 [WHERE \"tasks\".\"lesson_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Task",
        "tags": [
          "Admin - Tasks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "lesson_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Task account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Task with 'id'=0 [WHERE \"tasks\".\"lesson_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{attachmentable_type}/{attachmentable_id}/attachments": {
      "get": {
        "summary": "Attachments",
        "tags": [
          "Attachments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "attachmentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "attachmentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Task",
              "Course",
              "Group",
              "Lesson",
              "Organization",
              "Chat",
              "ChatMessage"
            ]
          },
          {
            "name": "term",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "term for searching by [:file_name, :title, :description]"
          },
          {
            "name": "sort_field",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "file_name",
              "created_at"
            ],
            "description": "field for sorting"
          },
          {
            "name": "sort_flag",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "ASC",
              "DESC"
            ],
            "description": "flag for sorting"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "attachments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "data": {
                        "type": "object",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "organization_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "attachmentable_type": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "attachmentable_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "file_name": {
                        "type": "string",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "attachments"
              ]
            },
            "examples": {
              "application/json": {
                "attachments": [
                  {
                    "id": 1,
                    "title": "Renner, Jast and Zieme",
                    "description": "seize holistic paradigms",
                    "data": {
                      "url": "https://equipengine-dev.s3-eu-west-2.amazonaws.com/uploads/attachment/data/1/data.jpeg?X-Amz-Expires=600&X-Amz-Date=20180408T175412Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ4HLSQCUSVYCXNUA/20180408/eu-west-2/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=25a3fa41b312a7af957c82179a280d92ad20c8e3e34d8b425de72e2d20226693"
                    },
                    "user_id": 199,
                    "organization_id": 199,
                    "created_at": "April 08, 2018 17:54",
                    "updated_at": "April 08, 2018 17:54",
                    "attachmentable_type": "Task",
                    "attachmentable_id": 20,
                    "file_name": null,
                    "attachmentable": {
                      "id": 20,
                      "action_type": "question",
                      "description": "Labore officia saepe aliquam. Molestias autem libero ab et quia. Et numquam dicta. Rem et repudiandae facere mollitia officia ut debitis. Et ex animi tenetur totam omnis odit.",
                      "lesson_id": 40,
                      "user_id": 202,
                      "created_at": "April 08, 2018 17:54",
                      "updated_at": "April 08, 2018 17:54",
                      "attachments": [
                        {
                        }
                      ],
                      "videos": [

                      ],
                      "comments": [

                      ]
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Attachment",
        "tags": [
          "Attachments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "attachmentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "attachmentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Task",
              "Course",
              "Group",
              "Lesson",
              "Organization",
              "Chat",
              "ChatMessage"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "attachment": {
                  "type": "object",
                  "properties": {
                    "attachmentable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "attachmentable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "data": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "attachment"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "attachment": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "data": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "attachmentable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "attachmentable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "file_name": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "attachment"
              ]
            },
            "examples": {
              "application/json": {
                "attachment": {
                  "id": 5,
                  "title": "",
                  "description": null,
                  "data": {
                    "url": "https://equipengine-dev.s3-eu-west-2.amazonaws.com/uploads/attachment/data/5/data.jpeg?X-Amz-Expires=600&X-Amz-Date=20180408T175423Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ4HLSQCUSVYCXNUA/20180408/eu-west-2/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=edd1c17dc22a437fee89a1a5e8383400628ecadfc12ebc7d46ef9592f1cbb421"
                  },
                  "user_id": 212,
                  "organization_id": 211,
                  "created_at": "April 08, 2018 17:54",
                  "updated_at": "April 08, 2018 17:54",
                  "attachmentable_type": "Task",
                  "attachmentable_id": 23,
                  "file_name": null,
                  "attachmentable": {
                    "id": 23,
                    "action_type": "question",
                    "description": "Labore officia saepe aliquam. Molestias autem libero ab et quia. Et numquam dicta. Rem et repudiandae facere mollitia officia ut debitis. Et ex animi tenetur totam omnis odit.",
                    "lesson_id": 43,
                    "user_id": 215,
                    "created_at": "April 08, 2018 17:54",
                    "updated_at": "April 08, 2018 17:54",
                    "attachments": [
                      {
                      },
                      {
                      }
                    ],
                    "videos": [

                    ],
                    "comments": [

                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{attachmentable_type}/{attachmentable_id}/attachments/{id}": {
      "put": {
        "summary": "Update Attachment",
        "tags": [
          "Attachments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "attachmentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "attachmentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Task",
              "Course",
              "Group",
              "Lesson",
              "Organization",
              "Chat",
              "ChatMessage"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "attachment": {
                  "type": "object",
                  "properties": {
                    "attachmentable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "attachmentable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "data": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "attachment"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "attachment": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "data": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "attachmentable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "attachmentable_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "attachment"
              ]
            },
            "examples": {
              "application/json": {
                "attachment": {
                  "id": 8,
                  "title": "Renner, Jast and Zieme",
                  "description": "seize holistic paradigms",
                  "data": {
                    "url": "https://equipengine-dev.s3-eu-west-2.amazonaws.com/uploads/attachment/data/8/data.jpeg?X-Amz-Expires=600&X-Amz-Date=20180408T175432Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ4HLSQCUSVYCXNUA/20180408/eu-west-2/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=85e31cdd345df75d84432f651604ae0115853922836423054666ec9073cd7ef6"
                  },
                  "user_id": 226,
                  "organization_id": 226,
                  "created_at": "April 08, 2018 17:54",
                  "updated_at": "April 08, 2018 17:54",
                  "attachmentable_type": "Organization",
                  "attachmentable_id": 232,
                  "file_name": null,
                  "attachmentable": {
                    "id": 232,
                    "title": "Beer-Padberg",
                    "subdomain": "schroeder232",
                    "domain": "hyernser.biz",
                    "created_at": "April 08, 2018 17:54",
                    "updated_at": "April 08, 2018 17:54"
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Attachment with 'id'=0 [WHERE \"attachments\".\"attachmentable_id\" = $1 AND \"attachments\".\"attachmentable_type\" = $2]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Attachment",
        "tags": [
          "Attachments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "attachmentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "attachmentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Task",
              "Course",
              "Group",
              "Lesson",
              "Organization",
              "Chat",
              "ChatMessage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Attachment account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Attachment with 'id'=0 [WHERE \"attachments\".\"attachmentable_id\" = $1 AND \"attachments\".\"attachmentable_type\" = $2]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/chats/{chat_id}/chat_messages": {
      "get": {
        "summary": "List of Chat Messages",
        "tags": [
          "ChatMessages"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "chat_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "chat_messages": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "chat_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "message": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "required": [
                "chat_messages"
              ]
            },
            "examples": {
              "application/json": {
                "chat_messages": [
                  {
                    "id": 1,
                    "user_id": 262,
                    "chat_id": 1,
                    "message": "Enim molestiae fuga. Necessitatibus nemo iste sequi. Eveniet est veniam molestiae necessitatibus. Beatae deleniti a est quod ab saepe et.",
                    "created_at": "April 08, 2018 17:54",
                    "updated_at": "April 08, 2018 17:54",
                    "attachments": [
                      {
                        "id": 16,
                        "title": "Renner, Jast and Zieme",
                        "description": "seize holistic paradigms",
                        "data": {
                          "url": "https://equipengine-dev.s3-eu-west-2.amazonaws.com/uploads/attachment/data/16/data.jpeg?X-Amz-Expires=600&X-Amz-Date=20180408T175452Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ4HLSQCUSVYCXNUA/20180408/eu-west-2/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=db75c128ddc967dafb939e6e06c66f391bcffb8a30ae12ce2723086169a7f2b0"
                        },
                        "user_id": 261,
                        "organization_id": 261,
                        "created_at": "April 08, 2018 17:54",
                        "updated_at": "April 08, 2018 17:54",
                        "attachmentable_type": "ChatMessage",
                        "attachmentable_id": 1,
                        "file_name": null
                      }
                    ]
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Chat Message",
        "tags": [
          "ChatMessages"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "chat_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "chat_message": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "to_user_id": {
                      "description": "recepient of message, if chat is not determinated yet",
                      "type": "integer"
                    },
                    "attachment_id": {
                      "description": "attachment from chat, that uploaded before and should to be attached to current message",
                      "type": "integer"
                    }
                  }
                }
              },
              "required": [
                "chat_message"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "chat_message": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "chat_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "message": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    }
                  }
                }
              },
              "required": [
                "chat_message"
              ]
            },
            "examples": {
              "application/json": {
                "chat_message": {
                  "id": 5,
                  "user_id": 268,
                  "chat_id": 4,
                  "message": "Enim molestiae fuga. Necessitatibus nemo iste sequi. Eveniet est veniam molestiae necessitatibus. Beatae deleniti a est quod ab saepe et.",
                  "created_at": "April 08, 2018 17:54",
                  "updated_at": "April 08, 2018 17:54",
                  "attachments": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/chats/{chat_id}/chat_messages/{id}": {
      "put": {
        "summary": "Update details of Chat Message",
        "tags": [
          "ChatMessages"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "chat_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "chat_message": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "text",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "chat_message"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "chat_message": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "text",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "chat_message"
              ]
            },
            "examples": {
              "application/json": {
                "chat_message": {
                  "id": 8,
                  "user_id": 277,
                  "chat_id": 8,
                  "message": "Enim molestiae fuga. Necessitatibus nemo iste sequi. Eveniet est veniam molestiae necessitatibus. Beatae deleniti a est quod ab saepe et.",
                  "created_at": "April 08, 2018 17:54",
                  "updated_at": "April 08, 2018 17:54",
                  "attachments": [
                    {
                      "id": 22,
                      "title": "Renner, Jast and Zieme",
                      "description": "seize holistic paradigms",
                      "data": {
                        "url": "https://equipengine-dev.s3-eu-west-2.amazonaws.com/uploads/attachment/data/22/data.jpeg?X-Amz-Expires=600&X-Amz-Date=20180408T175459Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ4HLSQCUSVYCXNUA/20180408/eu-west-2/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=71bd3cdfbc0f4aa02c356f78c106ae6a985e863f0bc1419514db56e0c2a2b7b2"
                      },
                      "user_id": 276,
                      "organization_id": 275,
                      "created_at": "April 08, 2018 17:54",
                      "updated_at": "April 08, 2018 17:54",
                      "attachmentable_type": "ChatMessage",
                      "attachmentable_id": 8,
                      "file_name": null
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find ChatMessage with 'id'=0 [WHERE \"chat_messages\".\"chat_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Chat Message",
        "tags": [
          "ChatMessages"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "chat_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting ChatMessage account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find ChatMessage with 'id'=0 [WHERE \"chat_messages\".\"chat_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/chats/with_opponent/{opponent_id}": {
      "get": {
        "summary": "Get/Create Chat with opponent",
        "tags": [
          "Chats"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "opponent_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "chat": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "chat"
              ]
            },
            "examples": {
              "application/json": {
                "chat": {
                  "id": 18,
                  "title": "",
                  "created_at": "April 08, 2018 17:55",
                  "updated_at": "April 08, 2018 17:55",
                  "organization_id": 293,
                  "users": [
                    {
                      "id": 295,
                      "first_name": "Reanna Hoppe",
                      "last_name": "Levi Runolfsson",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 589,
                      "state_id": 295,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "April 08, 2018 17:55",
                      "updated_at": "April 08, 2018 17:55",
                      "email": "arlo_nolan@ebertweber.name",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "organization_ids": [
                        293
                      ],
                      "roles": null,
                      "group_ids": [

                      ],
                      "organization_settings": {
                        "id": 269,
                        "user_id": 295,
                        "organization_id": 293,
                        "role": "admin",
                        "created_at": "April 08, 2018 17:55",
                        "updated_at": "April 08, 2018 17:55",
                        "status": "active",
                        "exclude_students_ids": [

                        ],
                        "files_controll_enabled": false,
                        "messanger_access_enabled": false
                      }
                    },
                    {
                      "id": 296,
                      "first_name": "Reanna Hoppe",
                      "last_name": "Levi Runolfsson",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 591,
                      "state_id": 296,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "April 08, 2018 17:55",
                      "updated_at": "April 08, 2018 17:55",
                      "email": "wade_yost@trantow.net",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "organization_ids": [
                        293
                      ],
                      "roles": null,
                      "group_ids": [

                      ],
                      "organization_settings": {
                        "id": 270,
                        "user_id": 296,
                        "organization_id": 293,
                        "role": "admin",
                        "created_at": "April 08, 2018 17:55",
                        "updated_at": "April 08, 2018 17:55",
                        "status": "active",
                        "exclude_students_ids": [

                        ],
                        "files_controll_enabled": false,
                        "messanger_access_enabled": false
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/chats": {
      "get": {
        "summary": "List of Chats",
        "tags": [
          "Chats"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "chats": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "organization_id": {
                        "type": "integer",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "chats"
              ]
            },
            "examples": {
              "application/json": {
                "chats": [
                  {
                    "id": 21,
                    "title": "Veritatis tempora id consequatur natus explicabo vero et.",
                    "created_at": "April 08, 2018 17:55",
                    "updated_at": "April 08, 2018 17:55",
                    "organization_id": 296,
                    "users": [

                    ]
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/chats/{id}": {
      "get": {
        "summary": "Details of Chat",
        "tags": [
          "Chats"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "chat": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "chat"
              ]
            },
            "examples": {
              "application/json": {
                "chat": {
                  "id": 24,
                  "title": "Veritatis tempora id consequatur natus explicabo vero et.",
                  "created_at": "April 08, 2018 17:55",
                  "updated_at": "April 08, 2018 17:55",
                  "organization_id": 299,
                  "users": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Chat with 'id'=0"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update details of Chat",
        "tags": [
          "Chats"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "chat": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "chat"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "chat": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "chat"
              ]
            },
            "examples": {
              "application/json": {
                "chat": {
                  "id": 28,
                  "title": "Veritatis tempora id consequatur natus explicabo vero et.",
                  "created_at": "April 08, 2018 17:55",
                  "updated_at": "April 08, 2018 17:55",
                  "organization_id": 303,
                  "users": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Chat with 'id'=0"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Chat",
        "tags": [
          "Chats"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Chat account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Chat with 'id'=0"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/cities": {
      "get": {
        "summary": "List of Cities",
        "tags": [
          "Cities"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "cities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "state_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "required": [
                "cities"
              ]
            },
            "examples": {
              "application/json": {
                "cities": [
                  {
                    "id": 1,
                    "name": "Virginiahaven",
                    "state_id": 322,
                    "created_at": "April 08, 2018 17:55",
                    "updated_at": "April 08, 2018 17:55",
                    "state": {
                      "id": 322,
                      "name": "New York",
                      "country_id": 644,
                      "code": "MN",
                      "created_at": "April 08, 2018 17:55",
                      "updated_at": "April 08, 2018 17:55",
                      "country": {
                        "id": 644,
                        "code": "UA",
                        "name": "French Polynesia",
                        "phonecode": 522
                      }
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cities/{id}": {
      "get": {
        "summary": "Details of City",
        "tags": [
          "Cities"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "city": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    }
                  }
                }
              },
              "required": [
                "city"
              ]
            },
            "examples": {
              "application/json": {
                "city": {
                  "id": 2,
                  "name": "Louburgh",
                  "state_id": 324,
                  "created_at": "April 08, 2018 17:55",
                  "updated_at": "April 08, 2018 17:55",
                  "state": {
                    "id": 324,
                    "name": "Montana",
                    "country_id": 648,
                    "code": "MN",
                    "created_at": "April 08, 2018 17:55",
                    "updated_at": "April 08, 2018 17:55",
                    "country": {
                      "id": 648,
                      "code": "UA",
                      "name": "Saint Helena",
                      "phonecode": 522
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find City with 'id'=0"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{commentable_type}/{commentable_id}/comments": {
      "get": {
        "summary": "List of Comments as tree view by default",
        "tags": [
          "Comments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "commentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "commentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Group",
              "Task",
              "GroupThread"
            ]
          },
          {
            "name": "only_roots",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "returns only root comments"
          },
          {
            "name": "root_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "returns comments under specific comment"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "comments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "commentable_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "commentable_type": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "body": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer"
                      },
                      "root_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "main_root_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "tree_path": {
                        "type": "text",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "comments"
              ]
            },
            "examples": {
              "application/json": {
                "comments": [
                  {
                    "id": 13,
                    "commentable_id": 34,
                    "commentable_type": "Task",
                    "title": "Dolor culpa unde illum quis vero perferendis.",
                    "body": "Deleniti quam accusamus sed unde aut repellendus. Qui rerum dolorem suscipit. Quo vel eaque perferendis delectus minima.",
                    "user_id": 324,
                    "root_id": 0,
                    "main_root_id": 13,
                    "created_at": "April 08, 2018 17:55",
                    "updated_at": "April 08, 2018 17:55",
                    "tree_path": [
                      "13"
                    ],
                    "user": {
                      "id": 324,
                      "first_name": "Reanna Hoppe",
                      "last_name": "Levi Runolfsson",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 653,
                      "state_id": 327,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "April 08, 2018 17:55",
                      "updated_at": "April 08, 2018 17:55",
                      "email": "rebeka@baumbachreinger.co",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "organization_ids": [
                        315
                      ],
                      "roles": null,
                      "group_ids": [

                      ],
                      "organization_settings": {
                        "id": 293,
                        "user_id": 324,
                        "organization_id": 315,
                        "role": "student",
                        "created_at": "April 08, 2018 17:55",
                        "updated_at": "April 08, 2018 17:55",
                        "status": "active",
                        "exclude_students_ids": [

                        ],
                        "files_controll_enabled": false,
                        "messanger_access_enabled": false
                      }
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Comment",
        "tags": [
          "Comments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "commentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "commentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Group",
              "Task",
              "GroupThread"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "object",
                  "properties": {
                    "body": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "subject": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "root_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "comment"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "commentable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "commentable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "body": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer"
                    },
                    "root_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "main_root_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "tree_path": {
                      "type": "text",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "comment"
              ]
            },
            "examples": {
              "application/json": {
                "comment": {
                  "id": 17,
                  "commentable_id": 37,
                  "commentable_type": "Task",
                  "title": "Dolor culpa unde illum quis vero perferendis.",
                  "body": "Deleniti quam accusamus sed unde aut repellendus. Qui rerum dolorem suscipit. Quo vel eaque perferendis delectus minima.",
                  "user_id": 337,
                  "root_id": 0,
                  "main_root_id": 0,
                  "created_at": "April 08, 2018 17:55",
                  "updated_at": "April 08, 2018 17:55",
                  "tree_path": [

                  ],
                  "user": {
                    "id": 337,
                    "first_name": "Reanna Hoppe",
                    "last_name": "Levi Runolfsson",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 679,
                    "state_id": 340,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "April 08, 2018 17:55",
                    "updated_at": "April 08, 2018 17:55",
                    "email": "monty.ledner@yundt.io",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      327
                    ],
                    "roles": null,
                    "group_ids": [

                    ],
                    "organization_settings": {
                      "id": 305,
                      "user_id": 337,
                      "organization_id": 327,
                      "role": "student",
                      "created_at": "April 08, 2018 17:55",
                      "updated_at": "April 08, 2018 17:55",
                      "status": "active",
                      "exclude_students_ids": [

                      ],
                      "files_controll_enabled": false,
                      "messanger_access_enabled": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{commentable_type}/{commentable_id}/comments/{id}": {
      "put": {
        "summary": "Update details of Comment",
        "tags": [
          "Comments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "commentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "commentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Group",
              "Task",
              "GroupThread"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "object",
                  "properties": {
                    "body": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "subject": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "root_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "comment"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "body": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "root_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "comment"
              ]
            },
            "examples": {
              "application/json": {
                "comment": {
                  "id": 20,
                  "commentable_id": 40,
                  "commentable_type": "Task",
                  "title": "Dolor culpa unde illum quis vero perferendis.",
                  "body": "Deleniti quam accusamus sed unde aut repellendus. Qui rerum dolorem suscipit. Quo vel eaque perferendis delectus minima.",
                  "user_id": 351,
                  "root_id": 0,
                  "main_root_id": 20,
                  "created_at": "April 08, 2018 17:55",
                  "updated_at": "April 08, 2018 17:55",
                  "tree_path": [
                    "20"
                  ],
                  "user": {
                    "id": 351,
                    "first_name": "Reanna Hoppe",
                    "last_name": "Levi Runolfsson",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 707,
                    "state_id": 354,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "April 08, 2018 17:55",
                    "updated_at": "April 08, 2018 17:55",
                    "email": "gerardo@conn.com",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      341
                    ],
                    "roles": null,
                    "group_ids": [

                    ],
                    "organization_settings": {
                      "id": 318,
                      "user_id": 351,
                      "organization_id": 341,
                      "role": "student",
                      "created_at": "April 08, 2018 17:55",
                      "updated_at": "April 08, 2018 17:55",
                      "status": "active",
                      "exclude_students_ids": [

                      ],
                      "files_controll_enabled": false,
                      "messanger_access_enabled": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Comment with 'id'=0 [WHERE \"comments\".\"commentable_id\" = $1 AND \"comments\".\"commentable_type\" = $2]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Comment",
        "tags": [
          "Comments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "commentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "commentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Group",
              "Task",
              "GroupThread"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Comment account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Comment with 'id'=0 [WHERE \"comments\".\"commentable_id\" = $1 AND \"comments\".\"commentable_type\" = $2]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/countries": {
      "get": {
        "summary": "List of Countries",
        "tags": [
          "Countries"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "countries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "code": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "name": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "phonecode": {
                        "type": "integer",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "countries"
              ]
            },
            "examples": {
              "application/json": {
                "countries": [
                  {
                    "id": 777,
                    "code": "UA",
                    "name": "Libyan Arab Jamahiriya",
                    "phonecode": 522
                  },
                  {
                    "id": 778,
                    "code": "UA",
                    "name": "Bouvet Island (Bouvetoya)",
                    "phonecode": 522
                  },
                  {
                    "id": 779,
                    "code": "UA",
                    "name": "Ukraine",
                    "phonecode": 522
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 3,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/countries/{id}": {
      "get": {
        "summary": "Details of Country",
        "tags": [
          "Countries"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "country": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "phonecode": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "country"
              ]
            },
            "examples": {
              "application/json": {
                "country": {
                  "id": 782,
                  "code": "UA",
                  "name": "Cook Islands",
                  "phonecode": 522
                }
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Country with 'id'=0"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/course_groups": {
      "get": {
        "summary": "Courses in group",
        "tags": [
          "Courses vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "get courses from specific group"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "course_groups": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "course_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "group_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "precourse_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "complete_lesson_can": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "teacher",
                          "student",
                          "all"
                        ]
                      },
                      "reports_enabled": {
                        "type": "boolean",
                        "x-nullable": true
                      },
                      "files_enabled": {
                        "type": "boolean",
                        "x-nullable": true
                      },
                      "discussing_enabled": {
                        "type": "boolean",
                        "x-nullable": true
                      },
                      "student_content_enabled": {
                        "type": "boolean",
                        "x-nullable": true
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "active",
                          "pause"
                        ]
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "required": [
                "course_groups"
              ]
            },
            "examples": {
              "application/json": {
                "course_groups": [
                  {
                    "id": 29,
                    "course_id": 88,
                    "group_id": 43,
                    "precourse_id": 89,
                    "complete_lesson_can": "all",
                    "reports_enabled": true,
                    "files_enabled": true,
                    "discussing_enabled": true,
                    "student_content_enabled": true,
                    "status": "active",
                    "created_at": "April 08, 2018 17:55",
                    "updated_at": "April 08, 2018 17:55"
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Course to group",
        "tags": [
          "Courses vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "get courses from specific group"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course_group": {
                  "type": "object",
                  "properties": {
                    "complete_lesson_can": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "teacher",
                        "student",
                        "all"
                      ]
                    },
                    "discussing_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "files_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "precourse_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "reports_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "student_content_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "course_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course_group"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "course_group": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "course_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "group_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "precourse_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "complete_lesson_can": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "teacher",
                        "student",
                        "all"
                      ]
                    },
                    "reports_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "files_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "discussing_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "student_content_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    }
                  }
                }
              },
              "required": [
                "course_group"
              ]
            },
            "examples": {
              "application/json": {
                "course_group": {
                  "id": 33,
                  "course_id": 96,
                  "group_id": 46,
                  "precourse_id": 97,
                  "complete_lesson_can": "all",
                  "reports_enabled": true,
                  "files_enabled": true,
                  "discussing_enabled": true,
                  "student_content_enabled": true,
                  "status": "active",
                  "created_at": "April 08, 2018 17:55",
                  "updated_at": "April 08, 2018 17:55"
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/course_groups/{id}": {
      "put": {
        "summary": "Update Course in group",
        "tags": [
          "Courses vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "get courses from specific group"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course_group": {
                  "type": "object",
                  "properties": {
                    "complete_lesson_can": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "teacher",
                        "student",
                        "all"
                      ]
                    },
                    "discussing_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "files_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "precourse_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "reports_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "student_content_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course_group"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "course_group": {
                  "type": "object",
                  "properties": {
                    "precourse_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "complete_lesson_can": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "teacher",
                        "student",
                        "all"
                      ]
                    },
                    "reports_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "files_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "discussing_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "student_content_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    }
                  }
                }
              },
              "required": [
                "course_group"
              ]
            },
            "examples": {
              "application/json": {
                "course_group": {
                  "id": 36,
                  "course_id": 102,
                  "group_id": 50,
                  "precourse_id": 105,
                  "complete_lesson_can": "all",
                  "reports_enabled": true,
                  "files_enabled": true,
                  "discussing_enabled": true,
                  "student_content_enabled": true,
                  "status": "active",
                  "created_at": "April 08, 2018 17:55",
                  "updated_at": "April 08, 2018 17:55"
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find CourseGroup with 'id'=0 [WHERE \"course_groups\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Course from group",
        "tags": [
          "Courses vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "get courses from specific group"
          }
        ],
        "responses": {
          "200": {
            "description": "deleting CourseGroup account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find CourseGroup with 'id'=0 [WHERE \"course_groups\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses": {
      "get": {
        "summary": "Get Courses inside organization",
        "tags": [
          "Courses"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "term",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "term for searching by [:title, :description]"
          },
          {
            "name": "sort_field",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "title",
              "created_at",
              "lessons_count",
              "active_user_ids"
            ],
            "description": "field for sorting"
          },
          {
            "name": "sort_flag",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "ASC",
              "DESC"
            ],
            "description": "flag for sorting"
          },
          {
            "name": "included_lesson_users_for_current_user",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "lesson_users for current user and courses will be included"
          },
          {
            "name": "included_lesson_users",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "lesson_users for courses will be included"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "courses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "image": {
                        "type": "object",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "organization_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "lessons_count": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "group_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "integer",
                          "properties": {
                          }
                        }
                      },
                      "active_user_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "integer",
                          "properties": {
                          }
                        }
                      },
                      "course_users_state": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "string",
                          "properties": {
                          }
                        }
                      },
                      "course_for_current_user": {
                        "description": "information about user's association to this course",
                        "type": "object",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "courses"
              ]
            },
            "examples": {
              "application/json": {
                "courses": [
                  {
                    "id": 120,
                    "title": "Boehm, Schulist and Leffler",
                    "description": "aggregate open-source e-business",
                    "image": {
                      "url": "https://equipengine-dev.s3-eu-west-2.amazonaws.com/uploads/course/image/120/image.jpeg?X-Amz-Expires=600&X-Amz-Date=20180408T175613Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ4HLSQCUSVYCXNUA/20180408/eu-west-2/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=d587f860119274e0931c312adbad30b9e1cf6ac1d40c4a5adae881a19553df54"
                    },
                    "user_id": 440,
                    "organization_id": 444,
                    "created_at": "2018-04-08T17:56:12.264Z",
                    "updated_at": "2018-04-08T17:56:12.264Z",
                    "lessons_count": 1,
                    "group_ids": [
                      59
                    ],
                    "active_user_ids": [
                      29
                    ],
                    "course_users_state": [
                      "439-59-active"
                    ],
                    "lesson_users": [
                      {
                        "status": "active",
                        "created_at": "April 08, 2018 17:56",
                        "course_settings": {
                          "id": 44,
                          "course_id": 120,
                          "group_id": 59,
                          "precourse_id": 0,
                          "complete_lesson_can": "all",
                          "reports_enabled": true,
                          "files_enabled": true,
                          "discussing_enabled": true,
                          "student_content_enabled": true,
                          "status": "active",
                          "created_at": "April 08, 2018 17:56",
                          "updated_at": "April 08, 2018 17:56"
                        },
                        "course_group": {
                          "id": 44,
                          "course_id": 120,
                          "group_id": 59,
                          "precourse_id": 0,
                          "complete_lesson_can": "all",
                          "reports_enabled": true,
                          "files_enabled": true,
                          "discussing_enabled": true,
                          "student_content_enabled": true,
                          "status": "active",
                          "created_at": "April 08, 2018 17:56",
                          "updated_at": "April 08, 2018 17:56"
                        }
                      },
                      {
                        "status": "",
                        "created_at": null,
                        "course_settings": null,
                        "course_group": null
                      },
                      {
                        "status": "",
                        "created_at": null,
                        "course_settings": null,
                        "course_group": null
                      }
                    ],
                    "lesson_users_for_current_user": [
                      {
                        "status": "active",
                        "created_at": "April 08, 2018 17:56",
                        "course_settings": {
                          "id": 44,
                          "course_id": 120,
                          "group_id": 59,
                          "precourse_id": 0,
                          "complete_lesson_can": "all",
                          "reports_enabled": true,
                          "files_enabled": true,
                          "discussing_enabled": true,
                          "student_content_enabled": true,
                          "status": "active",
                          "created_at": "April 08, 2018 17:56",
                          "updated_at": "April 08, 2018 17:56"
                        },
                        "course_group": {
                          "id": 44,
                          "course_id": 120,
                          "group_id": 59,
                          "precourse_id": 0,
                          "complete_lesson_can": "all",
                          "reports_enabled": true,
                          "files_enabled": true,
                          "discussing_enabled": true,
                          "student_content_enabled": true,
                          "status": "active",
                          "created_at": "April 08, 2018 17:56",
                          "updated_at": "April 08, 2018 17:56"
                        }
                      }
                    ],
                    "course_for_current_user": {
                      "id": 29,
                      "course_id": 120,
                      "user_id": 439,
                      "status": "active",
                      "created_at": "April 08, 2018 17:56",
                      "updated_at": "April 08, 2018 17:56",
                      "course_group_id": 44,
                      "can_start": true
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{id}": {
      "get": {
        "summary": "Get Course Details",
        "tags": [
          "Courses"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "image": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "lessons_count": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "active_user_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "course_users_state": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "string",
                        "properties": {
                        }
                      }
                    },
                    "course_for_current_user": {
                      "description": "information about user's association to this course",
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course"
              ]
            },
            "examples": {
              "application/json": {
                "course": {
                  "id": 123,
                  "title": "Boehm, Schulist and Leffler",
                  "description": "aggregate open-source e-business",
                  "image": {
                    "url": "https://equipengine-dev.s3-eu-west-2.amazonaws.com/uploads/course/image/123/image.jpeg?X-Amz-Expires=600&X-Amz-Date=20180408T175618Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ4HLSQCUSVYCXNUA/20180408/eu-west-2/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=537a8096b081683cdbff04e6f9d041e8de3231306f92323f842304b1a18c4ce0"
                  },
                  "user_id": 450,
                  "organization_id": 453,
                  "created_at": "April 08, 2018 17:56",
                  "updated_at": "April 08, 2018 17:56",
                  "lessons_count": 1,
                  "group_ids": [
                    62
                  ],
                  "active_user_ids": null,
                  "course_users_state": null,
                  "course_for_current_user": {
                    "id": 32,
                    "course_id": 123,
                    "user_id": 449,
                    "status": "active",
                    "created_at": "April 08, 2018 17:56",
                    "updated_at": "April 08, 2018 17:56",
                    "course_group_id": 47,
                    "can_start": true
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Course with 'id'=0 [WHERE \"course_groups\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/group_threads": {
      "get": {
        "summary": "List of Group Threads",
        "tags": [
          "GroupThreads"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "sort_field",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "title",
              "created_at",
              "comments_count",
              "last_activity_at"
            ],
            "description": "field for sorting"
          },
          {
            "name": "sort_flag",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "ASC",
              "DESC"
            ],
            "description": "flag for sorting"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "group_threads": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "group_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "comments_count": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "last_activity_at": {
                        "type": "datetime",
                        "x-nullable": true
                      },
                      "last_comment": {
                        "type": "object",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "group_threads"
              ]
            },
            "examples": {
              "application/json": {
                "group_threads": [
                  {
                    "id": 1,
                    "title": "Rerum omnis aut beatae earum voluptate assumenda quibusdam sequi.",
                    "user_id": 462,
                    "group_id": 66,
                    "comments_count": 0,
                    "created_at": "April 08, 2018 17:56",
                    "updated_at": "April 08, 2018 17:56",
                    "last_activity_at": null,
                    "last_comment": {
                      "id": 28,
                      "commentable_id": 1,
                      "commentable_type": "GroupThread",
                      "title": "Dolor culpa unde illum quis vero perferendis.",
                      "body": "Deleniti quam accusamus sed unde aut repellendus. Qui rerum dolorem suscipit. Quo vel eaque perferendis delectus minima.",
                      "user_id": 462,
                      "root_id": 0,
                      "main_root_id": 28,
                      "created_at": "April 08, 2018 17:56",
                      "updated_at": "April 08, 2018 17:56",
                      "tree_path": [
                        "28"
                      ],
                      "user": {
                        "id": 462,
                        "first_name": "Reanna Hoppe",
                        "last_name": "Levi Runolfsson",
                        "phone_number": "",
                        "date_of_birth": null,
                        "address": "",
                        "country_id": 932,
                        "state_id": 465,
                        "zip_code": "",
                        "status": "active",
                        "created_at": "April 08, 2018 17:56",
                        "updated_at": "April 08, 2018 17:56",
                        "email": "brionna@nicolas.org",
                        "avatar": {
                          "url": null,
                          "small": {
                            "url": null
                          },
                          "middle": {
                            "url": null
                          }
                        },
                        "organization_ids": [
                          465
                        ],
                        "roles": null,
                        "group_ids": [

                        ],
                        "organization_settings": {
                          "id": 421,
                          "user_id": 462,
                          "organization_id": 465,
                          "role": "student",
                          "created_at": "April 08, 2018 17:56",
                          "updated_at": "April 08, 2018 17:56",
                          "status": "active",
                          "exclude_students_ids": [

                          ],
                          "files_controll_enabled": false,
                          "messanger_access_enabled": false
                        }
                      }
                    },
                    "user": {
                      "id": 462,
                      "first_name": "Reanna Hoppe",
                      "last_name": "Levi Runolfsson",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 932,
                      "state_id": 465,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "April 08, 2018 17:56",
                      "updated_at": "April 08, 2018 17:56",
                      "email": "brionna@nicolas.org",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "organization_ids": [
                        465
                      ],
                      "roles": null,
                      "group_ids": [

                      ],
                      "organization_settings": {
                        "id": 421,
                        "user_id": 462,
                        "organization_id": 465,
                        "role": "student",
                        "created_at": "April 08, 2018 17:56",
                        "updated_at": "April 08, 2018 17:56",
                        "status": "active",
                        "exclude_students_ids": [

                        ],
                        "files_controll_enabled": false,
                        "messanger_access_enabled": false
                      }
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Group Thread",
        "tags": [
          "GroupThreads"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "group_thread": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "group_thread"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "group_thread": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "group_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "comments_count": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "last_activity_at": {
                      "type": "datetime",
                      "x-nullable": true
                    },
                    "last_comment": {
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "group_thread"
              ]
            },
            "examples": {
              "application/json": {
                "group_thread": {
                  "id": 9,
                  "title": "Quas officia architecto et velit.",
                  "user_id": 471,
                  "group_id": 73,
                  "comments_count": 0,
                  "created_at": "April 08, 2018 17:56",
                  "updated_at": "April 08, 2018 17:56",
                  "last_activity_at": null,
                  "last_comment": null,
                  "user": {
                    "id": 471,
                    "first_name": "Reanna Hoppe",
                    "last_name": "Levi Runolfsson",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 950,
                    "state_id": 474,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "April 08, 2018 17:56",
                    "updated_at": "April 08, 2018 17:56",
                    "email": "zula@hauck.co",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      472
                    ],
                    "roles": null,
                    "group_ids": [

                    ],
                    "organization_settings": {
                      "id": 428,
                      "user_id": 471,
                      "organization_id": 472,
                      "role": "student",
                      "created_at": "April 08, 2018 17:56",
                      "updated_at": "April 08, 2018 17:56",
                      "status": "active",
                      "exclude_students_ids": [

                      ],
                      "files_controll_enabled": false,
                      "messanger_access_enabled": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/group_threads/{id}": {
      "get": {
        "summary": "Details of Group Thread",
        "tags": [
          "GroupThreads"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "group_thread": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "group_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "comments_count": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "last_activity_at": {
                      "type": "datetime",
                      "x-nullable": true
                    },
                    "last_comment": {
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "group_thread"
              ]
            },
            "examples": {
              "application/json": {
                "group_thread": {
                  "id": 4,
                  "title": "Earum quo aut enim nisi est quam.",
                  "user_id": 466,
                  "group_id": 69,
                  "comments_count": 0,
                  "created_at": "April 08, 2018 17:56",
                  "updated_at": "April 08, 2018 17:56",
                  "last_activity_at": null,
                  "last_comment": {
                    "id": 31,
                    "commentable_id": 4,
                    "commentable_type": "GroupThread",
                    "title": "Dolor culpa unde illum quis vero perferendis.",
                    "body": "Deleniti quam accusamus sed unde aut repellendus. Qui rerum dolorem suscipit. Quo vel eaque perferendis delectus minima.",
                    "user_id": 466,
                    "root_id": 0,
                    "main_root_id": 31,
                    "created_at": "April 08, 2018 17:56",
                    "updated_at": "April 08, 2018 17:56",
                    "tree_path": [
                      "31"
                    ],
                    "user": {
                      "id": 466,
                      "first_name": "Reanna Hoppe",
                      "last_name": "Levi Runolfsson",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 940,
                      "state_id": 469,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "April 08, 2018 17:56",
                      "updated_at": "April 08, 2018 17:56",
                      "email": "ryan@ko.org",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "organization_ids": [
                        468
                      ],
                      "roles": null,
                      "group_ids": [

                      ],
                      "organization_settings": {
                        "id": 424,
                        "user_id": 466,
                        "organization_id": 468,
                        "role": "student",
                        "created_at": "April 08, 2018 17:56",
                        "updated_at": "April 08, 2018 17:56",
                        "status": "active",
                        "exclude_students_ids": [

                        ],
                        "files_controll_enabled": false,
                        "messanger_access_enabled": false
                      }
                    }
                  },
                  "user": {
                    "id": 466,
                    "first_name": "Reanna Hoppe",
                    "last_name": "Levi Runolfsson",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 940,
                    "state_id": 469,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "April 08, 2018 17:56",
                    "updated_at": "April 08, 2018 17:56",
                    "email": "ryan@ko.org",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      468
                    ],
                    "roles": null,
                    "group_ids": [

                    ],
                    "organization_settings": {
                      "id": 424,
                      "user_id": 466,
                      "organization_id": 468,
                      "role": "student",
                      "created_at": "April 08, 2018 17:56",
                      "updated_at": "April 08, 2018 17:56",
                      "status": "active",
                      "exclude_students_ids": [

                      ],
                      "files_controll_enabled": false,
                      "messanger_access_enabled": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find GroupThread with 'id'=0 [WHERE \"group_threads\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update details of Group Thread",
        "tags": [
          "GroupThreads"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "group_thread": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "group_thread"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "group_thread": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "group_thread"
              ]
            },
            "examples": {
              "application/json": {
                "group_thread": {
                  "id": 12,
                  "title": "Laudantium omnis qui praesentium dolores.",
                  "user_id": 476,
                  "group_id": 77,
                  "comments_count": 0,
                  "created_at": "April 08, 2018 17:56",
                  "updated_at": "April 08, 2018 17:56",
                  "last_activity_at": null,
                  "last_comment": {
                    "id": 38,
                    "commentable_id": 12,
                    "commentable_type": "GroupThread",
                    "title": "Dolor culpa unde illum quis vero perferendis.",
                    "body": "Deleniti quam accusamus sed unde aut repellendus. Qui rerum dolorem suscipit. Quo vel eaque perferendis delectus minima.",
                    "user_id": 476,
                    "root_id": 0,
                    "main_root_id": 38,
                    "created_at": "April 08, 2018 17:56",
                    "updated_at": "April 08, 2018 17:56",
                    "tree_path": [
                      "38"
                    ],
                    "user": {
                      "id": 476,
                      "first_name": "Reanna Hoppe",
                      "last_name": "Levi Runolfsson",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 960,
                      "state_id": 479,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "April 08, 2018 17:56",
                      "updated_at": "April 08, 2018 17:56",
                      "email": "kaycee@keeling.biz",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "organization_ids": [
                        477
                      ],
                      "roles": null,
                      "group_ids": [

                      ],
                      "organization_settings": {
                        "id": 432,
                        "user_id": 476,
                        "organization_id": 477,
                        "role": "student",
                        "created_at": "April 08, 2018 17:56",
                        "updated_at": "April 08, 2018 17:56",
                        "status": "active",
                        "exclude_students_ids": [

                        ],
                        "files_controll_enabled": false,
                        "messanger_access_enabled": false
                      }
                    }
                  },
                  "user": {
                    "id": 476,
                    "first_name": "Reanna Hoppe",
                    "last_name": "Levi Runolfsson",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 960,
                    "state_id": 479,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "April 08, 2018 17:56",
                    "updated_at": "April 08, 2018 17:56",
                    "email": "kaycee@keeling.biz",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      477
                    ],
                    "roles": null,
                    "group_ids": [

                    ],
                    "organization_settings": {
                      "id": 432,
                      "user_id": 476,
                      "organization_id": 477,
                      "role": "student",
                      "created_at": "April 08, 2018 17:56",
                      "updated_at": "April 08, 2018 17:56",
                      "status": "active",
                      "exclude_students_ids": [

                      ],
                      "files_controll_enabled": false,
                      "messanger_access_enabled": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find GroupThread with 'id'=0 [WHERE \"group_threads\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Group Thread",
        "tags": [
          "GroupThreads"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting GroupThread account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find GroupThread with 'id'=0 [WHERE \"group_threads\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/group_users": {
      "get": {
        "summary": "Users in group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "sort_field",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "role",
              "last_name",
              "first_name",
              "created_at",
              "status"
            ],
            "description": "field for sorting"
          },
          {
            "name": "sort_flag",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "ASC",
              "DESC"
            ],
            "description": "flag for sorting"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "group_users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "group_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "active",
                          "pause"
                        ]
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "role": {
                        "type": "string"
                      },
                      "organization_id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "required": [
                "group_users"
              ]
            },
            "examples": {
              "application/json": {
                "group_users": [
                  {
                    "id": 54,
                    "first_name": "Reanna Hoppe",
                    "last_name": "Levi Runolfsson",
                    "role": "",
                    "organization_id": 487
                  },
                  {
                    "id": 55,
                    "first_name": "Reanna Hoppe",
                    "last_name": "Levi Runolfsson",
                    "role": "admin",
                    "organization_id": 487
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 2,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add User to group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "group_user": {
                  "type": "object",
                  "properties": {
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "group_user"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "group_user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "group_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string"
                    },
                    "organization_id": {
                      "type": "integer"
                    }
                  }
                }
              },
              "required": [
                "group_user"
              ]
            },
            "examples": {
              "application/json": {
                "group_user": {
                  "id": 62,
                  "user_id": 494,
                  "group_id": 89,
                  "created_at": "April 08, 2018 17:56",
                  "updated_at": "April 08, 2018 17:56",
                  "status": "active",
                  "first_name": "Reanna Hoppe",
                  "last_name": "Levi Runolfsson",
                  "role": "admin",
                  "organization_id": 493
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/group_users/{id}": {
      "put": {
        "summary": "Change status of user in group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "group_user": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    }
                  }
                }
              },
              "required": [
                "group_user"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "group_user": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    }
                  }
                }
              },
              "required": [
                "group_user"
              ]
            },
            "examples": {
              "application/json": {
                "group_user": {
                  "id": 67,
                  "user_id": 503,
                  "group_id": 93,
                  "created_at": "April 08, 2018 17:56",
                  "updated_at": "April 08, 2018 17:56",
                  "status": "active",
                  "first_name": "Reanna Hoppe",
                  "last_name": "Levi Runolfsson",
                  "role": "",
                  "organization_id": 501
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find GroupUser with 'id'=0 [WHERE \"group_users\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user from group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting GroupUser account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find GroupUser with 'id'=0 [WHERE \"group_users\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/group_users/batch_update": {
      "put": {
        "summary": "Change status of batch users in group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "status",
            "in": "body",
            "type": "string",
            "enum": [
              "active",
              "pause"
            ],
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns status and errors",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                },
                "errors": {
                  "type": "array"
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "errors": [

                ],
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups": {
      "get": {
        "summary": "Get Groups inside organization",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "visibility",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "private",
              "public"
            ],
            "description": "Filter groups by visibility"
          },
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "active",
              "pause"
            ],
            "description": "Filter groups by status"
          },
          {
            "name": "my",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "return user's groups"
          },
          {
            "name": "term",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "term for searching by [:description, :title]"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "groups": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "organization_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "active",
                          "pause"
                        ]
                      },
                      "user_limit": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "visibility": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "private",
                          "public"
                        ]
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "count_participants": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "user_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "integer",
                          "properties": {
                          }
                        }
                      },
                      "participated": {
                        "description": "group_user instance for current user if he participated in group",
                        "type": "object",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "groups"
              ]
            },
            "examples": {
              "application/json": {
                "groups": [
                  {
                    "id": 105,
                    "organization_id": 525,
                    "title": "Zulauf-Halvorson",
                    "description": "transition viral mindshare",
                    "status": "active",
                    "user_limit": 10,
                    "visibility": "public",
                    "created_at": "April 08, 2018 17:56",
                    "updated_at": "April 08, 2018 17:56",
                    "count_participants": 1,
                    "user_id": 0,
                    "user_ids": [
                      528
                    ],
                    "participated": {
                      "id": 89,
                      "user_id": 528,
                      "group_id": 105,
                      "created_at": "April 08, 2018 17:56",
                      "updated_at": "April 08, 2018 17:56",
                      "status": "active",
                      "first_name": "Reanna Hoppe",
                      "last_name": "Levi Runolfsson",
                      "role": "admin",
                      "organization_id": 525
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Group",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "user_limit": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "visibility": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "private",
                        "public"
                      ]
                    }
                  }
                }
              },
              "required": [
                "group"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "user_limit": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "visibility": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "private",
                        "public"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "count_participants": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "participated": {
                      "description": "group_user instance for current user if he participated in group",
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "group"
              ]
            },
            "examples": {
              "application/json": {
                "group": {
                  "id": 113,
                  "organization_id": 532,
                  "title": "Zulauf-Halvorson",
                  "description": "transition viral mindshare",
                  "status": "active",
                  "user_limit": 10,
                  "visibility": "public",
                  "created_at": "April 08, 2018 17:56",
                  "updated_at": "April 08, 2018 17:56",
                  "count_participants": 0,
                  "user_id": 537,
                  "user_ids": [

                  ],
                  "participated": null
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{id}": {
      "get": {
        "summary": "Get Group Details",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "user_limit": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "visibility": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "private",
                        "public"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "count_participants": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "participated": {
                      "description": "group_user instance for current user if he participated in group",
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "group"
              ]
            },
            "examples": {
              "application/json": {
                "group": {
                  "id": 108,
                  "organization_id": 528,
                  "title": "Zulauf-Halvorson",
                  "description": "transition viral mindshare",
                  "status": "active",
                  "user_limit": 10,
                  "visibility": "public",
                  "created_at": "April 08, 2018 17:56",
                  "updated_at": "April 08, 2018 17:56",
                  "count_participants": 1,
                  "user_id": 0,
                  "user_ids": [
                    532
                  ],
                  "participated": {
                    "id": 92,
                    "user_id": 532,
                    "group_id": 108,
                    "created_at": "April 08, 2018 17:56",
                    "updated_at": "April 08, 2018 17:56",
                    "status": "active",
                    "first_name": "Reanna Hoppe",
                    "last_name": "Levi Runolfsson",
                    "role": "admin",
                    "organization_id": 528
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Group with 'id'=0 [WHERE \"groups\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Group Details",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "user_limit": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "visibility": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "private",
                        "public"
                      ]
                    }
                  }
                }
              },
              "required": [
                "group"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "user_limit": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "visibility": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "private",
                        "public"
                      ]
                    }
                  }
                }
              },
              "required": [
                "group"
              ]
            },
            "examples": {
              "application/json": {
                "group": {
                  "id": 116,
                  "organization_id": 536,
                  "title": "Zulauf-Halvorson",
                  "description": "transition viral mindshare",
                  "status": "active",
                  "user_limit": 10,
                  "visibility": "public",
                  "created_at": "April 08, 2018 17:56",
                  "updated_at": "April 08, 2018 17:56",
                  "count_participants": 1,
                  "user_id": 0,
                  "user_ids": [
                    541
                  ],
                  "participated": {
                    "id": 99,
                    "user_id": 541,
                    "group_id": 116,
                    "created_at": "April 08, 2018 17:56",
                    "updated_at": "April 08, 2018 17:56",
                    "status": "active",
                    "first_name": "Reanna Hoppe",
                    "last_name": "Levi Runolfsson",
                    "role": "admin",
                    "organization_id": 536
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Group with 'id'=0 [WHERE \"groups\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Group",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Group account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Group with 'id'=0 [WHERE \"groups\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{course_id}/lessons": {
      "get": {
        "summary": "Lessons for course",
        "tags": [
          "Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "lessons": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "active",
                          "pause"
                        ]
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "course_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "course_settings": {
                        "description": "course settings for current group",
                        "type": "object",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "lessons"
              ]
            },
            "examples": {
              "application/json": {
                "lessons": [
                  {
                    "id": 75,
                    "title": "Mayert LLC",
                    "description": "reinvent collaborative action-items",
                    "status": "active",
                    "user_id": 553,
                    "course_id": 127,
                    "created_at": "April 08, 2018 17:56",
                    "updated_at": "April 08, 2018 17:56",
                    "course_settings": {
                      "id": 51,
                      "course_id": 127,
                      "group_id": 124,
                      "precourse_id": 0,
                      "complete_lesson_can": "all",
                      "reports_enabled": true,
                      "files_enabled": true,
                      "discussing_enabled": true,
                      "student_content_enabled": true,
                      "status": "active",
                      "created_at": "April 08, 2018 17:56",
                      "updated_at": "April 08, 2018 17:56"
                    },
                    "tasks": [

                    ]
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{course_id}/lessons/{id}": {
      "get": {
        "summary": "Get info about lesson at specific course",
        "tags": [
          "Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "included_lesson_users_for_current_user",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "lesson_users for current user and courses will be included inside course instance in meta section"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "lesson": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "course_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "course_settings": {
                      "description": "course settings for current group",
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "lesson"
              ]
            },
            "examples": {
              "application/json": {
                "lesson": {
                  "id": 78,
                  "title": "Mayert LLC",
                  "description": "reinvent collaborative action-items",
                  "status": "active",
                  "user_id": 563,
                  "course_id": 130,
                  "created_at": "April 08, 2018 17:56",
                  "updated_at": "April 08, 2018 17:56",
                  "course_settings": {
                    "id": 54,
                    "course_id": 130,
                    "group_id": 127,
                    "precourse_id": 0,
                    "complete_lesson_can": "all",
                    "reports_enabled": true,
                    "files_enabled": true,
                    "discussing_enabled": true,
                    "student_content_enabled": true,
                    "status": "active",
                    "created_at": "April 08, 2018 17:56",
                    "updated_at": "April 08, 2018 17:56"
                  },
                  "tasks": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Lesson with 'id'=0 [WHERE \"lessons\".\"course_id\" = $1 AND \"lessons\".\"status\" = $2]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{course_id}/lessons/{id}/complete": {
      "put": {
        "summary": "Complete/Uncomplete lesson",
        "tags": [
          "Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "completed",
            "in": "query",
            "type": "boolean",
            "required": true
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "student id if current user is teacher and he mark lesson of some student"
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns result",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        }
      }
    },
    "/api/v1/passwords": {
      "post": {
        "summary": "Send reset password token",
        "tags": [
          "Passwords"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "user's email or id required"
                },
                "id": {
                  "type": "integer",
                  "description": "user's email or id required"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update password",
        "tags": [
          "Passwords"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string"
                },
                "password_confirmation": {
                  "type": "string"
                },
                "reset_password_token": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "password changed",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "x-nullable": true
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended",
                        "deleted"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "email": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "organization_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "roles": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "organization_settings": {
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 580,
                  "first_name": "Reanna Hoppe",
                  "last_name": "Levi Runolfsson",
                  "phone_number": "",
                  "date_of_birth": null,
                  "address": "",
                  "country_id": 1168,
                  "state_id": 583,
                  "zip_code": "",
                  "status": "active",
                  "created_at": "April 08, 2018 17:56",
                  "updated_at": "April 08, 2018 17:56",
                  "email": "parker_fritsch@hicklepfeffer.com",
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "organization_ids": [
                    572
                  ],
                  "roles": null,
                  "group_ids": [

                  ],
                  "organization_settings": null
                },
                "token": "eyJhbGciOiJIUzI1NiJ9.eyJpZCI6NTgwLCJleHAiOjE1NTQ3NDYyMDcsInR5cGUiOiJ1c2VyIiwiZW1haWwiOiJwYXJrZXJfZnJpdHNjaEBoaWNrbGVwZmVmZmVyLmNvbSJ9.8WH09ZyhnQ7Zcx1gaL0TufE7M_Er4llRGSlptuMEvnY"
              }
            }
          },
          "400": {
            "description": "fail with wrong token",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "invalid data"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/registrations": {
      "post": {
        "summary": "Sign up",
        "tags": [
          "Sign up"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "user created",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "x-nullable": true
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended",
                        "deleted"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "email": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "organization_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "roles": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "organization_settings": {
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 585,
                  "first_name": "",
                  "last_name": "",
                  "phone_number": "",
                  "date_of_birth": null,
                  "address": "",
                  "country_id": 0,
                  "state_id": 0,
                  "zip_code": "",
                  "status": "active",
                  "created_at": "April 08, 2018 17:56",
                  "updated_at": "April 08, 2018 17:56",
                  "email": "jaylen.ohara@daughertyjacobi.info",
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "organization_ids": [

                  ],
                  "roles": null,
                  "group_ids": [

                  ],
                  "organization_settings": null
                }
              }
            }
          },
          "400": {
            "description": "registration is fail with existing email",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "items": {
                      "email": "array"
                    }
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "wrong_data",
                "errors": [
                  {
                    "email": [
                      "has already been taken"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions": {
      "delete": {
        "summary": "Destroy a session",
        "tags": [
          "Session"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "session destroyed",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a session",
        "tags": [
          "Session"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "session created",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "x-nullable": true
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended",
                        "deleted"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "email": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "organization_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "roles": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "organization_settings": {
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 591,
                  "first_name": "Reanna Hoppe",
                  "last_name": "Levi Runolfsson",
                  "phone_number": "",
                  "date_of_birth": null,
                  "address": "",
                  "country_id": 1188,
                  "state_id": 593,
                  "zip_code": "",
                  "status": "active",
                  "created_at": "April 08, 2018 17:56",
                  "updated_at": "April 08, 2018 17:56",
                  "email": "yasmeen@hudson.com",
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "organization_ids": [
                    582
                  ],
                  "roles": null,
                  "group_ids": [

                  ],
                  "organization_settings": null
                },
                "token": "eyJhbGciOiJIUzI1NiJ9.eyJpZCI6NTkxLCJleHAiOjE1NTQ3NDYyMDgsInR5cGUiOiJ1c2VyIiwiZW1haWwiOiJ5YXNtZWVuQGh1ZHNvbi5jb20ifQ.LFJCqtXMZbOAwK9lLRU2n61vFqTESGKl2Ylj_-n1nqM"
              }
            }
          },
          "401": {
            "description": "session is fail with wrong email",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "wrong_credentials",
                "errors": [
                  "Error with your login or password"
                ]
              }
            }
          },
          "400": {
            "description": "session is fail if user is not confirmed",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "items": {
                      "email": "array"
                    }
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": 400,
                "errors": [
                  {
                    "email": "email is not confirmed"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/states": {
      "get": {
        "summary": "List of States",
        "tags": [
          "States"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "states": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "country_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "code": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "required": [
                "states"
              ]
            },
            "examples": {
              "application/json": {
                "states": [
                  {
                    "id": 601,
                    "name": "North Dakota",
                    "country_id": 1205,
                    "code": "MN",
                    "created_at": "April 08, 2018 17:56",
                    "updated_at": "April 08, 2018 17:56",
                    "country": {
                      "id": 1205,
                      "code": "UA",
                      "name": "Mayotte",
                      "phonecode": 522
                    }
                  },
                  {
                    "id": 602,
                    "name": "New York",
                    "country_id": 1206,
                    "code": "MN",
                    "created_at": "April 08, 2018 17:56",
                    "updated_at": "April 08, 2018 17:56",
                    "country": {
                      "id": 1206,
                      "code": "UA",
                      "name": "Belarus",
                      "phonecode": 522
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 2,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/states/{id}": {
      "get": {
        "summary": "Details of State",
        "tags": [
          "States"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "state": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    }
                  }
                }
              },
              "required": [
                "state"
              ]
            },
            "examples": {
              "application/json": {
                "state": {
                  "id": 604,
                  "name": "Florida",
                  "country_id": 1209,
                  "code": "MN",
                  "created_at": "April 08, 2018 17:56",
                  "updated_at": "April 08, 2018 17:56",
                  "country": {
                    "id": 1209,
                    "code": "UA",
                    "name": "Angola",
                    "phonecode": 522
                  }
                }
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find State with 'id'=0"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{course_id}/lessons/{lesson_id}/tasks": {
      "get": {
        "summary": "List of Tasks",
        "tags": [
          "Tasks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "lesson_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "tasks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "action_type": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "reading",
                          "question",
                          "watch"
                        ]
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "lesson_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "required": [
                "tasks"
              ]
            },
            "examples": {
              "application/json": {
                "tasks": [
                  {
                    "id": 48,
                    "action_type": "reading",
                    "description": "Labore officia saepe aliquam. Molestias autem libero ab et quia. Et numquam dicta. Rem et repudiandae facere mollitia officia ut debitis. Et ex animi tenetur totam omnis odit.",
                    "lesson_id": 83,
                    "user_id": 602,
                    "created_at": "April 08, 2018 17:56",
                    "updated_at": "April 08, 2018 17:56",
                    "attachments": [

                    ],
                    "videos": [

                    ],
                    "comments": [

                    ]
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{course_id}/lessons/{lesson_id}/tasks/{id}": {
      "get": {
        "summary": "Details of Task",
        "tags": [
          "Tasks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "lesson_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "action_type": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "reading",
                        "question",
                        "watch"
                      ]
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "lesson_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    }
                  }
                }
              },
              "required": [
                "task"
              ]
            },
            "examples": {
              "application/json": {
                "task": {
                  "id": 51,
                  "action_type": "reading",
                  "description": "Labore officia saepe aliquam. Molestias autem libero ab et quia. Et numquam dicta. Rem et repudiandae facere mollitia officia ut debitis. Et ex animi tenetur totam omnis odit.",
                  "lesson_id": 86,
                  "user_id": 612,
                  "created_at": "April 08, 2018 17:56",
                  "updated_at": "April 08, 2018 17:56",
                  "attachments": [

                  ],
                  "videos": [

                  ],
                  "comments": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Task with 'id'=0 [WHERE \"tasks\".\"lesson_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "summary": "Get Users inside organization",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "get users from specific group"
          },
          {
            "name": "term",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "term for searching by [:first_name, :last_name, :email]"
          },
          {
            "name": "role",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "filter by role(student, teacher)"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "first_name": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "last_name": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "phone_number": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "date_of_birth": {
                        "type": "date",
                        "x-nullable": true
                      },
                      "address": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "country_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "state_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "zip_code": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "active",
                          "suspended",
                          "deleted"
                        ]
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "email": {
                        "type": "string"
                      },
                      "avatar": {
                        "type": "object",
                        "x-nullable": true
                      },
                      "organization_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "integer",
                          "properties": {
                          }
                        }
                      },
                      "roles": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "group_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "integer",
                          "properties": {
                          }
                        }
                      },
                      "organization_settings": {
                        "type": "object",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "users"
              ]
            },
            "examples": {
              "application/json": {
                "users": [
                  {
                    "id": 625,
                    "first_name": "Reanna Hoppe",
                    "last_name": "Levi Runolfsson",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 1259,
                    "state_id": 630,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "April 08, 2018 17:56",
                    "updated_at": "April 08, 2018 17:56",
                    "email": "brooks@hackett.biz",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      614
                    ],
                    "roles": null,
                    "group_ids": [

                    ],
                    "organization_settings": {
                      "id": 564,
                      "user_id": 625,
                      "organization_id": 614,
                      "role": "admin",
                      "created_at": "April 08, 2018 17:56",
                      "updated_at": "April 08, 2018 17:56",
                      "status": "active",
                      "exclude_students_ids": [

                      ],
                      "files_controll_enabled": false,
                      "messanger_access_enabled": false
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create User",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "email": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "password_confirmation": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended",
                        "deleted"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "email": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "organization_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "roles": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "organization_settings": {
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 635,
                  "first_name": "Reanna Hoppe",
                  "last_name": "Levi Runolfsson",
                  "phone_number": "",
                  "date_of_birth": null,
                  "address": "",
                  "country_id": 1279,
                  "state_id": 640,
                  "zip_code": "",
                  "status": "active",
                  "created_at": "April 08, 2018 17:56",
                  "updated_at": "April 08, 2018 17:56",
                  "email": "monserrate_heidenreich@boyer.co",
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "organization_ids": [

                  ],
                  "roles": null,
                  "group_ids": [

                  ],
                  "organization_settings": null
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "summary": "Get User Details",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended",
                        "deleted"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "email": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "organization_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "roles": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "organization_settings": {
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 629,
                  "first_name": "Reanna Hoppe",
                  "last_name": "Levi Runolfsson",
                  "phone_number": "",
                  "date_of_birth": null,
                  "address": "",
                  "country_id": 1267,
                  "state_id": 634,
                  "zip_code": "",
                  "status": "active",
                  "created_at": "April 08, 2018 17:56",
                  "updated_at": "April 08, 2018 17:56",
                  "email": "hal_lockman@goodwin.net",
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "organization_ids": [
                    617
                  ],
                  "roles": null,
                  "group_ids": [

                  ],
                  "organization_settings": {
                    "id": 567,
                    "user_id": 629,
                    "organization_id": 617,
                    "role": "admin",
                    "created_at": "April 08, 2018 17:56",
                    "updated_at": "April 08, 2018 17:56",
                    "status": "active",
                    "exclude_students_ids": [

                    ],
                    "files_controll_enabled": false,
                    "messanger_access_enabled": false
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find User with 'id'=0"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update User Details",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "email": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "password_confirmation": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "organization_users_attributes": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "role": {
                            "type": "string",
                            "x-nullable": true,
                            "enum": [
                              "student",
                              "teacher",
                              "admin"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "x-nullable": true,
                            "enum": [
                              "active",
                              "suspended"
                            ]
                          },
                          "exclude_students_ids": {
                            "type": "array",
                            "x-nullable": true,
                            "items": {
                              "type": "integer",
                              "properties": {
                              }
                            }
                          },
                          "files_controll_enabled": {
                            "type": "boolean",
                            "x-nullable": true
                          },
                          "messanger_access_enabled": {
                            "type": "boolean",
                            "x-nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "email": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 639,
                  "first_name": "Reanna Hoppe",
                  "last_name": "Levi Runolfsson",
                  "phone_number": "",
                  "date_of_birth": null,
                  "address": "",
                  "country_id": 1289,
                  "state_id": 645,
                  "zip_code": "",
                  "status": "active",
                  "created_at": "April 08, 2018 17:57",
                  "updated_at": "April 08, 2018 17:57",
                  "email": "nolan@bayer.name",
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "organization_ids": [
                    624
                  ],
                  "roles": null,
                  "group_ids": [

                  ],
                  "organization_settings": {
                    "id": 574,
                    "user_id": 639,
                    "organization_id": 624,
                    "role": "admin",
                    "created_at": "April 08, 2018 17:57",
                    "updated_at": "April 08, 2018 17:57",
                    "status": "active",
                    "exclude_students_ids": [

                    ],
                    "files_controll_enabled": false,
                    "messanger_access_enabled": false
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find User with 'id'=0"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete User",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting User account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find User with 'id'=0"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}/send_set_password_link": {
      "post": {
        "summary": "Send set password link to user",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns result",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find User with 'id'=0"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{videoable_type}/{videoable_id}/videos": {
      "get": {
        "summary": "Videos",
        "tags": [
          "Videos"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "videoable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "videoable_type",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "videos": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "length": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "organization_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "videoable_type": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "videoable_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "video_link": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "draft",
                          "processing",
                          "ready",
                          "failed"
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "videos"
              ]
            },
            "examples": {
              "application/json": {
                "videos": [
                  {
                    "id": 1,
                    "title": "Wilkinson Inc",
                    "length": 3861,
                    "organization_id": 636,
                    "user_id": 654,
                    "videoable_type": "Task",
                    "videoable_id": 55,
                    "created_at": "April 08, 2018 17:57",
                    "updated_at": "April 08, 2018 17:57",
                    "video_link": "https://youtu.be/BL50xRTnHTQ",
                    "status": "ready",
                    "videoable": {
                      "id": 55,
                      "action_type": "reading",
                      "description": "Labore officia saepe aliquam. Molestias autem libero ab et quia. Et numquam dicta. Rem et repudiandae facere mollitia officia ut debitis. Et ex animi tenetur totam omnis odit.",
                      "lesson_id": 90,
                      "user_id": 657,
                      "created_at": "April 08, 2018 17:57",
                      "updated_at": "April 08, 2018 17:57",
                      "attachments": [

                      ],
                      "videos": [
                        {
                        }
                      ],
                      "comments": [

                      ]
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Video with youtube link",
        "tags": [
          "Videos"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "videoable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "videoable_type",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "video": {
                  "type": "object",
                  "properties": {
                    "videoable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "videoable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "video_link": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "video"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "video": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "length": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "videoable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "videoable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "video_link": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "draft",
                        "processing",
                        "ready",
                        "failed"
                      ]
                    }
                  }
                }
              },
              "required": [
                "video"
              ]
            },
            "examples": {
              "application/json": {
                "video": {
                  "id": 5,
                  "title": "",
                  "length": 3861,
                  "organization_id": 648,
                  "user_id": 667,
                  "videoable_type": "Task",
                  "videoable_id": 58,
                  "created_at": "April 08, 2018 17:57",
                  "updated_at": "April 08, 2018 17:57",
                  "video_link": "https://youtu.be/BL50xRTnHTQ",
                  "status": "ready",
                  "videoable": {
                    "id": 58,
                    "action_type": "reading",
                    "description": "Labore officia saepe aliquam. Molestias autem libero ab et quia. Et numquam dicta. Rem et repudiandae facere mollitia officia ut debitis. Et ex animi tenetur totam omnis odit.",
                    "lesson_id": 93,
                    "user_id": 670,
                    "created_at": "April 08, 2018 17:57",
                    "updated_at": "April 08, 2018 17:57",
                    "attachments": [

                    ],
                    "videos": [
                      {
                      },
                      {
                      }
                    ],
                    "comments": [

                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{videoable_type}/{videoable_id}/videos/get_token": {
      "post": {
        "summary": "Get token for uploading video to Sproutvideo",
        "tags": [
          "Videos"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "videoable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "videoable_type",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "video": {
                  "type": "object",
                  "properties": {
                    "videoable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "videoable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "video_link": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "video"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "video": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "length": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "videoable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "videoable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "video_link": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "draft",
                        "processing",
                        "ready",
                        "failed"
                      ]
                    }
                  }
                }
              },
              "required": [
                "video"
              ]
            },
            "examples": {
              "application/json": {
                "video": {
                  "id": 9,
                  "title": "",
                  "length": 0,
                  "organization_id": 663,
                  "user_id": 681,
                  "videoable_type": "Task",
                  "videoable_id": 61,
                  "created_at": "April 08, 2018 17:57",
                  "updated_at": "April 08, 2018 17:57",
                  "video_link": "",
                  "status": "draft",
                  "sproutvideo_id": null,
                  "token": "06acbb8448aeb784efa4b915cbc005a8",
                  "embed_code": null,
                  "videoable": {
                    "id": 61,
                    "action_type": "reading",
                    "description": "Labore officia saepe aliquam. Molestias autem libero ab et quia. Et numquam dicta. Rem et repudiandae facere mollitia officia ut debitis. Et ex animi tenetur totam omnis odit.",
                    "lesson_id": 96,
                    "user_id": 684,
                    "created_at": "April 08, 2018 17:57",
                    "updated_at": "April 08, 2018 17:57",
                    "attachments": [

                    ],
                    "videos": [
                      {
                      },
                      {
                      }
                    ],
                    "comments": [

                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{videoable_type}/{videoable_id}/videos/{id}": {
      "put": {
        "summary": "Update Video",
        "tags": [
          "Videos"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "videoable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "videoable_type",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "video": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "video"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "video": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "video"
              ]
            },
            "examples": {
              "application/json": {
                "video": {
                  "id": 12,
                  "title": "Wilkinson Inc",
                  "length": 3861,
                  "organization_id": 678,
                  "user_id": 695,
                  "videoable_type": "Task",
                  "videoable_id": 64,
                  "created_at": "April 08, 2018 17:57",
                  "updated_at": "April 08, 2018 17:57",
                  "video_link": "https://youtu.be/BL50xRTnHTQ",
                  "status": "ready",
                  "videoable": {
                    "id": 64,
                    "action_type": "reading",
                    "description": "Labore officia saepe aliquam. Molestias autem libero ab et quia. Et numquam dicta. Rem et repudiandae facere mollitia officia ut debitis. Et ex animi tenetur totam omnis odit.",
                    "lesson_id": 99,
                    "user_id": 698,
                    "created_at": "April 08, 2018 17:57",
                    "updated_at": "April 08, 2018 17:57",
                    "attachments": [

                    ],
                    "videos": [
                      {
                      }
                    ],
                    "comments": [

                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Video with 'id'=0 [WHERE \"videos\".\"videoable_id\" = $1 AND \"videos\".\"videoable_type\" = $2]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Video",
        "tags": [
          "Videos"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "videoable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "videoable_type",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Video account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Video with 'id'=0 [WHERE \"videos\".\"videoable_id\" = $1 AND \"videos\".\"videoable_type\" = $2]"
                ]
              }
            }
          }
        }
      }
    }
  }
}