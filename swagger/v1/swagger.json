{
  "swagger": "2.0",
  "info": {
    "title": "API V1",
    "version": "v1"
  },
  "properties" : {
    "group": {
      "type": "object",
      "properties": {
        "id": {"type": "integer"},
        "organization_id": {"type": "integer", "x-nullable": true },
        "title": {"type": "string", "x-nullable": true },
        "description": {"type": "text", "x-nullable": true },
        "status": {"type": "string", "x-nullable": true,
          "enum": [
            "active",
            "pause"
          ]
        },
        "user_limit": {"type": "integer", "x-nullable": true },
        "visibility": {"type": "string", "x-nullable": true,
          "enum": [
            "private",
            "public"
          ]
        },
        "created_at": { "type" : "datetime" },
        "updated_at": { "type" : "datetime" },
        "count_participants": {"type": "integer", "x-nullable": true },
        "user_id": {"type": "integer", "x-nullable": true },
        "noticeboard_settings": {
          "type": "jsonb"
        },
        "user_ids": {
          "type": "array",
          "x-nullable": true,
          "items": {"type": "integer", "properties": {}
          }
        },
        "participated": {
          "description": "group_user instance for current user if he participated in group",
          "type": "object",
          "x-nullable": true }
      }
    }
  },
  "examples" : {
    "group" : {
      "type": "object",
      "properties": {
        "description": {"type": "text", "x-nullable": true },
        "status": {"type": "string", "x-nullable": true,
          "enum": [
            "active",
            "pause"
          ]
        },
        "title": {"type": "string", "x-nullable": true },
        "user_limit": {"type": "integer", "x-nullable": true },
        "visibility": {"type": "string", "x-nullable": true,
          "enum": [
            "private",
            "public"
          ]
        },
        "noticeboard_enabled": { "type" : "boolean" },
        "student_can_post": { "type" : "boolean" },
        "student_can_comment": { "type" : "boolean" }
      }
    },
    "course" : {
      "id": 4,
      "title": "Block, Tillman and Hudson",
      "description": "maximize innovative eyeballs",
      "image": {
        "url": "https://equipengine-dev.s3-eu-west-2.amazonaws.com/uploads/course/image/4/image.jpeg?X-Amz-Expires=600&X-Amz-Date=20180422T091029Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ4HLSQCUSVYCXNUA/20180422/eu-west-2/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=7e185de56d03e317d27641dd58c6f71ae4db0d88e49d91d2ee201def53709a68"
      },
      "banner_image": {
        "url": "https://equipengine-dev.s3-eu-west-2.amazonaws.com/uploads/course/image/1/image.jpeg?X-Amz-Expires=600&X-Amz-Date=20180422T091024Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ4HLSQCUSVYCXNUA/20180422/eu-west-2/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=579749afd10fba56a9b18ac612004433838a7ed76789d75d046ae2f933f348a9"
      },
      "user_id": 19,
      "organization_id": 16,
      "created_at": "2018-04-22T09:10:00.000+00:00",
      "updated_at": "2018-04-22T09:10:00.000+00:00",
      "lessons_count": 10,
      "completed_lessons": 3,
      "incompleted_lessons": 7,
      "group_ids": [
        7
      ],
      "active_user_ids": null,
      "course_users_state": null,
      "course_for_current_student": null
    }
  },
  "paths": {
    "/api/v1/{notifiable_type}/{notifiable_id}/activities": {
      "get": {
        "summary": "Activities",
        "tags": [
          "Activities"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "notifiable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "notifiable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "User",
              "Group"
            ]
          },
          {
            "name": "flagged",
            "in": "query",
            "type": "boolean",
            "required": false
          },
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "pending",
              "sent",
              "read"
            ],
            "description": "Filter activities by status"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "Filter activities by person who created it"
          },
          {
            "name": "lesson_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "Filter activities by lesson"
          },
          {
            "name": "course_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "Filter activities by course"
          },
          {
            "name": "sort_field",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "created_at",
              "flagged",
              "status"
            ],
            "description": "field for sorting"
          },
          {
            "name": "sort_flag",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "ASC",
              "DESC"
            ],
            "description": "flag for sorting"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "activities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {"type": "integer"},
                      "eventable_type": {"type": "string", "x-nullable": true },
                      "eventable_id": {"type": "integer", "x-nullable": true },
                      "notifiable_type": {"type": "string", "x-nullable": true },
                      "notifiable_id": {"type": "integer", "x-nullable": true },
                      "message": {
                        "type": "jsonb"
                      },
                      "status": {"type": "string", "x-nullable": true,
                        "enum": [
                          "pending",
                          "sent",
                          "read"
                        ]
                      },
                      "created_at": { "type" : "datetime" },
                      "updated_at": { "type" : "datetime" },
                      "task_id": {"type": "integer", "x-nullable": true },
                      "lesson_id": {"type": "integer", "x-nullable": true },
                      "course_id": {"type": "integer", "x-nullable": true },
                      "group_id": {"type": "integer", "x-nullable": true },
                      "organization_id": {"type": "integer", "x-nullable": true },
                      "user_id": {"type": "integer", "x-nullable": true },
                      "flagged": {
                        "type": "boolean",
                        "x-nullable": true },
                      "teachers": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "object",
                          "properties": {}
                        }
                      }
                    }
                  }
                }
              },
              "required": [ "activities" ]
            },
            "examples": {
              "application/json": {
                "activities": [
                  {
                    "id": 1,
                    "eventable_type": "Comment",
                    "eventable_id": 1,
                    "notifiable_type": "User",
                    "notifiable_id": 1,
                    "message": {
                      "plain_text": "Magni sit nihil dignissimos aut.",
                      "teacher_ids": [
                        1
                      ]
                    },
                    "status": "pending",
                    "created_at": "2018-04-22T09:10:00.000+00:00",
                    "updated_at": "2018-04-22T09:10:00.000+00:00",
                    "task_id": 1,
                    "lesson_id": 1,
                    "course_id": 1,
                    "group_id": 1,
                    "organization_id": 1,
                    "user_id": 2,
                    "flagged": false,
                    "teachers": [
                      {
                        "id": 1,
                        "first_name": "Kitty Will",
                        "last_name": "Saul Lakin",
                        "phone_number": "",
                        "date_of_birth": null,
                        "address": "",
                        "country_id": 3,
                        "state_id": 2,
                        "zip_code": "",
                        "status": "active",
                        "created_at": "2018-04-22T09:10:00.000+00:00",
                        "updated_at": "2018-04-22T09:10:00.000+00:00",
                        "email": "brandy.beier@schaefer.com",
                        "avatar": {
                          "url": null,
                          "small": {
                            "url": null
                          },
                          "middle": {
                            "url": null
                          }
                        },
                        "organization_ids": [
                          1
                        ],
                        "roles": null,
                        "group_ids": [],
                        "organization_settings": {
                          "id": 1,
                          "user_id": 1,
                          "organization_id": 1,
                          "role": "teacher",
                          "created_at": "2018-04-22T09:10:00.000+00:00",
                          "updated_at": "2018-04-22T09:10:00.000+00:00",
                          "status": "active",
                          "exclude_students_ids": [],
                          "files_controll_enabled": true,
                          "messanger_access_enabled": true,
                          "activity_settings": null
                        }
                      }
                    ],
                    "eventable": {
                      "id": 1,
                      "commentable_id": 2,
                      "commentable_type": "Group",
                      "title": "Quia voluptas et ratione cum.",
                      "body": "Sint minima illo in nulla. Est quis sequi. Eum laudantium doloribus quae magni. Sint ratione enim aspernatur sunt soluta aperiam.",
                      "user_id": 5,
                      "root_id": 0,
                      "main_root_id": 1,
                      "created_at": "2018-04-22T09:10:00.000+00:00",
                      "updated_at": "2018-04-22T09:10:00.000+00:00",
                      "tree_path": [
                        "1"
                      ],
                      "user": {
                        "id": 5,
                        "first_name": "Kitty Will",
                        "last_name": "Saul Lakin",
                        "phone_number": "",
                        "date_of_birth": null,
                        "address": "",
                        "country_id": 17,
                        "state_id": 9,
                        "zip_code": "",
                        "status": "active",
                        "created_at": "2018-04-22T09:10:00.000+00:00",
                        "updated_at": "2018-04-22T09:10:00.000+00:00",
                        "email": "monique@okeefebogisich.net",
                        "avatar": {
                          "url": null,
                          "small": {
                            "url": null
                          },
                          "middle": {
                            "url": null
                          }
                        },
                        "organization_ids": [
                          5
                        ],
                        "roles": null,
                        "group_ids": [],
                        "organization_settings": null
                      }
                    },
                    "notifiable": {
                      "id": 1,
                      "first_name": "Kitty Will",
                      "last_name": "Saul Lakin",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 3,
                      "state_id": 2,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "2018-04-22T09:10:00.000+00:00",
                      "updated_at": "2018-04-22T09:10:00.000+00:00",
                      "email": "brandy.beier@schaefer.com",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "organization_ids": [
                        1
                      ],
                      "roles": null,
                      "group_ids": [],
                      "organization_settings": {
                        "id": 1,
                        "user_id": 1,
                        "organization_id": 1,
                        "role": "teacher",
                        "created_at": "2018-04-22T09:10:00.000+00:00",
                        "updated_at": "2018-04-22T09:10:00.000+00:00",
                        "status": "active",
                        "exclude_students_ids": [],
                        "files_controll_enabled": true,
                        "messanger_access_enabled": true,
                        "activity_settings": null
                      }
                    },
                    "lesson": {
                      "id": 1,
                      "title": "Fisher-Batz",
                      "description": "cultivate e-business channels",
                      "status": "active",
                      "user_id": 4,
                      "course_id": 1,
                      "created_at": "2018-04-22T09:10:00.000+00:00",
                      "updated_at": "2018-04-22T09:10:00.000+00:00",
                      "course_settings": null
                    },
                    "task": {
                      "id": 1,
                      "action_type": "reading",
                      "description": "Architecto consequatur magni. Hic pariatur cupiditate reiciendis consequatur mollitia deserunt. Dolorem delectus quo in est at adipisci architecto. Illum dolores quaerat. Qui possimus ut ex eos nulla cumque voluptas.",
                      "lesson_id": 1,
                      "user_id": 1,
                      "created_at": "2018-04-22T09:10:00.000+00:00",
                      "updated_at": "2018-04-22T09:10:00.000+00:00",
                      "task_user": null
                    },
                    "course": { "$ref": "#/examples/course" },
                    "group": { "$ref": "#/examples/group" },
                    "user": {
                      "id": 2,
                      "first_name": "Kitty Will",
                      "last_name": "Saul Lakin",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 5,
                      "state_id": 3,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "2018-04-22T09:10:00.000+00:00",
                      "updated_at": "2018-04-22T09:10:00.000+00:00",
                      "email": "loren@kunde.org",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "organization_ids": [
                        1
                      ],
                      "roles": null,
                      "group_ids": [],
                      "organization_settings": {
                        "id": 2,
                        "user_id": 2,
                        "organization_id": 1,
                        "role": "student",
                        "created_at": "2018-04-22T09:10:00.000+00:00",
                        "updated_at": "2018-04-22T09:10:00.000+00:00",
                        "status": "active",
                        "exclude_students_ids": [],
                        "files_controll_enabled": true,
                        "messanger_access_enabled": true,
                        "activity_settings": null
                      }
                    }
                  }
                ],
                "meta": {
                  "size": 1,
                  "limit_value": null
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{notifiable_type}/{notifiable_id}/activities/{id}": {
      "put": {
        "summary": "Update status of Activity",
        "tags": [
          "Activities"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "notifiable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "notifiable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "User",
              "Group"
            ]
          },
          {
            "name": "flagged",
            "in": "query",
            "type": "boolean",
            "required": false
          },
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "pending",
              "sent",
              "read"
            ],
            "description": "Filter activities by status"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "Filter activities by person who created it"
          },
          {
            "name": "lesson_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "Filter activities by lesson"
          },
          {
            "name": "course_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "Filter activities by course"
          },
          {
            "name": "sort_field",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "created_at",
              "flagged",
              "status"
            ],
            "description": "field for sorting"
          },
          {
            "name": "sort_flag",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "ASC",
              "DESC"
            ],
            "description": "flag for sorting"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "activity": {
                  "type": "object",
                  "properties": {
                    "status": {"type": "string", "x-nullable": true,
                      "enum": [
                        "pending",
                        "sent",
                        "read"
                      ]
                    },
                    "flagged": {
                      "type": "boolean",
                      "x-nullable": true }
                  }
                }
              },
              "required": [ "activity" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "activity": {
                  "type": "object",
                  "properties": {
                    "status": {"type": "string", "x-nullable": true,
                      "enum": [
                        "pending",
                        "sent",
                        "read"
                      ]
                    },
                    "flagged": {
                      "type": "boolean",
                      "x-nullable": true }
                  }
                }
              },
              "required": [ "activity" ]
            },
            "examples": {
              "application/json": {
                "activity": {
                  "id": 7,
                  "eventable_type": "Comment",
                  "eventable_id": 4,
                  "notifiable_type": "User",
                  "notifiable_id": 17,
                  "message": {
                    "plain_text": "Nesciunt dolores animi perspiciatis sed.",
                    "teacher_ids": [
                      17
                    ]
                  },
                  "status": "pending",
                  "created_at": "2018-04-22T09:10:00.000+00:00",
                  "updated_at": "2018-04-22T09:10:00.000+00:00",
                  "task_id": 4,
                  "lesson_id": 4,
                  "course_id": 4,
                  "group_id": 7,
                  "organization_id": 16,
                  "user_id": 18,
                  "flagged": false,
                  "teachers": [
                    {
                      "id": 17,
                      "first_name": "Kitty Will",
                      "last_name": "Saul Lakin",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 65,
                      "state_id": 33,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "2018-04-22T09:10:00.000+00:00",
                      "updated_at": "2018-04-22T09:10:00.000+00:00",
                      "email": "dwight.stiedemann@parisian.org",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "organization_ids": [
                        16
                      ],
                      "roles": null,
                      "group_ids": [],
                      "organization_settings": {
                        "id": 16,
                        "user_id": 17,
                        "organization_id": 16,
                        "role": "teacher",
                        "created_at": "2018-04-22T09:10:00.000+00:00",
                        "updated_at": "2018-04-22T09:10:00.000+00:00",
                        "status": "active",
                        "exclude_students_ids": [],
                        "files_controll_enabled": true,
                        "messanger_access_enabled": true,
                        "activity_settings": null
                      }
                    }
                  ],
                  "eventable": {
                    "id": 4,
                    "commentable_id": 8,
                    "commentable_type": "Group",
                    "title": "Quia voluptas et ratione cum.",
                    "body": "Sint minima illo in nulla. Est quis sequi. Eum laudantium doloribus quae magni. Sint ratione enim aspernatur sunt soluta aperiam.",
                    "user_id": 21,
                    "root_id": 0,
                    "main_root_id": 4,
                    "created_at": "2018-04-22T09:10:00.000+00:00",
                    "updated_at": "2018-04-22T09:10:00.000+00:00",
                    "tree_path": [
                      "4"
                    ],
                    "user": {
                      "id": 21,
                      "first_name": "Kitty Will",
                      "last_name": "Saul Lakin",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 79,
                      "state_id": 40,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "2018-04-22T09:10:00.000+00:00",
                      "updated_at": "2018-04-22T09:10:00.000+00:00",
                      "email": "ayana@huel.info",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "organization_ids": [
                        20
                      ],
                      "roles": null,
                      "group_ids": [],
                      "organization_settings": null
                    }
                  },
                  "notifiable": {
                    "id": 17,
                    "first_name": "Kitty Will",
                    "last_name": "Saul Lakin",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 65,
                    "state_id": 33,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "2018-04-22T09:10:00.000+00:00",
                    "updated_at": "2018-04-22T09:10:00.000+00:00",
                    "email": "dwight.stiedemann@parisian.org",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      16
                    ],
                    "roles": null,
                    "group_ids": [],
                    "organization_settings": {
                      "id": 16,
                      "user_id": 17,
                      "organization_id": 16,
                      "role": "teacher",
                      "created_at": "2018-04-22T09:10:00.000+00:00",
                      "updated_at": "2018-04-22T09:10:00.000+00:00",
                      "status": "active",
                      "exclude_students_ids": [],
                      "files_controll_enabled": true,
                      "messanger_access_enabled": true,
                      "activity_settings": null
                    }
                  },
                  "lesson": {
                    "id": 4,
                    "title": "Fisher-Batz",
                    "description": "cultivate e-business channels",
                    "status": "active",
                    "user_id": 20,
                    "course_id": 4,
                    "created_at": "2018-04-22T09:10:00.000+00:00",
                    "updated_at": "2018-04-22T09:10:00.000+00:00",
                    "course_settings": null
                  },
                  "task": {
                    "id": 4,
                    "action_type": "reading",
                    "description": "Architecto consequatur magni. Hic pariatur cupiditate reiciendis consequatur mollitia deserunt. Dolorem delectus quo in est at adipisci architecto. Illum dolores quaerat. Qui possimus ut ex eos nulla cumque voluptas.",
                    "lesson_id": 4,
                    "user_id": 17,
                    "created_at": "2018-04-22T09:10:00.000+00:00",
                    "updated_at": "2018-04-22T09:10:00.000+00:00",
                    "task_user": null
                  },
                  "course": { "$ref": "#/examples/course" },
                  "group": { "$ref": "#/examples/group" },
                  "user": {
                    "id": 18,
                    "first_name": "Kitty Will",
                    "last_name": "Saul Lakin",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 67,
                    "state_id": 34,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "2018-04-22T09:10:00.000+00:00",
                    "updated_at": "2018-04-22T09:10:00.000+00:00",
                    "email": "sven@stracke.info",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      16
                    ],
                    "roles": null,
                    "group_ids": [],
                    "organization_settings": {
                      "id": 17,
                      "user_id": 18,
                      "organization_id": 16,
                      "role": "student",
                      "created_at": "2018-04-22T09:10:00.000+00:00",
                      "updated_at": "2018-04-22T09:10:00.000+00:00",
                      "status": "active",
                      "exclude_students_ids": [],
                      "files_controll_enabled": true,
                      "messanger_access_enabled": true,
                      "activity_settings": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Activity with 'id'=0 [WHERE \"activities\".\"notifiable_id\" = $1 AND \"activities\".\"notifiable_type\" = $2]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Activity",
        "tags": [
          "Activities"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "notifiable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "notifiable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "User",
              "Group"
            ]
          },
          {
            "name": "flagged",
            "in": "query",
            "type": "boolean",
            "required": false
          },
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "pending",
              "sent",
              "read"
            ],
            "description": "Filter activities by status"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "Filter activities by person who created it"
          },
          {
            "name": "lesson_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "Filter activities by lesson"
          },
          {
            "name": "course_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "Filter activities by course"
          },
          {
            "name": "sort_field",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "created_at",
              "flagged",
              "status"
            ],
            "description": "field for sorting"
          },
          {
            "name": "sort_flag",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "ASC",
              "DESC"
            ],
            "description": "flag for sorting"
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Activity account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [ "success" ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Activity with 'id'=0 [WHERE \"activities\".\"notifiable_id\" = $1 AND \"activities\".\"notifiable_type\" = $2]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses": {
      "get": {
        "summary": "Get Courses inside organization",
        "tags": [
          "Admin - Course"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "get courses from specific group"
          },
          {
            "name": "term",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "term for searching by [:title, :description]"
          },
          {
            "name": "sort_field",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "title",
              "created_at",
              "lessons_count",
              "active_user_ids"
            ],
            "description": "field for sorting"
          },
          {
            "name": "sort_flag",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "ASC",
              "DESC"
            ],
            "description": "flag for sorting"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "courses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {"type": "integer"},
                      "title": {"type": "string", "x-nullable": true },
                      "description": {"type": "text", "x-nullable": true },
                      "image": {
                        "type": "object",
                        "x-nullable": true },
                      "banner_image": {
                        "type": "object",
                        "x-nullable": true },
                      "user_id": {"type": "integer", "x-nullable": true },
                      "organization_id": {"type": "integer", "x-nullable": true },
                      "created_at": { "type" : "datetime" },
                      "updated_at": { "type" : "datetime" },
                      "lessons_count": {"type": "integer", "x-nullable": true },
                      "group_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {"type": "integer", "properties": {}
                        }
                      },
                      "active_user_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {"type": "integer", "properties": {}
                        }
                      },
                      "course_users_state": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {"type": "string", "properties": {}
                        }
                      },
                      "course_for_current_student": {
                        "description": "information about user's association to this course",
                        "type": "object",
                        "x-nullable": true }
                    }
                  }
                }
              },
              "required": [ "courses" ]
            },
            "examples": {
              "application/json": {
                "courses": [
                  { "$ref": "#/examples/course" }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Course",
        "tags": [
          "Admin - Course"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "description": {"type": "text", "x-nullable": true },
                    "image": {
                      "type": "object",
                      "x-nullable": true },
                    "banner_image": {
                      "type": "object",
                      "x-nullable": true },
                    "title": {"type": "string", "x-nullable": true }
                  }
                }
              },
              "required": [ "course" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "title": {"type": "string", "x-nullable": true },
                    "description": {"type": "text", "x-nullable": true },
                    "image": {
                      "type": "object",
                      "x-nullable": true },
                    "banner_image": {
                      "type": "object",
                      "x-nullable": true },
                    "user_id": {"type": "integer", "x-nullable": true },
                    "organization_id": {"type": "integer", "x-nullable": true },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" },
                    "lessons_count": {"type": "integer", "x-nullable": true },
                    "group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {"type": "integer", "properties": {}
                      }
                    },
                    "active_user_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {"type": "integer", "properties": {}
                      }
                    },
                    "course_users_state": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {"type": "string", "properties": {}
                      }
                    },
                    "course_for_current_student": {
                      "description": "information about user's association to this course",
                      "type": "object",
                      "x-nullable": true }
                  }
                }
              },
              "required": [ "course" ]
            },
            "examples": {
              "application/json": {
                "course": { "$ref": "#/examples/course" }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses/{id}": {
      "get": {
        "summary": "Get Course Details",
        "tags": [
          "Admin - Course"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "title": {"type": "string", "x-nullable": true },
                    "description": {"type": "text", "x-nullable": true },
                    "image": {
                      "type": "object",
                      "x-nullable": true },
                    "banner_image": {
                      "type": "object",
                      "x-nullable": true },
                    "user_id": {"type": "integer", "x-nullable": true },
                    "organization_id": {"type": "integer", "x-nullable": true },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" },
                    "lessons_count": {"type": "integer", "x-nullable": true },
                    "group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {"type": "integer", "properties": {}
                      }
                    },
                    "active_user_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {"type": "integer", "properties": {}
                      }
                    },
                    "course_users_state": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {"type": "string", "properties": {}
                      }
                    },
                    "course_for_current_student": {
                      "description": "information about user's association to this course",
                      "type": "object",
                      "x-nullable": true }
                  }
                }
              },
              "required": [ "course" ]
            },
            "examples": {
              "application/json": {
                "course": { "$ref": "#/examples/course" }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Course with 'id'=0 [WHERE \"courses\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Course Details",
        "tags": [
          "Admin - Course"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "description": {"type": "text", "x-nullable": true },
                    "image": {
                      "type": "object",
                      "x-nullable": true },
                    "banner_image": {
                      "type": "object",
                      "x-nullable": true },
                    "title": {"type": "string", "x-nullable": true }
                  }
                }
              },
              "required": [ "course" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "title": {"type": "string", "x-nullable": true },
                    "description": {"type": "text", "x-nullable": true },
                    "image": {
                      "type": "object",
                      "x-nullable": true },
                    "banner_image": {
                      "type": "object",
                      "x-nullable": true },
                    "lesson_users": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "required": [ "course" ]
            },
            "examples": {
              "application/json": {
                "course": { "$ref": "#/examples/course" }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Course with 'id'=0 [WHERE \"courses\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Course",
        "tags": [
          "Admin - Course"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Course account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [ "success" ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Course with 'id'=0 [WHERE \"courses\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses/{course_id}/lessons": {
      "get": {
        "summary": "Lessons for course",
        "tags": [
          "Admin - Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "lessons": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {"type": "integer"},
                      "title": {"type": "string", "x-nullable": true },
                      "description": {"type": "text", "x-nullable": true },
                      "status": {"type": "string", "x-nullable": true,
                        "enum": [
                          "active",
                          "pause"
                        ]
                      },
                      "user_id": {"type": "integer", "x-nullable": true },
                      "course_id": {"type": "integer", "x-nullable": true },
                      "created_at": { "type" : "datetime" },
                      "updated_at": { "type" : "datetime" },
                      "course_settings": {
                        "description": "course settings for current group",
                        "type": "object",
                        "x-nullable": true }
                    }
                  }
                }
              },
              "required": [ "lessons" ]
            },
            "examples": {
              "application/json": {
                "lessons": [
                  {
                    "id": 12,
                    "title": "Fisher-Batz",
                    "description": "cultivate e-business channels",
                    "status": "active",
                    "user_id": 106,
                    "course_id": 31,
                    "created_at": "April 22, 2018 09:11",
                    "updated_at": "April 22, 2018 09:11",
                    "course_settings": null,
                    "tasks": []
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add lesson to course",
        "tags": [
          "Admin - Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "lesson": {
                  "type": "object",
                  "properties": {
                    "description": {"type": "text", "x-nullable": true },
                    "status": {"type": "string", "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "title": {"type": "string", "x-nullable": true }
                  }
                }
              },
              "required": [ "lesson" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "lesson": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "title": {"type": "string", "x-nullable": true },
                    "description": {"type": "text", "x-nullable": true },
                    "status": {"type": "string", "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "user_id": {"type": "integer", "x-nullable": true },
                    "course_id": {"type": "integer", "x-nullable": true },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" },
                    "course_settings": {
                      "description": "course settings for current group",
                      "type": "object",
                      "x-nullable": true }
                  }
                }
              },
              "required": [ "lesson"
              ]
            },
            "examples": {
              "application/json": {
                "lesson": {
                  "id": 16,
                  "title": "Fisher-Batz",
                  "description": "cultivate e-business channels",
                  "status": "active",
                  "user_id": 114,
                  "course_id": 34,
                  "created_at": "April 22, 2018 09:11",
                  "updated_at": "April 22, 2018 09:11",
                  "course_settings": null,
                  "tasks": []
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses/{course_id}/lessons/{id}": {
      "get": {
        "summary": "Get info about lesson at specific course",
        "tags": [
          "Admin - Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "included_lesson_users_for_current_student",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "lesson_users for current user and courses will be included inside course instance in meta section"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "lesson": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "title": {"type": "string", "x-nullable": true },
                    "description": {"type": "text", "x-nullable": true },
                    "status": {"type": "string", "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "user_id": {"type": "integer", "x-nullable": true },
                    "course_id": {"type": "integer", "x-nullable": true },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" },
                    "course_settings": {
                      "description": "course settings for current group",
                      "type": "object",
                      "x-nullable": true }
                  }
                }
              },
              "required": [ "lesson" ]
            },
            "examples": {
              "application/json": {
                "lesson": {
                  "id": 19,
                  "title": "Fisher-Batz",
                  "description": "cultivate e-business channels",
                  "status": "active",
                  "user_id": 128,
                  "course_id": 38,
                  "created_at": "April 22, 2018 09:11",
                  "updated_at": "April 22, 2018 09:11",
                  "course_settings": null,
                  "tasks": []
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Lesson with 'id'=0 [WHERE \"lessons\".\"course_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update attributes of lesson",
        "tags": [
          "Admin - Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "lesson": {
                  "type": "object",
                  "properties": {
                    "description": {"type": "text", "x-nullable": true },
                    "status": {"type": "string", "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "title": {"type": "string", "x-nullable": true }
                  }
                }
              },
              "required": [ "lesson" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "lesson": {
                  "type": "object",
                  "properties": {
                    "title": {"type": "string", "x-nullable": true },
                    "description": {"type": "text", "x-nullable": true },
                    "status": {"type": "string", "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    }
                  }
                }
              },
              "required": [ "lesson" ]
            },
            "examples": {
              "application/json": {
                "lesson": {
                  "id": 23,
                  "title": "Fisher-Batz",
                  "description": "cultivate e-business channels",
                  "status": "active",
                  "user_id": 141,
                  "course_id": 42,
                  "created_at": "April 22, 2018 09:11",
                  "updated_at": "April 22, 2018 09:11",
                  "course_settings": null,
                  "tasks": []
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Lesson with 'id'=0 [WHERE \"lessons\".\"course_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete lesson",
        "tags": [
          "Admin - Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Lesson account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [ "success" ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Lesson with 'id'=0 [WHERE \"lessons\".\"course_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses/{course_id}/lessons/{lesson_id}/tasks": {
      "get": {
        "summary": "List of Tasks",
        "tags": [
          "Admin - Tasks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "lesson_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "tasks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {"type": "integer"},
                      "action_type": {"type": "string", "x-nullable": true,
                        "enum": [
                          "reading",
                          "question",
                          "watch"
                        ]
                      },
                      "description": {"type": "text", "x-nullable": true },
                      "lesson_id": {"type": "integer", "x-nullable": true },
                      "user_id": {"type": "integer", "x-nullable": true },
                      "created_at": { "type" : "datetime" },
                      "updated_at": { "type" : "datetime" },
                      "task_user": {
                        "description": "task_user - association for user/task/group",
                        "type": "object",
                        "x-nullable": true }
                    }
                  }
                }
              },
              "required": [ "tasks" ]
            },
            "examples": {
              "application/json": {
                "tasks": [
                  {
                    "id": 12,
                    "action_type": "reading",
                    "description": "Architecto consequatur magni. Hic pariatur cupiditate reiciendis consequatur mollitia deserunt. Dolorem delectus quo in est at adipisci architecto. Illum dolores quaerat. Qui possimus ut ex eos nulla cumque voluptas.",
                    "lesson_id": 31,
                    "user_id": 167,
                    "created_at": "April 22, 2018 09:11",
                    "updated_at": "April 22, 2018 09:11",
                    "task_user": null,
                    "attachments": [],
                    "videos": []
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Task",
        "tags": [
          "Admin - Tasks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "lesson_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "properties": {
                    "action_type": {"type": "string", "x-nullable": true,
                      "enum": [
                        "reading",
                        "question",
                        "watch"
                      ]
                    },
                    "description": {"type": "text", "x-nullable": true },
                    "attachments_attributes": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {"type": "integer"},
                          "description": {"type": "text", "x-nullable": true },
                          "data": {
                            "type": "object",
                            "x-nullable": true },
                          "title": {"type": "string", "x-nullable": true }
                        }
                      }
                    },
                    "videos_attributes": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {"type": "integer"},
                          "video_link": {"type": "string", "x-nullable": true },
                          "title": {"type": "string", "x-nullable": true },
                          "description": {"type": "string", "x-nullable": true }
                        }
                      }
                    }
                  }
                }
              },
              "required": [ "task" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "action_type": {"type": "string", "x-nullable": true,
                      "enum": [
                        "reading",
                        "question",
                        "watch"
                      ]
                    },
                    "description": {"type": "text", "x-nullable": true },
                    "lesson_id": {"type": "integer", "x-nullable": true },
                    "user_id": {"type": "integer", "x-nullable": true },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" },
                    "task_user": {
                      "description": "task_user - association for user/task/group",
                      "type": "object",
                      "x-nullable": true }
                  }
                }
              },
              "required": [ "task" ]
            },
            "examples": {
              "application/json": {
                "task": {
                  "id": 20,
                  "action_type": "reading",
                  "description": "Architecto consequatur magni. Hic pariatur cupiditate reiciendis consequatur mollitia deserunt. Dolorem delectus quo in est at adipisci architecto. Illum dolores quaerat. Qui possimus ut ex eos nulla cumque voluptas.",
                  "lesson_id": 38,
                  "user_id": 190,
                  "created_at": "April 22, 2018 09:11",
                  "updated_at": "April 22, 2018 09:11",
                  "task_user": null,
                  "attachments": [],
                  "videos": []
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses/{course_id}/lessons/{lesson_id}/tasks/{id}": {
      "get": {
        "summary": "Details of Task",
        "tags": [
          "Admin - Tasks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "lesson_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "action_type": {"type": "string", "x-nullable": true,
                      "enum": [
                        "reading",
                        "question",
                        "watch"
                      ]
                    },
                    "description": {"type": "text", "x-nullable": true },
                    "lesson_id": {"type": "integer", "x-nullable": true },
                    "user_id": {"type": "integer", "x-nullable": true },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" },
                    "task_user": {
                      "description": "task_user - association for user/task/group",
                      "type": "object",
                      "x-nullable": true }
                  }
                }
              },
              "required": [ "task" ]
            },
            "examples": {
              "application/json": {
                "task": {
                  "id": 15,
                  "action_type": "reading",
                  "description": "Architecto consequatur magni. Hic pariatur cupiditate reiciendis consequatur mollitia deserunt. Dolorem delectus quo in est at adipisci architecto. Illum dolores quaerat. Qui possimus ut ex eos nulla cumque voluptas.",
                  "lesson_id": 34,
                  "user_id": 177,
                  "created_at": "April 22, 2018 09:11",
                  "updated_at": "April 22, 2018 09:11",
                  "task_user": null,
                  "attachments": [],
                  "videos": []
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Task with 'id'=0 [WHERE \"tasks\".\"lesson_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update details of Task",
        "tags": [
          "Admin - Tasks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "lesson_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "properties": {
                    "action_type": {"type": "string", "x-nullable": true,
                      "enum": [
                        "reading",
                        "question",
                        "watch"
                      ]
                    },
                    "description": {"type": "text", "x-nullable": true },
                    "attachments_attributes": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {"type": "integer"},
                          "description": {"type": "text", "x-nullable": true },
                          "data": {
                            "type": "object",
                            "x-nullable": true },
                          "title": {"type": "string", "x-nullable": true }
                        }
                      }
                    },
                    "videos_attributes": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {"type": "integer"},
                          "video_link": {"type": "string", "x-nullable": true },
                          "title": {"type": "string", "x-nullable": true },
                          "description": {"type": "string", "x-nullable": true }
                        }
                      }
                    }
                  }
                }
              },
              "required": [ "task" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "properties": {
                    "action_type": {"type": "string", "x-nullable": true,
                      "enum": [
                        "reading",
                        "question",
                        "watch"
                      ]
                    },
                    "description": {"type": "text", "x-nullable": true }
                  }
                }
              },
              "required": [ "task" ]
            },
            "examples": {
              "application/json": {
                "task": {
                  "id": 23,
                  "action_type": "reading",
                  "description": "Architecto consequatur magni. Hic pariatur cupiditate reiciendis consequatur mollitia deserunt. Dolorem delectus quo in est at adipisci architecto. Illum dolores quaerat. Qui possimus ut ex eos nulla cumque voluptas.",
                  "lesson_id": 42,
                  "user_id": 203,
                  "created_at": "April 22, 2018 09:11",
                  "updated_at": "April 22, 2018 09:11",
                  "task_user": null,
                  "attachments": [],
                  "videos": []
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Task with 'id'=0 [WHERE \"tasks\".\"lesson_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Task",
        "tags": [
          "Admin - Tasks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "lesson_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Task account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [ "success" ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Task with 'id'=0 [WHERE \"tasks\".\"lesson_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{attachmentable_type}/{attachmentable_id}/attachments": {
      "get": {
        "summary": "Attachments",
        "tags": [
          "Attachments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "attachmentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "attachmentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Task",
              "TaskUser",
              "Course",
              "Group",
              "Lesson",
              "Organization",
              "Chat",
              "ChatMessage"
            ]
          },
          {
            "name": "term",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "term for searching by [:file_name, :title, :description]"
          },
          {
            "name": "sort_field",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "file_name",
              "title",
              "created_at"
            ],
            "description": "field for sorting"
          },
          {
            "name": "sort_flag",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "ASC",
              "DESC"
            ],
            "description": "flag for sorting"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "attachments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {"type": "integer"},
                      "title": {"type": "string", "x-nullable": true },
                      "description": {"type": "text", "x-nullable": true },
                      "data": {
                        "type": "object",
                        "x-nullable": true },
                      "user_id": {"type": "integer", "x-nullable": true },
                      "organization_id": {"type": "integer", "x-nullable": true },
                      "created_at": { "type" : "datetime" },
                      "updated_at": { "type" : "datetime" },
                      "attachmentable_type": {"type": "string", "x-nullable": true },
                      "attachmentable_id": {"type": "integer", "x-nullable": true },
                      "file_name": {"type": "string", "x-nullable": true }
                    }
                  }
                }
              },
              "required": [
                "attachments"
              ]
            },
            "examples": {
              "application/json": {
                "attachments": [
                  {
                    "id": 1,
                    "title": "Schuster Inc",
                    "description": "enable clicks-and-mortar functionalities",
                    "data": {
                      "url": "https://equipengine-dev.s3-eu-west-2.amazonaws.com/uploads/attachment/data/1/data.jpeg?X-Amz-Expires=600&X-Amz-Date=20180422T091152Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ4HLSQCUSVYCXNUA/20180422/eu-west-2/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=b4ef6ce1bbaaad8984ffcb4507d43bb2ada185c445151b740a8f47053d5a8a72"
                    },
                    "user_id": 232,
                    "organization_id": 222,
                    "created_at": "April 22, 2018 09:11",
                    "updated_at": "April 22, 2018 09:11",
                    "attachmentable_type": "Task",
                    "attachmentable_id": 31,
                    "file_name": null,
                    "attachmentable": {
                      "id": 31,
                      "action_type": "question",
                      "description": "Architecto consequatur magni. Hic pariatur cupiditate reiciendis consequatur mollitia deserunt. Dolorem delectus quo in est at adipisci architecto. Illum dolores quaerat. Qui possimus ut ex eos nulla cumque voluptas.",
                      "lesson_id": 51,
                      "user_id": 235,
                      "created_at": "April 22, 2018 09:11",
                      "updated_at": "April 22, 2018 09:11",
                      "task_user": null,
                      "attachments": [
                        {}
                      ],
                      "videos": []
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Attachment",
        "tags": [
          "Attachments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "attachmentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "attachmentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Task",
              "TaskUser",
              "Course",
              "Group",
              "Lesson",
              "Organization",
              "Chat",
              "ChatMessage"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "attachment": {
                  "type": "object",
                  "properties": {
                    "attachmentable_id": {"type": "integer", "x-nullable": true },
                    "attachmentable_type": {"type": "string", "x-nullable": true },
                    "description": {"type": "text", "x-nullable": true },
                    "data": {
                      "type": "object",
                      "x-nullable": true },
                    "title": {"type": "string", "x-nullable": true }
                  }
                }
              },
              "required": [ "attachment" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "attachment": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "title": {"type": "string", "x-nullable": true },
                    "description": {"type": "text", "x-nullable": true },
                    "data": {
                      "type": "object",
                      "x-nullable": true },
                    "user_id": {"type": "integer", "x-nullable": true },
                    "organization_id": {"type": "integer", "x-nullable": true },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" },
                    "attachmentable_type": {"type": "string", "x-nullable": true },
                    "attachmentable_id": {"type": "integer", "x-nullable": true },
                    "file_name": {"type": "string", "x-nullable": true }
                  }
                }
              },
              "required": [ "attachment" ]
            },
            "examples": {
              "application/json": {
                "attachment": {
                  "id": 5,
                  "title": "",
                  "description": null,
                  "data": {
                    "url": "https://equipengine-dev.s3-eu-west-2.amazonaws.com/uploads/attachment/data/5/data.jpeg?X-Amz-Expires=600&X-Amz-Date=20180422T091202Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ4HLSQCUSVYCXNUA/20180422/eu-west-2/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=b1b1ffa8ef01fde2e648caed496a67fc70df490b4752f28cae9e39b79233f214"
                  },
                  "user_id": 245,
                  "organization_id": 234,
                  "created_at": "April 22, 2018 09:12",
                  "updated_at": "April 22, 2018 09:12",
                  "attachmentable_type": "Task",
                  "attachmentable_id": 34,
                  "file_name": null,
                  "attachmentable": {
                    "id": 34,
                    "action_type": "question",
                    "description": "Architecto consequatur magni. Hic pariatur cupiditate reiciendis consequatur mollitia deserunt. Dolorem delectus quo in est at adipisci architecto. Illum dolores quaerat. Qui possimus ut ex eos nulla cumque voluptas.",
                    "lesson_id": 54,
                    "user_id": 248,
                    "created_at": "April 22, 2018 09:11",
                    "updated_at": "April 22, 2018 09:11",
                    "task_user": null,
                    "attachments": [
                      {},
                      {}
                    ],
                    "videos": []
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{attachmentable_type}/{attachmentable_id}/attachments/{id}": {
      "put": {
        "summary": "Update Attachment",
        "tags": [
          "Attachments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "attachmentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "attachmentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Task",
              "TaskUser",
              "Course",
              "Group",
              "Lesson",
              "Organization",
              "Chat",
              "ChatMessage"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "attachment": {
                  "type": "object",
                  "properties": {
                    "attachmentable_id": {"type": "integer", "x-nullable": true },
                    "attachmentable_type": {"type": "string", "x-nullable": true },
                    "description": {"type": "text", "x-nullable": true },
                    "data": {
                      "type": "object",
                      "x-nullable": true },
                    "title": {"type": "string", "x-nullable": true }
                  }
                }
              },
              "required": [ "attachment" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "attachment": {
                  "type": "object",
                  "properties": {
                    "title": {"type": "string", "x-nullable": true },
                    "description": {"type": "text", "x-nullable": true },
                    "data": {
                      "type": "object",
                      "x-nullable": true },
                    "attachmentable_type": {"type": "string", "x-nullable": true },
                    "attachmentable_id": {"type": "integer", "x-nullable": true }
                  }
                }
              },
              "required": [ "attachment" ]
            },
            "examples": {
              "application/json": {
                "attachment": {
                  "id": 8,
                  "title": "Schuster Inc",
                  "description": "enable clicks-and-mortar functionalities",
                  "data": {
                    "url": "https://equipengine-dev.s3-eu-west-2.amazonaws.com/uploads/attachment/data/8/data.jpeg?X-Amz-Expires=600&X-Amz-Date=20180422T091208Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ4HLSQCUSVYCXNUA/20180422/eu-west-2/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=20ba73556c51b9ae8c328d4b3b95b9dd832056132cde5c3b2e48e0fbd0a66876"
                  },
                  "user_id": 259,
                  "organization_id": 249,
                  "created_at": "April 22, 2018 09:12",
                  "updated_at": "April 22, 2018 09:12",
                  "attachmentable_type": "Organization",
                  "attachmentable_id": 255,
                  "file_name": null,
                  "attachmentable": {
                    "title": "Crooks Inc",
                    "subdomain": "lubowitz255",
                    "domain": "ivbednar.net",
                    "description": "Bahringer Group",
                    "logo": "",
                    "address": "Bergnaum-Bogan",
                    "zip_code": "Sauer, O'Keefe and Rodriguez",
                    "website": "mccullough.biz",
                    "email": "eden_flatley@emard.co",
                    "phone": "Hyatt, O'Hara and Graham",
                    "language": "ru"
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Attachment with 'id'=0 [WHERE \"attachments\".\"attachmentable_id\" = $1 AND \"attachments\".\"attachmentable_type\" = $2]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Attachment",
        "tags": [
          "Attachments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "attachmentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "attachmentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Task",
              "TaskUser",
              "Course",
              "Group",
              "Lesson",
              "Organization",
              "Chat",
              "ChatMessage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Attachment account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [ "success" ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Attachment with 'id'=0 [WHERE \"attachments\".\"attachmentable_id\" = $1 AND \"attachments\".\"attachmentable_type\" = $2]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/chats/{chat_id}/chat_messages": {
      "get": {
        "summary": "List of Chat Messages",
        "tags": [
          "ChatMessages"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "chat_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "chat_messages": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {"type": "integer"},
                      "user_id": {"type": "integer", "x-nullable": true },
                      "chat_id": {"type": "integer", "x-nullable": true },
                      "message": {"type": "text", "x-nullable": true },
                      "created_at": { "type" : "datetime" },
                      "updated_at": { "type" : "datetime" }
                    }
                  }
                }
              },
              "required": [ "chat_messages" ]
            },
            "examples": {
              "application/json": {
                "chat_messages": [
                  {
                    "id": 1,
                    "user_id": 295,
                    "chat_id": 1,
                    "message": "Necessitatibus ut voluptas amet et et iusto. At odio minima fugit fugiat et nihil qui. Quisquam sed vel repudiandae magnam molestias. Tenetur deserunt molestiae laudantium possimus voluptas quia aut.",
                    "created_at": "April 22, 2018 09:12",
                    "updated_at": "April 22, 2018 09:12",
                    "attachments": [
                      {
                        "id": 16,
                        "title": "Schuster Inc",
                        "description": "enable clicks-and-mortar functionalities",
                        "data": {
                          "url": "https://equipengine-dev.s3-eu-west-2.amazonaws.com/uploads/attachment/data/16/data.jpeg?X-Amz-Expires=600&X-Amz-Date=20180422T091224Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ4HLSQCUSVYCXNUA/20180422/eu-west-2/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=461d0106254b90f51a23883045bd5a52e1f7de686b9fc7b9732163a2874b02bb"
                        },
                        "user_id": 294,
                        "organization_id": 284,
                        "created_at": "April 22, 2018 09:12",
                        "updated_at": "April 22, 2018 09:12",
                        "attachmentable_type": "ChatMessage",
                        "attachmentable_id": 1,
                        "file_name": null
                      }
                    ]
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Chat Message",
        "tags": [
          "ChatMessages"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "chat_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "chat_message": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "text", "x-nullable": true },
                    "to_user_id": {
                      "description": "recepient of message, if chat is not determinated yet",
                      "type": "integer"
                    },
                    "attachment_id": {
                      "description": "attachment from chat, that uploaded before and should to be attached to current message",
                      "type": "integer"
                    }
                  }
                }
              },
              "required": [ "chat_message" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "chat_message": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "user_id": {"type": "integer", "x-nullable": true },
                    "chat_id": {"type": "integer", "x-nullable": true },
                    "message": {"type": "text", "x-nullable": true },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" }
                  }
                }
              },
              "required": [ "chat_message" ]
            },
            "examples": {
              "application/json": {
                "chat_message": {
                  "id": 5,
                  "user_id": 301,
                  "chat_id": 4,
                  "message": "Necessitatibus ut voluptas amet et et iusto. At odio minima fugit fugiat et nihil qui. Quisquam sed vel repudiandae magnam molestias. Tenetur deserunt molestiae laudantium possimus voluptas quia aut.",
                  "created_at": "April 22, 2018 09:12",
                  "updated_at": "April 22, 2018 09:12",
                  "attachments": []
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/chats/{chat_id}/chat_messages/{id}": {
      "put": {
        "summary": "Update details of Chat Message",
        "tags": [
          "ChatMessages"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "chat_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "chat_message": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "text", "x-nullable": true }
                  }
                }
              },
              "required": [ "chat_message" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "chat_message": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "text", "x-nullable": true }
                  }
                }
              },
              "required": [ "chat_message" ]
            },
            "examples": {
              "application/json": {
                "chat_message": {
                  "id": 8,
                  "user_id": 310,
                  "chat_id": 8,
                  "message": "Necessitatibus ut voluptas amet et et iusto. At odio minima fugit fugiat et nihil qui. Quisquam sed vel repudiandae magnam molestias. Tenetur deserunt molestiae laudantium possimus voluptas quia aut.",
                  "created_at": "April 22, 2018 09:12",
                  "updated_at": "April 22, 2018 09:12",
                  "attachments": [
                    {
                      "id": 22,
                      "title": "Schuster Inc",
                      "description": "enable clicks-and-mortar functionalities",
                      "data": {
                        "url": "https://equipengine-dev.s3-eu-west-2.amazonaws.com/uploads/attachment/data/22/data.jpeg?X-Amz-Expires=600&X-Amz-Date=20180422T091231Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ4HLSQCUSVYCXNUA/20180422/eu-west-2/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=bb8fa55a02913de171fb6f08f0c2479f153763f2542d0ef328c9c404d0b853cc"
                      },
                      "user_id": 309,
                      "organization_id": 298,
                      "created_at": "April 22, 2018 09:12",
                      "updated_at": "April 22, 2018 09:12",
                      "attachmentable_type": "ChatMessage",
                      "attachmentable_id": 8,
                      "file_name": null
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find ChatMessage with 'id'=0 [WHERE \"chat_messages\".\"chat_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Chat Message",
        "tags": [
          "ChatMessages"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "chat_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting ChatMessage account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [ "success" ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find ChatMessage with 'id'=0 [WHERE \"chat_messages\".\"chat_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/chats/with_opponent/{opponent_id}": {
      "get": {
        "summary": "Get/Create Chat with opponent",
        "tags": [
          "Chats"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "opponent_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "chat": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "title": {"type": "string", "x-nullable": true },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" },
                    "organization_id": {"type": "integer", "x-nullable": true }
                  }
                }
              },
              "required": [ "chat" ]
            },
            "examples": {
              "application/json": {
                "chat": {
                  "id": 18,
                  "title": "",
                  "created_at": "April 22, 2018 09:12",
                  "updated_at": "April 22, 2018 09:12",
                  "organization_id": 316,
                  "users": [
                    {
                      "id": 328,
                      "first_name": "Kitty Will",
                      "last_name": "Saul Lakin",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 1285,
                      "state_id": 643,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "April 22, 2018 09:12",
                      "updated_at": "April 22, 2018 09:12",
                      "email": "gillian@ruelwalter.com",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "organization_ids": [
                        316
                      ],
                      "roles": null,
                      "group_ids": [],
                      "organization_settings": {
                        "id": 302,
                        "user_id": 328,
                        "organization_id": 316,
                        "role": "admin",
                        "created_at": "April 22, 2018 09:12",
                        "updated_at": "April 22, 2018 09:12",
                        "status": "active",
                        "exclude_students_ids": [],
                        "files_controll_enabled": true,
                        "messanger_access_enabled": true,
                        "activity_settings": null
                      }
                    },
                    {
                      "id": 329,
                      "first_name": "Kitty Will",
                      "last_name": "Saul Lakin",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 1289,
                      "state_id": 645,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "April 22, 2018 09:12",
                      "updated_at": "April 22, 2018 09:12",
                      "email": "alaina_lang@rolfson.info",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "organization_ids": [
                        316
                      ],
                      "roles": null,
                      "group_ids": [],
                      "organization_settings": {
                        "id": 303,
                        "user_id": 329,
                        "organization_id": 316,
                        "role": "admin",
                        "created_at": "April 22, 2018 09:12",
                        "updated_at": "April 22, 2018 09:12",
                        "status": "active",
                        "exclude_students_ids": [],
                        "files_controll_enabled": true,
                        "messanger_access_enabled": true,
                        "activity_settings": null
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/chats": {
      "get": {
        "summary": "List of Chats",
        "tags": [
          "Chats"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "chats": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {"type": "integer"},
                      "title": {"type": "string", "x-nullable": true },
                      "created_at": { "type" : "datetime" },
                      "updated_at": { "type" : "datetime" },
                      "organization_id": {"type": "integer", "x-nullable": true }
                    }
                  }
                }
              },
              "required": [ "chats" ]
            },
            "examples": {
              "application/json": {
                "chats": [
                  {
                    "id": 21,
                    "title": "Provident tempora impedit saepe ea ipsum dolorem aut.",
                    "created_at": "April 22, 2018 09:12",
                    "updated_at": "April 22, 2018 09:12",
                    "organization_id": 319,
                    "users": []
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/chats/{id}": {
      "get": {
        "summary": "Details of Chat",
        "tags": [
          "Chats"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "chat": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "title": {"type": "string", "x-nullable": true },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" },
                    "organization_id": {"type": "integer", "x-nullable": true }
                  }
                }
              },
              "required": [ "chat" ]
            },
            "examples": {
              "application/json": {
                "chat": {
                  "id": 24,
                  "title": "Provident tempora impedit saepe ea ipsum dolorem aut.",
                  "created_at": "April 22, 2018 09:12",
                  "updated_at": "April 22, 2018 09:12",
                  "organization_id": 322,
                  "users": []
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Chat with 'id'=0"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update details of Chat",
        "tags": [
          "Chats"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "chat": {
                  "type": "object",
                  "properties": {
                    "title": {"type": "string", "x-nullable": true }
                  }
                }
              },
              "required": [ "chat" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "chat": {
                  "type": "object",
                  "properties": {
                    "title": {"type": "string", "x-nullable": true }
                  }
                }
              },
              "required": [ "chat" ]
            },
            "examples": {
              "application/json": {
                "chat": {
                  "id": 28,
                  "title": "Provident tempora impedit saepe ea ipsum dolorem aut.",
                  "created_at": "April 22, 2018 09:12",
                  "updated_at": "April 22, 2018 09:12",
                  "organization_id": 326,
                  "users": []
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Chat with 'id'=0"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Chat",
        "tags": [
          "Chats"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Chat account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [ "success" ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Chat with 'id'=0"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/cities": {
      "get": {
        "summary": "List of Cities",
        "tags": [
          "Cities"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "cities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {"type": "integer"},
                      "name": {"type": "string", "x-nullable": true },
                      "state_id": {"type": "integer", "x-nullable": true },
                      "created_at": { "type" : "datetime" },
                      "updated_at": { "type" : "datetime" }
                    }
                  }
                }
              },
              "required": [ "cities" ]
            },
            "examples": {
              "application/json": {
                "cities": [
                  {
                    "id": 1,
                    "name": "Wilkinsonbury",
                    "state_id": 690,
                    "created_at": "April 22, 2018 09:12",
                    "updated_at": "April 22, 2018 09:12",
                    "state": {
                      "id": 690,
                      "name": "Nebraska",
                      "country_id": 1380,
                      "code": "AL",
                      "created_at": "April 22, 2018 09:12",
                      "updated_at": "April 22, 2018 09:12",
                      "country": {
                        "id": 1380,
                        "code": "CG",
                        "name": "Tuvalu",
                        "phonecode": 896
                      }
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cities/{id}": {
      "get": {
        "summary": "Details of City",
        "tags": [
          "Cities"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "city": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "name": {"type": "string", "x-nullable": true },
                    "state_id": {"type": "integer", "x-nullable": true },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" }
                  }
                }
              },
              "required": [ "city" ]
            },
            "examples": {
              "application/json": {
                "city": {
                  "id": 2,
                  "name": "New Maryam",
                  "state_id": 693,
                  "created_at": "April 22, 2018 09:12",
                  "updated_at": "April 22, 2018 09:12",
                  "state": {
                    "id": 693,
                    "name": "Maryland",
                    "country_id": 1386,
                    "code": "AL",
                    "created_at": "April 22, 2018 09:12",
                    "updated_at": "April 22, 2018 09:12",
                    "country": {
                      "id": 1386,
                      "code": "CG",
                      "name": "Republic of Korea",
                      "phonecode": 896
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find City with 'id'=0"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{commentable_type}/{commentable_id}/comments": {
      "get": {
        "summary": "List of Comments as tree view by default",
        "tags": [
          "Comments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "commentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "commentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Group",
              "TaskUser",
              "CourseThread"
            ]
          },
          {
            "name": "only_roots",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "returns only root comments"
          },
          {
            "name": "root_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "returns comments under specific comment"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "comments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {"type": "integer"},
                      "commentable_id": {"type": "integer", "x-nullable": true },
                      "commentable_type": {"type": "string", "x-nullable": true },
                      "title": {"type": "string", "x-nullable": true },
                      "body": {"type": "text", "x-nullable": true },
                      "user_id": {"type": "integer"},
                      "root_id": {"type": "integer", "x-nullable": true },
                      "main_root_id": {"type": "integer", "x-nullable": true },
                      "created_at": { "type" : "datetime" },
                      "updated_at": { "type" : "datetime" },
                      "tree_path": {"type": "text", "x-nullable": true }
                    }
                  }
                }
              },
              "required": [ "comments" ]
            },
            "examples": {
              "application/json": {
                "comments": [
                  {
                    "id": 13,
                    "commentable_id": 39,
                    "commentable_type": "Group",
                    "title": "Quia voluptas et ratione cum.",
                    "body": "Sint minima illo in nulla. Est quis sequi. Eum laudantium doloribus quae magni. Sint ratione enim aspernatur sunt soluta aperiam.",
                    "user_id": 357,
                    "root_id": 0,
                    "main_root_id": 13,
                    "created_at": "April 22, 2018 09:12",
                    "updated_at": "April 22, 2018 09:12",
                    "tree_path": [
                      "13"
                    ],
                    "user": {
                      "id": 357,
                      "first_name": "Kitty Will",
                      "last_name": "Saul Lakin",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 1395,
                      "state_id": 698,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "April 22, 2018 09:12",
                      "updated_at": "April 22, 2018 09:12",
                      "email": "syble@dibbertgulgowski.name",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "organization_ids": [
                        338
                      ],
                      "roles": null,
                      "group_ids": [],
                      "organization_settings": {
                        "id": 326,
                        "user_id": 357,
                        "organization_id": 338,
                        "role": "student",
                        "created_at": "April 22, 2018 09:12",
                        "updated_at": "April 22, 2018 09:12",
                        "status": "active",
                        "exclude_students_ids": [],
                        "files_controll_enabled": true,
                        "messanger_access_enabled": true,
                        "activity_settings": null
                      }
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Comment",
        "tags": [
          "Comments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "commentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "commentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Group",
              "TaskUser",
              "CourseThread"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "object",
                  "properties": {
                    "body": {"type": "text", "x-nullable": true },
                    "subject": {"type": "string", "x-nullable": true },
                    "title": {"type": "string", "x-nullable": true },
                    "root_id": {"type": "integer", "x-nullable": true },
                    "attachment_id": {
                      "description": "attachment from thread, that uploaded before and should to be attached to current message",
                      "type": "integer"
                    }
                  }
                }
              },
              "required": [ "comment" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "commentable_id": {"type": "integer", "x-nullable": true },
                    "commentable_type": {"type": "string", "x-nullable": true },
                    "title": {"type": "string", "x-nullable": true },
                    "body": {"type": "text", "x-nullable": true },
                    "user_id": {"type": "integer"},
                    "root_id": {"type": "integer", "x-nullable": true },
                    "main_root_id": {"type": "integer", "x-nullable": true },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" },
                    "tree_path": {"type": "text", "x-nullable": true }
                  }
                }
              },
              "required": [ "comment" ]
            },
            "examples": {
              "application/json": {
                "comment": {
                  "id": 17,
                  "commentable_id": 42,
                  "commentable_type": "Group",
                  "title": "Quia voluptas et ratione cum.",
                  "body": "Sint minima illo in nulla. Est quis sequi. Eum laudantium doloribus quae magni. Sint ratione enim aspernatur sunt soluta aperiam.",
                  "user_id": 361,
                  "root_id": 0,
                  "main_root_id": 0,
                  "created_at": "April 22, 2018 09:12",
                  "updated_at": "April 22, 2018 09:12",
                  "tree_path": [],
                  "user": {
                    "id": 361,
                    "first_name": "Kitty Will",
                    "last_name": "Saul Lakin",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 1409,
                    "state_id": 705,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "April 22, 2018 09:12",
                    "updated_at": "April 22, 2018 09:12",
                    "email": "pamela@vonrueden.io",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      341
                    ],
                    "roles": null,
                    "group_ids": [],
                    "organization_settings": {
                      "id": 329,
                      "user_id": 361,
                      "organization_id": 341,
                      "role": "student",
                      "created_at": "April 22, 2018 09:12",
                      "updated_at": "April 22, 2018 09:12",
                      "status": "active",
                      "exclude_students_ids": [],
                      "files_controll_enabled": true,
                      "messanger_access_enabled": true,
                      "activity_settings": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{commentable_type}/{commentable_id}/comments/{id}": {
      "put": {
        "summary": "Update details of Comment",
        "tags": [
          "Comments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "commentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "commentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Group",
              "TaskUser",
              "CourseThread"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "object",
                  "properties": {
                    "body": {"type": "text", "x-nullable": true },
                    "subject": {"type": "string", "x-nullable": true },
                    "title": {"type": "string", "x-nullable": true },
                    "root_id": {"type": "integer", "x-nullable": true },
                    "attachment_id": {
                      "description": "attachment from thread, that uploaded before and should to be attached to current message",
                      "type": "integer"
                    }
                  }
                }
              },
              "required": [ "comment" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "object",
                  "properties": {
                    "title": {"type": "string", "x-nullable": true },
                    "body": {"type": "text", "x-nullable": true },
                    "root_id": {"type": "integer", "x-nullable": true }
                  }
                }
              },
              "required": [ "comment" ]
            },
            "examples": {
              "application/json": {
                "comment": {
                  "id": 20,
                  "commentable_id": 46,
                  "commentable_type": "Group",
                  "title": "Quia voluptas et ratione cum.",
                  "body": "Sint minima illo in nulla. Est quis sequi. Eum laudantium doloribus quae magni. Sint ratione enim aspernatur sunt soluta aperiam.",
                  "user_id": 366,
                  "root_id": 0,
                  "main_root_id": 20,
                  "created_at": "April 22, 2018 09:12",
                  "updated_at": "April 22, 2018 09:12",
                  "tree_path": [
                    "20"
                  ],
                  "user": {
                    "id": 366,
                    "first_name": "Kitty Will",
                    "last_name": "Saul Lakin",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 1429,
                    "state_id": 715,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "April 22, 2018 09:12",
                    "updated_at": "April 22, 2018 09:12",
                    "email": "santino.jakubowski@reichert.net",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      346
                    ],
                    "roles": null,
                    "group_ids": [],
                    "organization_settings": {
                      "id": 333,
                      "user_id": 366,
                      "organization_id": 346,
                      "role": "student",
                      "created_at": "April 22, 2018 09:12",
                      "updated_at": "April 22, 2018 09:12",
                      "status": "active",
                      "exclude_students_ids": [],
                      "files_controll_enabled": true,
                      "messanger_access_enabled": true,
                      "activity_settings": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Comment with 'id'=0 [WHERE \"comments\".\"commentable_id\" = $1 AND \"comments\".\"commentable_type\" = $2]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Comment",
        "tags": [
          "Comments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "commentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "commentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Group",
              "TaskUser",
              "CourseThread"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Comment account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [ "success" ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Comment with 'id'=0 [WHERE \"comments\".\"commentable_id\" = $1 AND \"comments\".\"commentable_type\" = $2]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/countries": {
      "get": {
        "summary": "List of Countries",
        "tags": [
          "Countries"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "countries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {"type": "integer"},
                      "code": {"type": "string", "x-nullable": true },
                      "name": {"type": "string", "x-nullable": true },
                      "phonecode": {"type": "integer", "x-nullable": true }
                    }
                  }
                }
              },
              "required": [ "countries" ]
            },
            "examples": {
              "application/json": {
                "countries": [
                  {
                    "id": 1469,
                    "code": "CG",
                    "name": "Norway",
                    "phonecode": 896
                  },
                  {
                    "id": 1470,
                    "code": "CG",
                    "name": "Cyprus",
                    "phonecode": 896
                  },
                  {
                    "id": 1471,
                    "code": "CG",
                    "name": "Switzerland",
                    "phonecode": 896
                  },
                  {
                    "id": 1472,
                    "code": "CG",
                    "name": "Saint Pierre and Miquelon",
                    "phonecode": 896
                  },
                  {
                    "id": 1473,
                    "code": "CG",
                    "name": "Gambia",
                    "phonecode": 896
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 5,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/countries/{id}": {
      "get": {
        "summary": "Details of Country",
        "tags": [
          "Countries"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "country": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "code": {"type": "string", "x-nullable": true },
                    "name": {"type": "string", "x-nullable": true },
                    "phonecode": {"type": "integer", "x-nullable": true }
                  }
                }
              },
              "required": [ "country" ]
            },
            "examples": {
              "application/json": {
                "country": {
                  "id": 1478,
                  "code": "CG",
                  "name": "Svalbard & Jan Mayen Islands",
                  "phonecode": 896
                }
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Country with 'id'=0"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/course_groups": {
      "get": {
        "summary": "Courses in group",
        "tags": [
          "Courses vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "get courses from specific group"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "course_groups": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {"type": "integer"},
                      "course_id": {"type": "integer", "x-nullable": true },
                      "group_id": {"type": "integer", "x-nullable": true },
                      "precourse_id": {"type": "integer", "x-nullable": true },
                      "complete_lesson_can": {"type": "string", "x-nullable": true,
                        "enum": [
                          "teacher",
                          "student",
                          "all"
                        ]
                      },
                      "reports_enabled": {
                        "type": "boolean",
                        "x-nullable": true },
                      "files_enabled": {
                        "type": "boolean",
                        "x-nullable": true },
                      "discussing_enabled": {
                        "type": "boolean",
                        "x-nullable": true },
                      "student_content_enabled": {
                        "type": "boolean",
                        "x-nullable": true },
                      "status": {"type": "string", "x-nullable": true,
                        "enum": [
                          "active",
                          "pause"
                        ]
                      },
                      "created_at": { "type" : "datetime" },
                      "updated_at": { "type" : "datetime" }
                    }
                  }
                }
              },
              "required": [ "course_groups" ]
            },
            "examples": {
              "application/json": {
                "course_groups": [
                  {
                    "id": 26,
                    "course_id": 85,
                    "group_id": 55,
                    "precourse_id": 86,
                    "complete_lesson_can": "all",
                    "reports_enabled": true,
                    "files_enabled": true,
                    "discussing_enabled": true,
                    "student_content_enabled": true,
                    "status": "active",
                    "created_at": "April 22, 2018 09:12",
                    "updated_at": "April 22, 2018 09:12"
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Course to group",
        "tags": [
          "Courses vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "get courses from specific group"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course_group": {
                  "type": "object",
                  "properties": {
                    "complete_lesson_can": {"type": "string", "x-nullable": true,
                      "enum": [
                        "teacher",
                        "student",
                        "all"
                      ]
                    },
                    "discussing_enabled": {
                      "type": "boolean",
                      "x-nullable": true },
                    "files_enabled": {
                      "type": "boolean",
                      "x-nullable": true },
                    "precourse_id": {"type": "integer", "x-nullable": true },
                    "reports_enabled": {
                      "type": "boolean",
                      "x-nullable": true },
                    "status": {"type": "string", "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "student_content_enabled": {
                      "type": "boolean",
                      "x-nullable": true },
                    "course_id": {"type": "integer", "x-nullable": true }
                  }
                }
              },
              "required": [ "course_group" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "course_group": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "course_id": {"type": "integer", "x-nullable": true },
                    "group_id": {"type": "integer", "x-nullable": true },
                    "precourse_id": {"type": "integer", "x-nullable": true },
                    "complete_lesson_can": {"type": "string", "x-nullable": true,
                      "enum": [
                        "teacher",
                        "student",
                        "all"
                      ]
                    },
                    "reports_enabled": {
                      "type": "boolean",
                      "x-nullable": true },
                    "files_enabled": {
                      "type": "boolean",
                      "x-nullable": true },
                    "discussing_enabled": {
                      "type": "boolean",
                      "x-nullable": true },
                    "student_content_enabled": {
                      "type": "boolean",
                      "x-nullable": true },
                    "status": {"type": "string", "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" }
                  }
                }
              },
              "required": [ "course_group" ]
            },
            "examples": {
              "application/json": {
                "course_group": {
                  "id": 30,
                  "course_id": 93,
                  "group_id": 58,
                  "precourse_id": 94,
                  "complete_lesson_can": "all",
                  "reports_enabled": true,
                  "files_enabled": true,
                  "discussing_enabled": true,
                  "student_content_enabled": true,
                  "status": "active",
                  "created_at": "April 22, 2018 09:12",
                  "updated_at": "April 22, 2018 09:12"
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/course_groups/{id}": {
      "put": {
        "summary": "Update Course in group",
        "tags": [
          "Courses vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "get courses from specific group"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course_group": {
                  "type": "object",
                  "properties": {
                    "complete_lesson_can": {"type": "string", "x-nullable": true,
                      "enum": [
                        "teacher",
                        "student",
                        "all"
                      ]
                    },
                    "discussing_enabled": {
                      "type": "boolean",
                      "x-nullable": true },
                    "files_enabled": {
                      "type": "boolean",
                      "x-nullable": true },
                    "precourse_id": {"type": "integer", "x-nullable": true },
                    "reports_enabled": {
                      "type": "boolean",
                      "x-nullable": true },
                    "status": {"type": "string", "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "student_content_enabled": {
                      "type": "boolean",
                      "x-nullable": true }
                  }
                }
              },
              "required": [ "course_group" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "course_group": {
                  "type": "object",
                  "properties": {
                    "precourse_id": {"type": "integer", "x-nullable": true },
                    "complete_lesson_can": {"type": "string", "x-nullable": true,
                      "enum": [
                        "teacher",
                        "student",
                        "all"
                      ]
                    },
                    "reports_enabled": {
                      "type": "boolean",
                      "x-nullable": true },
                    "files_enabled": {
                      "type": "boolean",
                      "x-nullable": true },
                    "discussing_enabled": {
                      "type": "boolean",
                      "x-nullable": true },
                    "student_content_enabled": {
                      "type": "boolean",
                      "x-nullable": true },
                    "status": {"type": "string", "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    }
                  }
                }
              },
              "required": [ "course_group" ]
            },
            "examples": {
              "application/json": {
                "course_group": {
                  "id": 33,
                  "course_id": 99,
                  "group_id": 62,
                  "precourse_id": 102,
                  "complete_lesson_can": "all",
                  "reports_enabled": true,
                  "files_enabled": true,
                  "discussing_enabled": true,
                  "student_content_enabled": true,
                  "status": "active",
                  "created_at": "April 22, 2018 09:13",
                  "updated_at": "April 22, 2018 09:13"
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find CourseGroup with 'id'=0 [WHERE \"course_groups\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Course from group",
        "tags": [
          "Courses vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "get courses from specific group"
          }
        ],
        "responses": {
          "200": {
            "description": "deleting CourseGroup account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [ "success" ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find CourseGroup with 'id'=0 [WHERE \"course_groups\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{course_id}/course_threads": {
      "get": {
        "summary": "List of Course Threads",
        "tags": [
          "CourseThreads"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "sort_field",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "title",
              "created_at",
              "comments_count",
              "last_activity_at"
            ],
            "description": "field for sorting"
          },
          {
            "name": "sort_flag",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "ASC",
              "DESC"
            ],
            "description": "flag for sorting"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "course_threads": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {"type": "integer"},
                      "title": {"type": "string", "x-nullable": true },
                      "user_id": {"type": "integer", "x-nullable": true },
                      "comments_count": {"type": "integer", "x-nullable": true },
                      "created_at": { "type" : "datetime" },
                      "updated_at": { "type" : "datetime" },
                      "last_activity_at": {
                        "type": "datetime",
                        "x-nullable": true },
                      "course_group_id": {"type": "integer", "x-nullable": true },
                      "last_comment": {
                        "type": "object",
                        "x-nullable": true }
                    }
                  }
                }
              },
              "required": [ "course_threads" ]
            },
            "examples": {
              "application/json": {
                "course_threads": [
                  {
                    "id": 1,
                    "title": "Et voluptatem enim debitis qui vel.",
                    "user_id": 430,
                    "comments_count": 0,
                    "created_at": "April 22, 2018 09:13",
                    "updated_at": "April 22, 2018 09:13",
                    "last_activity_at": null,
                    "course_group_id": 41,
                    "last_comment": {
                      "id": 28,
                      "commentable_id": 1,
                      "commentable_type": "CourseThread",
                      "title": "Quia voluptas et ratione cum.",
                      "body": "Sint minima illo in nulla. Est quis sequi. Eum laudantium doloribus quae magni. Sint ratione enim aspernatur sunt soluta aperiam.",
                      "user_id": 430,
                      "root_id": 0,
                      "main_root_id": 28,
                      "created_at": "April 22, 2018 09:13",
                      "updated_at": "April 22, 2018 09:13",
                      "tree_path": [
                        "28"
                      ],
                      "user": {
                        "id": 430,
                        "first_name": "Kitty Will",
                        "last_name": "Saul Lakin",
                        "phone_number": "",
                        "date_of_birth": null,
                        "address": "",
                        "country_id": 1718,
                        "state_id": 858,
                        "zip_code": "",
                        "status": "active",
                        "created_at": "April 22, 2018 09:13",
                        "updated_at": "April 22, 2018 09:13",
                        "email": "delphine@beatty.org",
                        "avatar": {
                          "url": null,
                          "small": {
                            "url": null
                          },
                          "middle": {
                            "url": null
                          }
                        },
                        "organization_ids": [
                          425
                        ],
                        "roles": null,
                        "group_ids": [],
                        "organization_settings": {
                          "id": 391,
                          "user_id": 430,
                          "organization_id": 425,
                          "role": "student",
                          "created_at": "April 22, 2018 09:13",
                          "updated_at": "April 22, 2018 09:13",
                          "status": "active",
                          "exclude_students_ids": [],
                          "files_controll_enabled": true,
                          "messanger_access_enabled": true,
                          "activity_settings": null
                        }
                      }
                    },
                    "user": {
                      "id": 430,
                      "first_name": "Kitty Will",
                      "last_name": "Saul Lakin",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 1718,
                      "state_id": 858,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "April 22, 2018 09:13",
                      "updated_at": "April 22, 2018 09:13",
                      "email": "delphine@beatty.org",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "organization_ids": [
                        425
                      ],
                      "roles": null,
                      "group_ids": [],
                      "organization_settings": {
                        "id": 391,
                        "user_id": 430,
                        "organization_id": 425,
                        "role": "student",
                        "created_at": "April 22, 2018 09:13",
                        "updated_at": "April 22, 2018 09:13",
                        "status": "active",
                        "exclude_students_ids": [],
                        "files_controll_enabled": true,
                        "messanger_access_enabled": true,
                        "activity_settings": null
                      }
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Course Thread",
        "tags": [
          "CourseThreads"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course_thread": {
                  "type": "object",
                  "properties": {
                    "title": {"type": "string", "x-nullable": true }
                  }
                }
              },
              "required": [ "course_thread" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "course_thread": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "title": {"type": "string", "x-nullable": true },
                    "user_id": {"type": "integer", "x-nullable": true },
                    "comments_count": {"type": "integer", "x-nullable": true },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" },
                    "last_activity_at": {
                      "type": "datetime",
                      "x-nullable": true },
                    "course_group_id": {"type": "integer", "x-nullable": true },
                    "last_comment": {
                      "type": "object",
                      "x-nullable": true }
                  }
                }
              },
              "required": [ "course_thread" ]
            },
            "examples": {
              "application/json": {
                "course_thread": {
                  "id": 9,
                  "title": "Culpa sed corporis debitis.",
                  "user_id": 446,
                  "comments_count": 0,
                  "created_at": "April 22, 2018 09:13",
                  "updated_at": "April 22, 2018 09:13",
                  "last_activity_at": null,
                  "course_group_id": 48,
                  "last_comment": null,
                  "user": {
                    "id": 446,
                    "first_name": "Kitty Will",
                    "last_name": "Saul Lakin",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 1778,
                    "state_id": 888,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "April 22, 2018 09:13",
                    "updated_at": "April 22, 2018 09:13",
                    "email": "josiane@mertzdavis.biz",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      439
                    ],
                    "roles": null,
                    "group_ids": [],
                    "organization_settings": {
                      "id": 405,
                      "user_id": 446,
                      "organization_id": 439,
                      "role": "student",
                      "created_at": "April 22, 2018 09:13",
                      "updated_at": "April 22, 2018 09:13",
                      "status": "active",
                      "exclude_students_ids": [],
                      "files_controll_enabled": true,
                      "messanger_access_enabled": true,
                      "activity_settings": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{course_id}/course_threads/{id}": {
      "get": {
        "summary": "Details of Course Thread",
        "tags": [
          "CourseThreads"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "course_thread": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "title": {"type": "string", "x-nullable": true },
                    "user_id": {"type": "integer", "x-nullable": true },
                    "comments_count": {"type": "integer", "x-nullable": true },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" },
                    "last_activity_at": {
                      "type": "datetime",
                      "x-nullable": true },
                    "course_group_id": {"type": "integer", "x-nullable": true },
                    "last_comment": {
                      "type": "object",
                      "x-nullable": true }
                  }
                }
              },
              "required": [ "course_thread" ]
            },
            "examples": {
              "application/json": {
                "course_thread": {
                  "id": 4,
                  "title": "Assumenda voluptas itaque ducimus laborum iusto.",
                  "user_id": 437,
                  "comments_count": 0,
                  "created_at": "April 22, 2018 09:13",
                  "updated_at": "April 22, 2018 09:13",
                  "last_activity_at": null,
                  "course_group_id": 44,
                  "last_comment": {
                    "id": 31,
                    "commentable_id": 4,
                    "commentable_type": "CourseThread",
                    "title": "Quia voluptas et ratione cum.",
                    "body": "Sint minima illo in nulla. Est quis sequi. Eum laudantium doloribus quae magni. Sint ratione enim aspernatur sunt soluta aperiam.",
                    "user_id": 437,
                    "root_id": 0,
                    "main_root_id": 31,
                    "created_at": "April 22, 2018 09:13",
                    "updated_at": "April 22, 2018 09:13",
                    "tree_path": [
                      "31"
                    ],
                    "user": {
                      "id": 437,
                      "first_name": "Kitty Will",
                      "last_name": "Saul Lakin",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 1744,
                      "state_id": 871,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "April 22, 2018 09:13",
                      "updated_at": "April 22, 2018 09:13",
                      "email": "felicity.wuckert@huelstreich.name",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "organization_ids": [
                        431
                      ],
                      "roles": null,
                      "group_ids": [],
                      "organization_settings": {
                        "id": 397,
                        "user_id": 437,
                        "organization_id": 431,
                        "role": "student",
                        "created_at": "April 22, 2018 09:13",
                        "updated_at": "April 22, 2018 09:13",
                        "status": "active",
                        "exclude_students_ids": [],
                        "files_controll_enabled": true,
                        "messanger_access_enabled": true,
                        "activity_settings": null
                      }
                    }
                  },
                  "user": {
                    "id": 437,
                    "first_name": "Kitty Will",
                    "last_name": "Saul Lakin",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 1744,
                    "state_id": 871,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "April 22, 2018 09:13",
                    "updated_at": "April 22, 2018 09:13",
                    "email": "felicity.wuckert@huelstreich.name",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      431
                    ],
                    "roles": null,
                    "group_ids": [],
                    "organization_settings": {
                      "id": 397,
                      "user_id": 437,
                      "organization_id": 431,
                      "role": "student",
                      "created_at": "April 22, 2018 09:13",
                      "updated_at": "April 22, 2018 09:13",
                      "status": "active",
                      "exclude_students_ids": [],
                      "files_controll_enabled": true,
                      "messanger_access_enabled": true,
                      "activity_settings": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find CourseThread with 'id'=0 [WHERE \"course_groups\".\"group_id\" = $1 AND \"course_groups\".\"course_id\" = $2]"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update details of Course Thread",
        "tags": [
          "CourseThreads"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course_thread": {
                  "type": "object",
                  "properties": {
                    "title": {"type": "string", "x-nullable": true }
                  }
                }
              },
              "required": [ "course_thread" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "course_thread": {
                  "type": "object",
                  "properties": {
                    "title": {"type": "string", "x-nullable": true }
                  }
                }
              },
              "required": [ "course_thread" ]
            },
            "examples": {
              "application/json": {
                "course_thread": {
                  "id": 12,
                  "title": "Ad delectus dolores odio recusandae voluptates eum.",
                  "user_id": 456,
                  "comments_count": 0,
                  "created_at": "April 22, 2018 09:13",
                  "updated_at": "April 22, 2018 09:13",
                  "last_activity_at": null,
                  "course_group_id": 52,
                  "last_comment": {
                    "id": 38,
                    "commentable_id": 12,
                    "commentable_type": "CourseThread",
                    "title": "Quia voluptas et ratione cum.",
                    "body": "Sint minima illo in nulla. Est quis sequi. Eum laudantium doloribus quae magni. Sint ratione enim aspernatur sunt soluta aperiam.",
                    "user_id": 456,
                    "root_id": 0,
                    "main_root_id": 38,
                    "created_at": "April 22, 2018 09:13",
                    "updated_at": "April 22, 2018 09:13",
                    "tree_path": [
                      "38"
                    ],
                    "user": {
                      "id": 456,
                      "first_name": "Kitty Will",
                      "last_name": "Saul Lakin",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 1822,
                      "state_id": 910,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "April 22, 2018 09:13",
                      "updated_at": "April 22, 2018 09:13",
                      "email": "shad@beerhane.org",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "organization_ids": [
                        451
                      ],
                      "roles": null,
                      "group_ids": [],
                      "organization_settings": {
                        "id": 414,
                        "user_id": 456,
                        "organization_id": 451,
                        "role": "student",
                        "created_at": "April 22, 2018 09:13",
                        "updated_at": "April 22, 2018 09:13",
                        "status": "active",
                        "exclude_students_ids": [],
                        "files_controll_enabled": true,
                        "messanger_access_enabled": true,
                        "activity_settings": null
                      }
                    }
                  },
                  "user": {
                    "id": 456,
                    "first_name": "Kitty Will",
                    "last_name": "Saul Lakin",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 1822,
                    "state_id": 910,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "April 22, 2018 09:13",
                    "updated_at": "April 22, 2018 09:13",
                    "email": "shad@beerhane.org",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      451
                    ],
                    "roles": null,
                    "group_ids": [],
                    "organization_settings": {
                      "id": 414,
                      "user_id": 456,
                      "organization_id": 451,
                      "role": "student",
                      "created_at": "April 22, 2018 09:13",
                      "updated_at": "April 22, 2018 09:13",
                      "status": "active",
                      "exclude_students_ids": [],
                      "files_controll_enabled": true,
                      "messanger_access_enabled": true,
                      "activity_settings": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find CourseThread with 'id'=0 [WHERE \"course_groups\".\"group_id\" = $1 AND \"course_groups\".\"course_id\" = $2]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Course Thread",
        "tags": [
          "CourseThreads"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting CourseThread account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [ "success" ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find CourseThread with 'id'=0 [WHERE \"course_groups\".\"group_id\" = $1 AND \"course_groups\".\"course_id\" = $2]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses": {
      "get": {
        "summary": "Get Courses inside organization",
        "tags": [
          "Courses"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "term",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "term for searching by [:title, :description]"
          },
          {
            "name": "sort_field",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "title",
              "created_at",
              "lessons_count",
              "active_user_ids"
            ],
            "description": "field for sorting"
          },
          {
            "name": "sort_flag",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "ASC",
              "DESC"
            ],
            "description": "flag for sorting"
          },
          {
            "name": "included_lesson_users_for_current_student",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "lesson_users for current user and courses will be included"
          },
          {
            "name": "included_lesson_users",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "lesson_users for courses will be included"
          },
          {
            "name": "student_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "teacher could see courses of specific student"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "courses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {"type": "integer"},
                      "title": {"type": "string", "x-nullable": true },
                      "description": {"type": "text", "x-nullable": true },
                      "image": {
                        "type": "object",
                        "x-nullable": true },
                      "banner_image": {
                        "type": "object",
                        "x-nullable": true },
                      "user_id": {"type": "integer", "x-nullable": true },
                      "organization_id": {"type": "integer", "x-nullable": true },
                      "created_at": { "type" : "datetime" },
                      "updated_at": { "type" : "datetime" },
                      "lessons_count": {"type": "integer", "x-nullable": true },
                      "group_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {"type": "integer", "properties": {}
                        }
                      },
                      "active_user_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {"type": "integer", "properties": {}
                        }
                      },
                      "course_users_state": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {"type": "string", "properties": {}
                        }
                      },
                      "course_for_current_student": {
                        "description": "information about user's association to this course",
                        "type": "object",
                        "x-nullable": true }
                    }
                  }
                }
              },
              "required": [ "courses" ]
            },
            "examples": {
              "application/json": {
                "courses": [
                  { "$ref": "#/examples/course" }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 2,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{id}": {
      "get": {
        "summary": "Get Course Details",
        "tags": [
          "Courses"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "title": {"type": "string", "x-nullable": true },
                    "description": {"type": "text", "x-nullable": true },
                    "image": {
                      "type": "object",
                      "x-nullable": true },
                    "banner_image": {
                      "type": "object",
                      "x-nullable": true },
                    "user_id": {"type": "integer", "x-nullable": true },
                    "organization_id": {"type": "integer", "x-nullable": true },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" },
                    "lessons_count": {"type": "integer", "x-nullable": true },
                    "group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {"type": "integer", "properties": {}
                      }
                    },
                    "active_user_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {"type": "integer", "properties": {}
                      }
                    },
                    "course_users_state": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {"type": "string", "properties": {}
                      }
                    },
                    "course_for_current_student": {
                      "description": "information about user's association to this course",
                      "type": "object",
                      "x-nullable": true }
                  }
                }
              },
              "required": [ "course" ]
            },
            "examples": {
              "application/json": {
                "course": { "$ref": "#/examples/course" }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Course with 'id'=0 [WHERE \"course_groups\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{id}/switch": {
      "put": {
        "summary": "Activate/Diactivate course for student",
        "tags": [
          "Courses"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "active",
            "in": "query",
            "type": "boolean",
            "required": true
          },
          {
            "name": "student_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns result",
            "schema": {
              "type": "object",
              "properties": {
                "success": { "type" : "boolean" }
              },
              "required": [ "success" ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/group_users": {
      "get": {
        "summary": "Users in group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "sort_field",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "role",
              "last_name",
              "first_name",
              "created_at",
              "status"
            ],
            "description": "field for sorting"
          },
          {
            "name": "sort_flag",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "ASC",
              "DESC"
            ],
            "description": "flag for sorting"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "group_users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {"type": "integer"},
                      "user_id": {"type": "integer", "x-nullable": true },
                      "group_id": {"type": "integer", "x-nullable": true },
                      "created_at": { "type" : "datetime" },
                      "updated_at": { "type" : "datetime" },
                      "status": {"type": "string", "x-nullable": true,
                        "enum": [
                          "active",
                          "pause"
                        ]
                      },
                      "first_name": {"type": "string"},
                      "last_name": {"type": "string"},
                      "role": {"type": "string"},
                      "organization_id": {"type": "integer"}
                    }
                  }
                }
              },
              "required": [ "group_users" ]
            },
            "examples": {
              "application/json": {
                "group_users": [
                  {
                    "id": 74,
                    "first_name": "Kitty Will",
                    "last_name": "Saul Lakin",
                    "role": "",
                    "organization_id": 505
                  },
                  {
                    "id": 75,
                    "first_name": "Kitty Will",
                    "last_name": "Saul Lakin",
                    "role": "admin",
                    "organization_id": 505
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 2,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add User to group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "group_user": {
                  "type": "object",
                  "properties": {
                    "user_id": {"type": "integer", "x-nullable": true }
                  }
                }
              },
              "required": [ "group_user" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "group_user": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "user_id": {"type": "integer", "x-nullable": true },
                    "group_id": {"type": "integer", "x-nullable": true },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" },
                    "status": {"type": "string", "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "first_name": {"type": "string"},
                    "last_name": {"type": "string"},
                    "role": {"type": "string"},
                    "organization_id": {"type": "integer"}
                  }
                }
              },
              "required": [ "group_user" ]
            },
            "examples": {
              "application/json": {
                "group_user": {
                  "id": 82,
                  "user_id": 526,
                  "group_id": 102,
                  "created_at": "April 22, 2018 09:15",
                  "updated_at": "April 22, 2018 09:15",
                  "status": "active",
                  "first_name": "Kitty Will",
                  "last_name": "Saul Lakin",
                  "role": "admin",
                  "organization_id": 511
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/group_users/{id}": {
      "put": {
        "summary": "Change status of user in group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "group_user": {
                  "type": "object",
                  "properties": {
                    "status": {"type": "string", "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    }
                  }
                }
              },
              "required": [ "group_user" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "group_user": {
                  "type": "object",
                  "properties": {
                    "status": {"type": "string", "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    }
                  }
                }
              },
              "required": [ "group_user" ]
            },
            "examples": {
              "application/json": {
                "group_user": {
                  "id": 87,
                  "user_id": 535,
                  "group_id": 106,
                  "created_at": "April 22, 2018 09:15",
                  "updated_at": "April 22, 2018 09:15",
                  "status": "active",
                  "first_name": "Kitty Will",
                  "last_name": "Saul Lakin",
                  "role": "",
                  "organization_id": 519
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find GroupUser with 'id'=0 [WHERE \"group_users\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user from group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting GroupUser account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [ "success" ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find GroupUser with 'id'=0 [WHERE \"group_users\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/group_users/batch_update": {
      "put": {
        "summary": "Change status of batch users in group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "type": "array",
            "items": {"type": "integer"},
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "status",
            "in": "body",
            "type": "string",
            "enum": [
              "active",
              "pause"
            ],
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns status and errors",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                },
                "errors": {"type": "array"}
              },
              "required": [ "success" ]
            },
            "examples": {
              "application/json": {
                "errors": [],
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups": {
      "get": {
        "summary": "Get Groups inside organization",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "visibility",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "private",
              "public"
            ],
            "description": "Filter groups by visibility"
          },
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "active",
              "pause"
            ],
            "description": "Filter groups by status"
          },
          {
            "name": "my",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "return user's groups"
          },
          {
            "name": "term",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "term for searching by [:description, :title]"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "groups": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {"type": "integer"},
                      "organization_id": {"type": "integer", "x-nullable": true },
                      "title": {"type": "string", "x-nullable": true },
                      "description": {"type": "text", "x-nullable": true },
                      "status": {"type": "string", "x-nullable": true,
                        "enum": [
                          "active",
                          "pause"
                        ]
                      },
                      "user_limit": {"type": "integer", "x-nullable": true },
                      "visibility": {"type": "string", "x-nullable": true,
                        "enum": [
                          "private",
                          "public"
                        ]
                      },
                      "created_at": { "type" : "datetime" },
                      "updated_at": { "type" : "datetime" },
                      "count_participants": {"type": "integer", "x-nullable": true },
                      "user_id": {"type": "integer", "x-nullable": true },
                      "noticeboard_settings": {
                        "type": "jsonb"
                      },
                      "user_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {"type": "integer", "properties": {}
                        }
                      },
                      "participated": {
                        "description": "group_user instance for current user if he participated in group",
                        "type": "object",
                        "x-nullable": true }
                    }
                  }
                }
              },
              "required": [ "groups" ]
            },
            "examples": {
              "application/json": {
                "groups": [
                  {
                    "id": 118,
                    "organization_id": 543,
                    "title": "Bernhard Group",
                    "description": "generate B2B infrastructures",
                    "status": "active",
                    "user_limit": 10,
                    "visibility": "public",
                    "created_at": "April 22, 2018 09:15",
                    "updated_at": "April 22, 2018 09:15",
                    "count_participants": 1,
                    "user_id": 0,
                    "noticeboard_settings": {
                      "student_can_post": true,
                      "noticeboard_enabled": true,
                      "student_can_comment": true
                    },
                    "user_ids": [
                      560
                    ],
                    "participated": {
                      "id": 109,
                      "user_id": 560,
                      "group_id": 118,
                      "created_at": "April 22, 2018 09:15",
                      "updated_at": "April 22, 2018 09:15",
                      "status": "active",
                      "first_name": "Kitty Will",
                      "last_name": "Saul Lakin",
                      "role": "admin",
                      "organization_id": 543
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Group",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": { "group": { "$ref": "#/properties/group" } },
              "required": [ "group" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": { "group": { "$ref": "#/properties/group" } },
              "required": [ "group" ]
            },
            "examples": {
              "application/json": { "group": { "$ref": "#/examples/group" } }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ] }, "examples": {
              "application/json": {
                "error_code": null,
                "errors": [ "You are not authorized" ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ] }, "examples": {
              "application/json": {
                "error_code": null,
                "errors": [ "Organization is not determinated" ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{id}": {
      "get": {
        "summary": "Get Group Details",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "group": { "$ref": "#/properties/group" }
              },
              "required": [ "group" ]
            },
            "examples": {
              "application/json": {
                "group": { "$ref": "#/examples/group" }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Group with 'id'=0 [WHERE \"groups\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Group Details",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": { "group": { "$ref": "#/properties/group" } },
              "required": [ "group" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": { "group": { "$ref": "#/properties/group" } },
              "required": [ "group" ]
            },
            "examples": {
              "application/json": { "group": { "$ref": "#/examples/group" } }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Group with 'id'=0 [WHERE \"groups\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Group",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Group account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [ "success" ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Group with 'id'=0 [WHERE \"groups\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{course_id}/lessons": {
      "get": {
        "summary": "Lessons for course",
        "tags": [
          "Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "lessons": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {"type": "integer"},
                      "title": {"type": "string", "x-nullable": true },
                      "description": {"type": "text", "x-nullable": true },
                      "status": {"type": "string", "x-nullable": true,
                        "enum": [
                          "active",
                          "pause"
                        ]
                      },
                      "user_id": {"type": "integer", "x-nullable": true },
                      "course_id": {"type": "integer", "x-nullable": true },
                      "created_at": { "type" : "datetime" },
                      "updated_at": { "type" : "datetime" },
                      "course_settings": {
                        "description": "course settings for current group",
                        "type": "object",
                        "x-nullable": true }
                    }
                  }
                }
              },
              "required": [ "lessons" ]
            },
            "examples": {
              "application/json": {
                "lessons": [
                  {
                    "id": 73,
                    "title": "Fisher-Batz",
                    "description": "cultivate e-business channels",
                    "status": "active",
                    "user_id": 585,
                    "course_id": 155,
                    "created_at": "April 22, 2018 09:15",
                    "updated_at": "April 22, 2018 09:15",
                    "course_settings": {
                      "id": 77,
                      "course_id": 155,
                      "group_id": 137,
                      "precourse_id": 0,
                      "complete_lesson_can": "all",
                      "reports_enabled": true,
                      "files_enabled": true,
                      "discussing_enabled": true,
                      "student_content_enabled": true,
                      "status": "active",
                      "created_at": "April 22, 2018 09:15",
                      "updated_at": "April 22, 2018 09:15"
                    },
                    "tasks": []
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{course_id}/lessons/{id}": {
      "get": {
        "summary": "Get info about lesson at specific course",
        "tags": [
          "Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "included_lesson_users_for_current_student",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "lesson_users for current user and courses will be included inside course instance in meta section"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "lesson": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "title": {"type": "string", "x-nullable": true },
                    "description": {"type": "text", "x-nullable": true },
                    "status": {"type": "string", "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "user_id": {"type": "integer", "x-nullable": true },
                    "course_id": {"type": "integer", "x-nullable": true },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" },
                    "course_settings": {
                      "description": "course settings for current group",
                      "type": "object",
                      "x-nullable": true }
                  }
                }
              },
              "required": [ "lesson" ]
            },
            "examples": {
              "application/json": {
                "lesson": {
                  "id": 76,
                  "title": "Fisher-Batz",
                  "description": "cultivate e-business channels",
                  "status": "active",
                  "user_id": 595,
                  "course_id": 158,
                  "created_at": "April 22, 2018 09:15",
                  "updated_at": "April 22, 2018 09:15",
                  "course_settings": {
                    "id": 80,
                    "course_id": 158,
                    "group_id": 140,
                    "precourse_id": 0,
                    "complete_lesson_can": "all",
                    "reports_enabled": true,
                    "files_enabled": true,
                    "discussing_enabled": true,
                    "student_content_enabled": true,
                    "status": "active",
                    "created_at": "April 22, 2018 09:15",
                    "updated_at": "April 22, 2018 09:15"
                  },
                  "tasks": []
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Lesson with 'id'=0 [WHERE \"lessons\".\"course_id\" = $1 AND \"lessons\".\"status\" = $2]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{course_id}/lessons/{id}/complete": {
      "put": {
        "summary": "Complete/Uncomplete lesson",
        "tags": [
          "Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "completed",
            "in": "query",
            "type": "boolean",
            "required": true
          },
          {
            "name": "student_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "student id if current user is teacher and he mark lesson of some student"
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns result",
            "schema": {
              "type": "object",
              "properties": {
                "success": { "type" : "boolean" }
              },
              "required": [ "success" ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        }
      }
    },
    "/api/v1/organization_users": {
      "post": {
        "summary": "Create OrganizationUser",
        "tags": [
          "OrganizationUsers"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "organization_user": {
                  "type": "object",
                  "properties": {
                    "role": {"type": "string", "x-nullable": true,
                      "enum": [
                        "student",
                        "teacher",
                        "admin"
                      ]
                    },
                    "status": {"type": "string", "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended"
                      ]
                    },
                    "exclude_students_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {"type": "integer", "properties": {}
                      }
                    },
                    "files_controll_enabled": {
                      "type": "boolean",
                      "x-nullable": true },
                    "messanger_access_enabled": {
                      "type": "boolean",
                      "x-nullable": true },
                    "activity_course_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {"type": "integer", "properties": {}
                      }
                    },
                    "activity_student_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {"type": "integer", "properties": {}
                      }
                    },
                    "user_id": {"type": "integer", "x-nullable": true }
                  }
                }
              },
              "required": [ "organization_user" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "organization_user": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "user_id": {"type": "integer", "x-nullable": true },
                    "organization_id": {"type": "integer", "x-nullable": true },
                    "role": {"type": "string", "x-nullable": true,
                      "enum": [
                        "student",
                        "teacher",
                        "admin"
                      ]
                    },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" },
                    "status": {"type": "string", "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended"
                      ]
                    },
                    "exclude_students_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {"type": "integer", "properties": {}
                      }
                    },
                    "files_controll_enabled": {
                      "type": "boolean",
                      "x-nullable": true },
                    "messanger_access_enabled": {
                      "type": "boolean",
                      "x-nullable": true },
                    "activity_settings": {
                      "type": "jsonb",
                      "x-nullable": true }
                  }
                }
              },
              "required": [ "organization_user" ]
            },
            "examples": {
              "application/json": {
                "organization_user": {
                  "id": 553,
                  "user_id": 610,
                  "organization_id": 587,
                  "role": "admin",
                  "created_at": "April 22, 2018 09:15",
                  "updated_at": "April 22, 2018 09:15",
                  "status": "active",
                  "exclude_students_ids": [],
                  "files_controll_enabled": true,
                  "messanger_access_enabled": true,
                  "activity_settings": {
                    "activity_course_ids": [],
                    "activity_student_ids": []
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/organization_users/{id}": {
      "delete": {
        "summary": "Delete OrganizationUser",
        "tags": [
          "OrganizationUsers"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting OrganizationUser account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [ "success" ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find OrganizationUser with 'id'=0 [WHERE \"organization_users\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/organizations/{id}": {
      "get": {
        "summary": "Details of Organization",
        "tags": [
          "Organizations"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "organization": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "title": {"type": "string", "x-nullable": true },
                    "subdomain": {"type": "string", "x-nullable": true },
                    "domain": {"type": "string", "x-nullable": true },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" },
                    "description": {"type": "text", "x-nullable": true },
                    "logo": {"type": "string", "x-nullable": true },
                    "address": {"type": "string", "x-nullable": true },
                    "zip_code": {"type": "string", "x-nullable": true },
                    "website": {"type": "string", "x-nullable": true },
                    "email": {"type": "string", "x-nullable": true },
                    "phone": {"type": "string", "x-nullable": true },
                    "language": {"type": "string", "x-nullable": true,
                      "enum": [
                        "en",
                        "ge",
                        "ru"
                      ]
                    },
                    "notification_settings": {
                      "type": "jsonb",
                      "x-nullable": true },
                    "display_settings": {
                      "type": "jsonb",
                      "x-nullable": true },
                    "country_id": {"type": "integer", "x-nullable": true },
                    "state_id": {"type": "integer", "x-nullable": true }
                  }
                }
              },
              "required": [ "organization" ]
            },
            "examples": {
              "application/json": {
                "organization": {
                  "id": 596,
                  "title": "Crooks Inc",
                  "subdomain": "gaylord596",
                  "domain": "vypollich.co",
                  "created_at": "2018-04-22T09:15:38.239Z",
                  "updated_at": "2018-04-22T09:15:38.239Z",
                  "description": "Bahringer Group",
                  "logo": "",
                  "address": "Bergnaum-Bogan",
                  "zip_code": "Sauer, O'Keefe and Rodriguez",
                  "website": "mccullough.biz",
                  "email": "eden_flatley@emard.co",
                  "phone": "Hyatt, O'Hara and Graham",
                  "language": "ru",
                  "notification_settings": {
                    "notification_email": "alexys@hegmanntillman.org"
                  },
                  "display_settings": {
                    "display_name": "Wisoky-Lueilwitz",
                    "display_type": "display_name"
                  },
                  "country_id": 2436,
                  "state_id": 1217
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Organization with 'id'=0"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update details of Organization",
        "tags": [
          "Organizations"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "organization": {
                  "type": "object",
                  "properties": {
                    "address": {"type": "string", "x-nullable": true },
                    "country_id": {"type": "integer", "x-nullable": true },
                    "description": {"type": "text", "x-nullable": true },
                    "domain": {"type": "string", "x-nullable": true },
                    "email": {"type": "string", "x-nullable": true },
                    "language": {"type": "string", "x-nullable": true,
                      "enum": [
                        "en",
                        "ge",
                        "ru"
                      ]
                    },
                    "logo": {"type": "string", "x-nullable": true },
                    "phone": {"type": "string", "x-nullable": true },
                    "state_id": {"type": "integer", "x-nullable": true },
                    "subdomain": {"type": "string", "x-nullable": true },
                    "title": {"type": "string", "x-nullable": true },
                    "website": {"type": "string", "x-nullable": true },
                    "zip_code": {"type": "string", "x-nullable": true },
                    "notification_email": {"type": "string", "x-nullable": true },
                    "display_name": {"type": "string", "x-nullable": true },
                    "display_type": {"type": "string", "x-nullable": true }
                  }
                }
              },
              "required": [ "organization" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "organization": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "title": {"type": "string", "x-nullable": true },
                    "subdomain": {"type": "string", "x-nullable": true },
                    "domain": {"type": "string", "x-nullable": true },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" },
                    "description": {"type": "text", "x-nullable": true },
                    "logo": {"type": "string", "x-nullable": true },
                    "address": {"type": "string", "x-nullable": true },
                    "zip_code": {"type": "string", "x-nullable": true },
                    "website": {"type": "string", "x-nullable": true },
                    "email": {"type": "string", "x-nullable": true },
                    "phone": {"type": "string", "x-nullable": true },
                    "language": {"type": "string", "x-nullable": true,
                      "enum": [
                        "en",
                        "ge",
                        "ru"
                      ]
                    },
                    "notification_settings": {
                      "type": "jsonb",
                      "x-nullable": true },
                    "display_settings": {
                      "type": "jsonb",
                      "x-nullable": true },
                    "country_id": {"type": "integer", "x-nullable": true },
                    "state_id": {"type": "integer", "x-nullable": true }
                  }
                }
              },
              "required": [ "organization" ]
            },
            "examples": {
              "application/json": {
                "organization": {
                  "id": 600,
                  "title": "Crooks Inc",
                  "subdomain": "ernser601",
                  "domain": "wdmedhurst.info",
                  "created_at": "2018-04-22T09:15:38.597Z",
                  "updated_at": "2018-04-22T09:15:38.676Z",
                  "description": "Bahringer Group",
                  "logo": "",
                  "address": "Bergnaum-Bogan",
                  "zip_code": "Sauer, O'Keefe and Rodriguez",
                  "website": "mccullough.biz",
                  "email": "eden_flatley@emard.co",
                  "phone": "Hyatt, O'Hara and Graham",
                  "language": "ru",
                  "notification_settings": {
                    "notification_email": "gavin@dubuque.info"
                  },
                  "display_settings": {
                    "display_name": "Corkery, Schuster and Graham",
                    "display_type": "display_name"
                  },
                  "country_id": 2458,
                  "state_id": 1228
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Organization with 'id'=0"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Organization",
        "tags": [
          "Organizations"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Organization account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [ "success" ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Organization with 'id'=0"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/passwords": {
      "post": {
        "summary": "Send reset password token",
        "tags": [
          "Passwords"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {"type": "string", "description": "user's email or id required"
                },
                "id": {"type": "integer", "description": "user's email or id required"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [ "success" ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update password",
        "tags": [
          "Passwords"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "password": {"type": "string"},
                "password_confirmation": {"type": "string"},
                "reset_password_token": {"type": "string"}
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "password changed",
            "schema": {
              "type": "object",
              "properties": {
                "token": {"type": "string", "x-nullable": true },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "first_name": {"type": "string", "x-nullable": true },
                    "last_name": {"type": "string", "x-nullable": true },
                    "phone_number": {"type": "string", "x-nullable": true },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true },
                    "address": {"type": "string", "x-nullable": true },
                    "country_id": {"type": "integer", "x-nullable": true },
                    "state_id": {"type": "integer", "x-nullable": true },
                    "zip_code": {"type": "string", "x-nullable": true },
                    "status": {"type": "string", "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended",
                        "deleted"
                      ]
                    },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" },
                    "email": {"type": "string"},
                    "avatar": {
                      "type": "object",
                      "x-nullable": true },
                    "organization_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {"type": "integer", "properties": {}
                      }
                    },
                    "roles": {"type": "string", "x-nullable": true },
                    "group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {"type": "integer", "properties": {}
                      }
                    },
                    "organization_settings": {
                      "type": "object",
                      "x-nullable": true }
                  }
                }
              },
              "required": [ "user" ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 637,
                  "first_name": "Kitty Will",
                  "last_name": "Saul Lakin",
                  "phone_number": "",
                  "date_of_birth": null,
                  "address": "",
                  "country_id": 2504,
                  "state_id": 1251,
                  "zip_code": "",
                  "status": "active",
                  "created_at": "April 22, 2018 09:15",
                  "updated_at": "April 22, 2018 09:15",
                  "email": "lindsay@mante.co",
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "organization_ids": [
                    611
                  ],
                  "roles": null,
                  "group_ids": [],
                  "organization_settings": null
                },
                "token": "eyJhbGciOiJIUzI1NiJ9.eyJpZCI6NjM3LCJleHAiOjE1NTU5MjQ1NDAsInR5cGUiOiJ1c2VyIiwiZW1haWwiOiJsaW5kc2F5QG1hbnRlLmNvIn0.rTpXlGKheoXjJtmR2rrxUGgeabnGAsWzWBA14fsVWIs"
              }
            }
          },
          "400": {
            "description": "fail with wrong token",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "invalid data"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/registrations": {
      "post": {
        "summary": "Sign up",
        "tags": [
          "Sign up"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "email": {"type": "string"},
                    "password": {"type": "string"}
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "user created",
            "schema": {
              "type": "object",
              "properties": {
                "token": {"type": "string", "x-nullable": true },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "first_name": {"type": "string", "x-nullable": true },
                    "last_name": {"type": "string", "x-nullable": true },
                    "phone_number": {"type": "string", "x-nullable": true },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true },
                    "address": {"type": "string", "x-nullable": true },
                    "country_id": {"type": "integer", "x-nullable": true },
                    "state_id": {"type": "integer", "x-nullable": true },
                    "zip_code": {"type": "string", "x-nullable": true },
                    "status": {"type": "string", "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended",
                        "deleted"
                      ]
                    },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" },
                    "email": {"type": "string"},
                    "avatar": {
                      "type": "object",
                      "x-nullable": true },
                    "organization_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {"type": "integer", "properties": {}
                      }
                    },
                    "roles": {"type": "string", "x-nullable": true },
                    "group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {"type": "integer", "properties": {}
                      }
                    },
                    "organization_settings": {
                      "type": "object",
                      "x-nullable": true }
                  }
                }
              },
              "required": [ "user" ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 642,
                  "first_name": "",
                  "last_name": "",
                  "phone_number": "",
                  "date_of_birth": null,
                  "address": "",
                  "country_id": 0,
                  "state_id": 0,
                  "zip_code": "",
                  "status": "active",
                  "created_at": "April 22, 2018 09:15",
                  "updated_at": "April 22, 2018 09:15",
                  "email": "jalen_wisozk@kuhlman.biz",
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "organization_ids": [],
                  "roles": null,
                  "group_ids": [],
                  "organization_settings": null
                }
              }
            }
          },
          "400": {
            "description": "registration is fail with existing email",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "items": {
                      "email": "array"
                    }
                  }
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "wrong_data",
                "errors": [
                  {
                    "email": [
                      "has already been taken"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions": {
      "delete": {
        "summary": "Destroy a session",
        "tags": [
          "Session"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "session destroyed",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [ "success" ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a session",
        "tags": [
          "Session"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {"type": "string"},
                "password": {"type": "string"}
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "session created",
            "schema": {
              "type": "object",
              "properties": {
                "token": {"type": "string", "x-nullable": true },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "first_name": {"type": "string", "x-nullable": true },
                    "last_name": {"type": "string", "x-nullable": true },
                    "phone_number": {"type": "string", "x-nullable": true },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true },
                    "address": {"type": "string", "x-nullable": true },
                    "country_id": {"type": "integer", "x-nullable": true },
                    "state_id": {"type": "integer", "x-nullable": true },
                    "zip_code": {"type": "string", "x-nullable": true },
                    "status": {"type": "string", "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended",
                        "deleted"
                      ]
                    },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" },
                    "email": {"type": "string"},
                    "avatar": {
                      "type": "object",
                      "x-nullable": true },
                    "organization_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {"type": "integer", "properties": {}
                      }
                    },
                    "roles": {"type": "string", "x-nullable": true },
                    "group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {"type": "integer", "properties": {}
                      }
                    },
                    "organization_settings": {
                      "type": "object",
                      "x-nullable": true }
                  }
                }
              },
              "required": [ "user" ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 648,
                  "first_name": "Kitty Will",
                  "last_name": "Saul Lakin",
                  "phone_number": "",
                  "date_of_birth": null,
                  "address": "",
                  "country_id": 2544,
                  "state_id": 1271,
                  "zip_code": "",
                  "status": "active",
                  "created_at": "April 22, 2018 09:15",
                  "updated_at": "April 22, 2018 09:15",
                  "email": "cleveland@kuvalisgerhold.com",
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "organization_ids": [
                    621
                  ],
                  "roles": null,
                  "group_ids": [],
                  "organization_settings": null
                },
                "token": "eyJhbGciOiJIUzI1NiJ9.eyJpZCI6NjQ4LCJleHAiOjE1NTU5MjQ1NDAsInR5cGUiOiJ1c2VyIiwiZW1haWwiOiJjbGV2ZWxhbmRAa3V2YWxpc2dlcmhvbGQuY29tIn0.Zfh6wOnwrki4duWTjMvDHIFpORpTdRcNaLfigiRni28"
              }
            }
          },
          "401": {
            "description": "session is fail with wrong email",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "wrong_credentials",
                "errors": [
                  "Error with your login or password"
                ]
              }
            }
          },
          "400": {
            "description": "session is fail if user is not confirmed",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "items": {
                      "email": "array"
                    }
                  }
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": 400,
                "errors": [
                  {
                    "email": "email is not confirmed"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/states": {
      "get": {
        "summary": "List of States",
        "tags": [
          "States"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "states": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {"type": "integer"},
                      "name": {"type": "string", "x-nullable": true },
                      "country_id": {"type": "integer", "x-nullable": true },
                      "code": {"type": "string", "x-nullable": true },
                      "created_at": { "type" : "datetime" },
                      "updated_at": { "type" : "datetime" }
                    }
                  }
                }
              },
              "required": [ "states" ]
            },
            "examples": {
              "application/json": {
                "states": [
                  {
                    "id": 1287,
                    "name": "Arkansas",
                    "country_id": 2577,
                    "code": "AL",
                    "created_at": "April 22, 2018 09:15",
                    "updated_at": "April 22, 2018 09:15",
                    "country": {
                      "id": 2577,
                      "code": "CG",
                      "name": "Tajikistan",
                      "phonecode": 896
                    }
                  },
                  {
                    "id": 1288,
                    "name": "Wisconsin",
                    "country_id": 2579,
                    "code": "AL",
                    "created_at": "April 22, 2018 09:15",
                    "updated_at": "April 22, 2018 09:15",
                    "country": {
                      "id": 2579,
                      "code": "CG",
                      "name": "United Arab Emirates",
                      "phonecode": 896
                    }
                  },
                  {
                    "id": 1289,
                    "name": "Minnesota",
                    "country_id": 2580,
                    "code": "AL",
                    "created_at": "April 22, 2018 09:15",
                    "updated_at": "April 22, 2018 09:15",
                    "country": {
                      "id": 2580,
                      "code": "CG",
                      "name": "Andorra",
                      "phonecode": 896
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 3,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/states/{id}": {
      "get": {
        "summary": "Details of State",
        "tags": [
          "States"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "state": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "name": {"type": "string", "x-nullable": true },
                    "country_id": {"type": "integer", "x-nullable": true },
                    "code": {"type": "string", "x-nullable": true },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" }
                  }
                }
              },
              "required": [ "state" ]
            },
            "examples": {
              "application/json": {
                "state": {
                  "id": 1292,
                  "name": "New Mexico",
                  "country_id": 2585,
                  "code": "AL",
                  "created_at": "April 22, 2018 09:15",
                  "updated_at": "April 22, 2018 09:15",
                  "country": {
                    "id": 2585,
                    "code": "CG",
                    "name": "Greece",
                    "phonecode": 896
                  }
                }
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find State with 'id'=0"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{course_id}/lessons/{lesson_id}/tasks": {
      "get": {
        "summary": "List of Tasks",
        "tags": [
          "Tasks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "lesson_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "tasks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {"type": "integer"},
                      "action_type": {"type": "string", "x-nullable": true,
                        "enum": [
                          "reading",
                          "question",
                          "watch"
                        ]
                      },
                      "description": {"type": "text", "x-nullable": true },
                      "lesson_id": {"type": "integer", "x-nullable": true },
                      "user_id": {"type": "integer", "x-nullable": true },
                      "created_at": { "type" : "datetime" },
                      "updated_at": { "type" : "datetime" },
                      "task_user": {
                        "description": "task_user - association for user/task/group",
                        "type": "object",
                        "x-nullable": true }
                    }
                  }
                }
              },
              "required": [ "tasks" ]
            },
            "examples": {
              "application/json": {
                "tasks": [
                  {
                    "id": 45,
                    "action_type": "reading",
                    "description": "Architecto consequatur magni. Hic pariatur cupiditate reiciendis consequatur mollitia deserunt. Dolorem delectus quo in est at adipisci architecto. Illum dolores quaerat. Qui possimus ut ex eos nulla cumque voluptas.",
                    "lesson_id": 81,
                    "user_id": 659,
                    "created_at": "April 22, 2018 09:15",
                    "updated_at": "April 22, 2018 09:15",
                    "task_user": {
                      "id": 12,
                      "task_id": 45,
                      "user_id": 659,
                      "course_group_id": 85,
                      "status": "active",
                      "created_at": "April 22, 2018 09:15",
                      "updated_at": "April 22, 2018 09:15"
                    },
                    "attachments": [],
                    "videos": []
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{course_id}/lessons/{lesson_id}/tasks/{id}": {
      "get": {
        "summary": "Details of Task",
        "tags": [
          "Tasks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "lesson_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "action_type": {"type": "string", "x-nullable": true,
                      "enum": [
                        "reading",
                        "question",
                        "watch"
                      ]
                    },
                    "description": {"type": "text", "x-nullable": true },
                    "lesson_id": {"type": "integer", "x-nullable": true },
                    "user_id": {"type": "integer", "x-nullable": true },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" },
                    "task_user": {
                      "description": "task_user - association for user/task/group",
                      "type": "object",
                      "x-nullable": true }
                  }
                }
              },
              "required": [ "task" ]
            },
            "examples": {
              "application/json": {
                "task": {
                  "id": 48,
                  "action_type": "reading",
                  "description": "Architecto consequatur magni. Hic pariatur cupiditate reiciendis consequatur mollitia deserunt. Dolorem delectus quo in est at adipisci architecto. Illum dolores quaerat. Qui possimus ut ex eos nulla cumque voluptas.",
                  "lesson_id": 84,
                  "user_id": 669,
                  "created_at": "April 22, 2018 09:15",
                  "updated_at": "April 22, 2018 09:15",
                  "task_user": {
                    "id": 15,
                    "task_id": 48,
                    "user_id": 669,
                    "course_group_id": 88,
                    "status": "active",
                    "created_at": "April 22, 2018 09:15",
                    "updated_at": "April 22, 2018 09:15"
                  },
                  "attachments": [],
                  "videos": []
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Task with 'id'=0 [WHERE \"tasks\".\"lesson_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "summary": "Get Users inside organization",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "get users from specific group"
          },
          {
            "name": "term",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "term for searching by [:first_name, :last_name, :email]"
          },
          {
            "name": "role",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "filter by role(student, teacher)"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {"type": "integer"},
                      "first_name": {"type": "string", "x-nullable": true },
                      "last_name": {"type": "string", "x-nullable": true },
                      "phone_number": {"type": "string", "x-nullable": true },
                      "date_of_birth": {
                        "type": "date",
                        "x-nullable": true },
                      "address": {"type": "string", "x-nullable": true },
                      "country_id": {"type": "integer", "x-nullable": true },
                      "state_id": {"type": "integer", "x-nullable": true },
                      "zip_code": {"type": "string", "x-nullable": true },
                      "status": {"type": "string", "x-nullable": true,
                        "enum": [
                          "active",
                          "suspended",
                          "deleted"
                        ]
                      },
                      "created_at": { "type" : "datetime" },
                      "updated_at": { "type" : "datetime" },
                      "email": {"type": "string"},
                      "avatar": {
                        "type": "object",
                        "x-nullable": true },
                      "organization_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {"type": "integer", "properties": {}
                        }
                      },
                      "roles": {"type": "string", "x-nullable": true },
                      "group_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {"type": "integer", "properties": {}
                        }
                      },
                      "organization_settings": {
                        "type": "object",
                        "x-nullable": true }
                    }
                  }
                }
              },
              "required": [ "users" ]
            },
            "examples": {
              "application/json": {
                "users": [
                  {
                    "id": 682,
                    "first_name": "Kitty Will",
                    "last_name": "Saul Lakin",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 2679,
                    "state_id": 1340,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "April 22, 2018 09:15",
                    "updated_at": "April 22, 2018 09:15",
                    "email": "natalie_bayer@swaniawskipollich.name",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      653
                    ],
                    "roles": null,
                    "group_ids": [],
                    "organization_settings": {
                      "id": 617,
                      "user_id": 682,
                      "organization_id": 653,
                      "role": "admin",
                      "created_at": "April 22, 2018 09:15",
                      "updated_at": "April 22, 2018 09:15",
                      "status": "active",
                      "exclude_students_ids": [],
                      "files_controll_enabled": true,
                      "messanger_access_enabled": true,
                      "activity_settings": null
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create User",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "address": {"type": "string", "x-nullable": true },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true },
                    "country_id": {"type": "integer", "x-nullable": true },
                    "state_id": {"type": "integer", "x-nullable": true },
                    "zip_code": {"type": "string", "x-nullable": true },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true },
                    "phone_number": {"type": "string", "x-nullable": true },
                    "first_name": {"type": "string", "x-nullable": true },
                    "last_name": {"type": "string", "x-nullable": true },
                    "email": {"type": "string"},
                    "password": {"type": "string", "x-nullable": true },
                    "password_confirmation": {"type": "string", "x-nullable": true },
                    "enable_email_notifications": {
                     "type": "boolean",
                      "x-nullable": true },
                    "notify_on_course_response":{
                      "type": "boolean",
                      "x-nullable": true },
                    "notify_on_private_message": {
                      "type": "boolean",
                      "x-nullable": true },
                    "get_weekly_activity_summary": {
                      "type": "boolean",
                      "x-nullable": false
                    },
                    "notify_on_group_discussion_response": {
                      "type": "boolean",
                      "x-nullable": false
                    }
                  }
                }
              },
              "required": [ "user" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "first_name": {"type": "string", "x-nullable": true },
                    "last_name": {"type": "string", "x-nullable": true },
                    "phone_number": {"type": "string", "x-nullable": true },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true },
                    "address": {"type": "string", "x-nullable": true },
                    "country_id": {"type": "integer", "x-nullable": true },
                    "state_id": {"type": "integer", "x-nullable": true },
                    "zip_code": {"type": "string", "x-nullable": true },
                    "status": {"type": "string", "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended",
                        "deleted"
                      ]
                    },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" },
                    "email": {"type": "string"},
                    "avatar": {
                      "type": "object",
                      "x-nullable": true },
                    "organization_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {"type": "integer", "properties": {}
                      }
                    },
                    "roles": {"type": "string", "x-nullable": true },
                    "group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {"type": "integer", "properties": {}
                      }
                    },
                    "organization_settings": {
                      "type": "object",
                      "x-nullable": true }
                  }
                }
              },
              "required": [ "user" ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 692,
                  "first_name": "Kitty Will",
                  "last_name": "Saul Lakin",
                  "phone_number": "",
                  "date_of_birth": null,
                  "address": "",
                  "country_id": 2715,
                  "state_id": 1358,
                  "zip_code": "",
                  "status": "active",
                  "created_at": "April 22, 2018 09:15",
                  "updated_at": "April 22, 2018 09:15",
                  "email": "yeenia@smithheaney.name",
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "organization_ids": [],
                  "roles": null,
                  "group_ids": [],
                  "organization_settings": null
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "summary": "Get User Details",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "first_name": {"type": "string", "x-nullable": true },
                    "last_name": {"type": "string", "x-nullable": true },
                    "phone_number": {"type": "string", "x-nullable": true },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true },
                    "address": {"type": "string", "x-nullable": true },
                    "country_id": {"type": "integer", "x-nullable": true },
                    "state_id": {"type": "integer", "x-nullable": true },
                    "zip_code": {"type": "string", "x-nullable": true },
                    "status": {"type": "string", "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended",
                        "deleted"
                      ]
                    },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" },
                    "email": {"type": "string"},
                    "avatar": {
                      "type": "object",
                      "x-nullable": true },
                    "organization_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {"type": "integer", "properties": {}
                      }
                    },
                    "roles": {"type": "string", "x-nullable": true },
                    "group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {"type": "integer", "properties": {}
                      }
                    },
                    "organization_settings": {
                      "type": "object",
                      "x-nullable": true }
                  }
                }
              },
              "required": [ "user" ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 686,
                  "first_name": "Kitty Will",
                  "last_name": "Saul Lakin",
                  "phone_number": "",
                  "date_of_birth": null,
                  "address": "",
                  "country_id": 2693,
                  "state_id": 1347,
                  "zip_code": "",
                  "status": "active",
                  "created_at": "April 22, 2018 09:15",
                  "updated_at": "April 22, 2018 09:15",
                  "email": "tanner_sawayn@goodwin.io",
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "organization_ids": [
                    656
                  ],
                  "roles": null,
                  "group_ids": [],
                  "organization_settings": {
                    "id": 620,
                    "user_id": 686,
                    "organization_id": 656,
                    "role": "admin",
                    "created_at": "April 22, 2018 09:15",
                    "updated_at": "April 22, 2018 09:15",
                    "status": "active",
                    "exclude_students_ids": [],
                    "files_controll_enabled": true,
                    "messanger_access_enabled": true,
                    "activity_settings": null
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find User with 'id'=0"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update User Details",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "address": {"type": "string", "x-nullable": true },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true },
                    "country_id": {"type": "integer", "x-nullable": true },
                    "state_id": {"type": "integer", "x-nullable": true },
                    "zip_code": {"type": "string", "x-nullable": true },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true },
                    "phone_number": {"type": "string", "x-nullable": true },
                    "first_name": {"type": "string", "x-nullable": true },
                    "last_name": {"type": "string", "x-nullable": true },
                    "email": {"type": "string"},
                    "password": {"type": "string", "x-nullable": true },
                    "password_confirmation": {"type": "string", "x-nullable": true },
                    "organization_users_attributes": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {"type": "integer"},
                          "role": {"type": "string", "x-nullable": true,
                            "enum": [
                              "student",
                              "teacher",
                              "admin"
                            ]
                          },
                          "status": {"type": "string", "x-nullable": true,
                            "enum": [
                              "active",
                              "suspended"
                            ]
                          },
                          "exclude_students_ids": {
                            "type": "array",
                            "x-nullable": true,
                            "items": {"type": "integer", "properties": {}
                            }
                          },
                          "files_controll_enabled": {
                            "type": "boolean",
                            "x-nullable": true },
                          "messanger_access_enabled": {
                            "type": "boolean",
                            "x-nullable": true },
                          "activity_course_ids": {
                            "type": "array",
                            "x-nullable": true,
                            "items": {"type": "integer", "properties": {}
                            }
                          },
                          "activity_student_ids": {
                            "type": "array",
                            "x-nullable": true,
                            "items": {"type": "integer", "properties": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [ "user" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "first_name": {"type": "string", "x-nullable": true },
                    "last_name": {"type": "string", "x-nullable": true },
                    "phone_number": {"type": "string", "x-nullable": true },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true },
                    "address": {"type": "string", "x-nullable": true },
                    "country_id": {"type": "integer", "x-nullable": true },
                    "state_id": {"type": "integer", "x-nullable": true },
                    "zip_code": {"type": "string", "x-nullable": true },
                    "email": {"type": "string"},
                    "avatar": {
                      "type": "object",
                      "x-nullable": true }
                  }
                }
              },
              "required": [ "user" ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 696,
                  "first_name": "Kitty Will",
                  "last_name": "Saul Lakin",
                  "phone_number": "",
                  "date_of_birth": null,
                  "address": "",
                  "country_id": 2731,
                  "state_id": 1366,
                  "zip_code": "",
                  "status": "active",
                  "created_at": "April 22, 2018 09:15",
                  "updated_at": "April 22, 2018 09:15",
                  "email": "patience@emard.biz",
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "organization_ids": [
                    663
                  ],
                  "roles": null,
                  "group_ids": [],
                  "organization_settings": {
                    "id": 627,
                    "user_id": 696,
                    "organization_id": 663,
                    "role": "admin",
                    "created_at": "April 22, 2018 09:15",
                    "updated_at": "April 22, 2018 09:15",
                    "status": "active",
                    "exclude_students_ids": [],
                    "files_controll_enabled": true,
                    "messanger_access_enabled": true,
                    "activity_settings": null
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find User with 'id'=0"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete User",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting User account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [ "success" ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find User with 'id'=0"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}/send_set_password_link": {
      "post": {
        "summary": "Send set password link to user",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns result",
            "schema": {
              "type": "object",
              "properties": {
                "success": { "type" : "boolean" }
              },
              "required": [ "success" ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find User with 'id'=0"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{videoable_type}/{videoable_id}/videos": {
      "get": {
        "summary": "Videos",
        "tags": [
          "Videos"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "videoable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "videoable_type",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "videos": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {"type": "integer"},
                      "title": {"type": "string", "x-nullable": true },
                      "length": {"type": "integer", "x-nullable": true },
                      "organization_id": {"type": "integer", "x-nullable": true },
                      "user_id": {"type": "integer", "x-nullable": true },
                      "videoable_type": {"type": "string", "x-nullable": true },
                      "videoable_id": {"type": "integer", "x-nullable": true },
                      "created_at": { "type" : "datetime" },
                      "updated_at": { "type" : "datetime" },
                      "video_link": {"type": "string", "x-nullable": true },
                      "status": {"type": "string", "x-nullable": true,
                        "enum": [
                          "draft",
                          "processing",
                          "ready",
                          "failed"
                        ]
                      }
                    }
                  }
                }
              },
              "required": [ "videos" ]
            },
            "examples": {
              "application/json": {
                "videos": [
                  {
                    "id": 1,
                    "title": "Buckridge Group",
                    "length": 3861,
                    "organization_id": 675,
                    "user_id": 711,
                    "videoable_type": "Task",
                    "videoable_id": 52,
                    "created_at": "April 22, 2018 09:15",
                    "updated_at": "April 22, 2018 09:15",
                    "video_link": "https://youtu.be/BL50xRTnHTQ",
                    "status": "ready",
                    "videoable": {
                      "id": 52,
                      "action_type": "reading",
                      "description": "Architecto consequatur magni. Hic pariatur cupiditate reiciendis consequatur mollitia deserunt. Dolorem delectus quo in est at adipisci architecto. Illum dolores quaerat. Qui possimus ut ex eos nulla cumque voluptas.",
                      "lesson_id": 88,
                      "user_id": 714,
                      "created_at": "April 22, 2018 09:15",
                      "updated_at": "April 22, 2018 09:15",
                      "task_user": null,
                      "attachments": [],
                      "videos": [
                        {}
                      ]
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Video with youtube link",
        "tags": [
          "Videos"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "videoable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "videoable_type",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "video": {
                  "type": "object",
                  "properties": {
                    "videoable_id": {"type": "integer", "x-nullable": true },
                    "videoable_type": {"type": "string", "x-nullable": true },
                    "video_link": {"type": "string", "x-nullable": true },
                    "title": {"type": "string", "x-nullable": true },
                    "description": {"type": "string", "x-nullable": true }
                  }
                }
              },
              "required": [ "video" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "video": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "title": {"type": "string", "x-nullable": true },
                    "length": {"type": "integer", "x-nullable": true },
                    "organization_id": {"type": "integer", "x-nullable": true },
                    "user_id": {"type": "integer", "x-nullable": true },
                    "videoable_type": {"type": "string", "x-nullable": true },
                    "videoable_id": {"type": "integer", "x-nullable": true },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" },
                    "video_link": {"type": "string", "x-nullable": true },
                    "status": {"type": "string", "x-nullable": true,
                      "enum": [
                        "draft",
                        "processing",
                        "ready",
                        "failed"
                      ]
                    }
                  }
                }
              },
              "required": [ "video" ]
            },
            "examples": {
              "application/json": {
                "video": {
                  "id": 5,
                  "title": "",
                  "length": 3861,
                  "organization_id": 687,
                  "user_id": 724,
                  "videoable_type": "Task",
                  "videoable_id": 55,
                  "created_at": "April 22, 2018 09:16",
                  "updated_at": "April 22, 2018 09:16",
                  "video_link": "https://youtu.be/BL50xRTnHTQ",
                  "status": "ready",
                  "videoable": {
                    "id": 55,
                    "action_type": "reading",
                    "description": "Architecto consequatur magni. Hic pariatur cupiditate reiciendis consequatur mollitia deserunt. Dolorem delectus quo in est at adipisci architecto. Illum dolores quaerat. Qui possimus ut ex eos nulla cumque voluptas.",
                    "lesson_id": 91,
                    "user_id": 727,
                    "created_at": "April 22, 2018 09:16",
                    "updated_at": "April 22, 2018 09:16",
                    "task_user": null,
                    "attachments": [],
                    "videos": [
                      {},
                      {}
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{videoable_type}/{videoable_id}/videos/get_token": {
      "post": {
        "summary": "Get token for uploading video to Sproutvideo",
        "tags": [
          "Videos"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "videoable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "videoable_type",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "video": {
                  "type": "object",
                  "properties": {
                    "videoable_id": {"type": "integer", "x-nullable": true },
                    "videoable_type": {"type": "string", "x-nullable": true },
                    "video_link": {"type": "string", "x-nullable": true },
                    "title": {"type": "string", "x-nullable": true },
                    "description": {"type": "string", "x-nullable": true }
                  }
                }
              },
              "required": [ "video" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "video": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "integer"},
                    "title": {"type": "string", "x-nullable": true },
                    "length": {"type": "integer", "x-nullable": true },
                    "organization_id": {"type": "integer", "x-nullable": true },
                    "user_id": {"type": "integer", "x-nullable": true },
                    "videoable_type": {"type": "string", "x-nullable": true },
                    "videoable_id": {"type": "integer", "x-nullable": true },
                    "created_at": { "type" : "datetime" },
                    "updated_at": { "type" : "datetime" },
                    "video_link": {"type": "string", "x-nullable": true },
                    "status": {"type": "string", "x-nullable": true,
                      "enum": [
                        "draft",
                        "processing",
                        "ready",
                        "failed"
                      ]
                    }
                  }
                }
              },
              "required": [ "video" ]
            },
            "examples": {
              "application/json": {
                "video": {
                  "id": 9,
                  "title": "",
                  "length": 0,
                  "organization_id": 702,
                  "user_id": 738,
                  "videoable_type": "Task",
                  "videoable_id": 58,
                  "created_at": "April 22, 2018 09:16",
                  "updated_at": "April 22, 2018 09:16",
                  "video_link": "",
                  "status": "draft",
                  "sproutvideo_id": null,
                  "token": "c78c9a2e79d2b98cc5c0dc2aa7c85779",
                  "embed_code": null,
                  "videoable": {
                    "id": 58,
                    "action_type": "reading",
                    "description": "Architecto consequatur magni. Hic pariatur cupiditate reiciendis consequatur mollitia deserunt. Dolorem delectus quo in est at adipisci architecto. Illum dolores quaerat. Qui possimus ut ex eos nulla cumque voluptas.",
                    "lesson_id": 94,
                    "user_id": 741,
                    "created_at": "April 22, 2018 09:16",
                    "updated_at": "April 22, 2018 09:16",
                    "task_user": null,
                    "attachments": [],
                    "videos": [ {}, {} ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{videoable_type}/{videoable_id}/videos/{id}": {
      "put": {
        "summary": "Update Video",
        "tags": [
          "Videos"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "videoable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "videoable_type",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "video": {
                  "type": "object",
                  "properties": {
                    "title": {"type": "string", "x-nullable": true }
                  }
                }
              },
              "required": [ "video" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "video": {
                  "type": "object",
                  "properties": {
                    "title": {"type": "string", "x-nullable": true }
                  }
                }
              },
              "required": [ "video" ]
            },
            "examples": {
              "application/json": {
                "video": {
                  "id": 12,
                  "title": "Buckridge Group",
                  "length": 3861,
                  "organization_id": 717,
                  "user_id": 752,
                  "videoable_type": "Task",
                  "videoable_id": 61,
                  "created_at": "April 22, 2018 09:16",
                  "updated_at": "April 22, 2018 09:16",
                  "video_link": "https://youtu.be/BL50xRTnHTQ",
                  "status": "ready",
                  "videoable": {
                    "id": 61,
                    "action_type": "reading",
                    "description": "Architecto consequatur magni. Hic pariatur cupiditate reiciendis consequatur mollitia deserunt. Dolorem delectus quo in est at adipisci architecto. Illum dolores quaerat. Qui possimus ut ex eos nulla cumque voluptas.",
                    "lesson_id": 97,
                    "user_id": 755,
                    "created_at": "April 22, 2018 09:16",
                    "updated_at": "April 22, 2018 09:16",
                    "task_user": null,
                    "attachments": [],
                    "videos": [
                      {}
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Video with 'id'=0 [WHERE \"videos\".\"videoable_id\" = $1 AND \"videos\".\"videoable_type\" = $2]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Video",
        "tags": [
          "Videos"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "videoable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "videoable_type",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Video account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [ "success" ]
            },
            "examples": {
              "application/json": { "success": true }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [ "You are not authorized" ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [ "Organization is not determinated" ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              },
              "required": [ "errors" ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Video with 'id'=0 [WHERE \"videos\".\"videoable_id\" = $1 AND \"videos\".\"videoable_type\" = $2]"
                ]
              }
            }
          }
        }
      }
    }
  }
}