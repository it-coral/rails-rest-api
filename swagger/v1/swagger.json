{
  "swagger": "2.0",
  "info": {
    "title": "API V1",
    "version": "v1"
  },
  "paths": {
    "/api/v1/{notifiable_type}/{notifiable_id}/activities": {
      "get": {
        "summary": "Activity",
        "tags": [
          "Activities"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "notifiable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "notifiable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "User",
              "Group"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "activities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "eventable_type": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "eventable_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "notifiable_type": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "notifiable_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "message": {
                        "type": "jsonb"
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "pending",
                          "sent",
                          "read"
                        ]
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "task_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "lesson_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "course_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "group_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "organization_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "flagged": {
                        "type": "boolean",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "activities"
              ]
            },
            "examples": {
              "application/json": {
                "activities": [
                  {
                    "id": 1,
                    "eventable_type": "Comment",
                    "eventable_id": 1,
                    "notifiable_type": "User",
                    "notifiable_id": 1,
                    "message": {
                      "plain_text": "Libero repudiandae soluta ut non alias perspiciatis praesentium."
                    },
                    "status": "pending",
                    "created_at": "April 15, 2018 18:25",
                    "updated_at": "April 15, 2018 18:25",
                    "task_id": 0,
                    "lesson_id": 0,
                    "course_id": 0,
                    "group_id": 0,
                    "organization_id": 0,
                    "user_id": 3,
                    "flagged": false,
                    "eventable": {
                      "id": 1,
                      "commentable_id": 1,
                      "commentable_type": "Group",
                      "title": "Velit laboriosam reprehenderit facere architecto aut.",
                      "body": "Quo similique qui eum totam quam consequatur eveniet. Modi eum accusamus omnis dolor recusandae fugit id. Ex ut sed nihil et ipsa at libero. Aut doloremque tempore.",
                      "user_id": 2,
                      "root_id": 0,
                      "main_root_id": 1,
                      "created_at": "April 15, 2018 18:25",
                      "updated_at": "April 15, 2018 18:25",
                      "tree_path": [
                        "1"
                      ],
                      "user": {
                        "id": 2,
                        "first_name": "Earlene Cummerata",
                        "last_name": "Miss Harold Emard",
                        "phone_number": "",
                        "date_of_birth": null,
                        "address": "",
                        "country_id": 3,
                        "state_id": 2,
                        "zip_code": "",
                        "status": "active",
                        "created_at": "April 15, 2018 18:25",
                        "updated_at": "April 15, 2018 18:25",
                        "email": "kiana@zboncakhalvorson.name",
                        "avatar": {
                          "url": null,
                          "small": {
                            "url": null
                          },
                          "middle": {
                            "url": null
                          }
                        },
                        "organization_ids": [
                          3
                        ],
                        "roles": null,
                        "group_ids": [

                        ],
                        "organization_settings": null
                      }
                    },
                    "notifiable": {
                      "id": 1,
                      "first_name": "Earlene Cummerata",
                      "last_name": "Miss Harold Emard",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 1,
                      "state_id": 1,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "April 15, 2018 18:25",
                      "updated_at": "April 15, 2018 18:25",
                      "email": "jaleel@hamill.net",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "organization_ids": [
                        1
                      ],
                      "roles": null,
                      "group_ids": [

                      ],
                      "organization_settings": {
                        "id": 1,
                        "user_id": 1,
                        "organization_id": 1,
                        "role": "admin",
                        "created_at": "April 15, 2018 18:25",
                        "updated_at": "April 15, 2018 18:25",
                        "status": "active",
                        "exclude_students_ids": [

                        ],
                        "files_controll_enabled": false,
                        "messanger_access_enabled": false
                      }
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{notifiable_type}/{notifiable_id}/activities/{id}": {
      "put": {
        "summary": "Update status of Activity",
        "tags": [
          "Activities"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "notifiable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "notifiable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "User",
              "Group"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "activity": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "pending",
                        "sent",
                        "read"
                      ]
                    }
                  }
                }
              },
              "required": [
                "activity"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "activity": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "pending",
                        "sent",
                        "read"
                      ]
                    }
                  }
                }
              },
              "required": [
                "activity"
              ]
            },
            "examples": {
              "application/json": {
                "activity": {
                  "id": 4,
                  "eventable_type": "Comment",
                  "eventable_id": 4,
                  "notifiable_type": "User",
                  "notifiable_id": 11,
                  "message": {
                    "plain_text": "Aut corrupti eos dolorum et optio."
                  },
                  "status": "pending",
                  "created_at": "April 15, 2018 18:25",
                  "updated_at": "April 15, 2018 18:25",
                  "task_id": 0,
                  "lesson_id": 0,
                  "course_id": 0,
                  "group_id": 0,
                  "organization_id": 0,
                  "user_id": 13,
                  "flagged": false,
                  "eventable": {
                    "id": 4,
                    "commentable_id": 4,
                    "commentable_type": "Group",
                    "title": "Velit laboriosam reprehenderit facere architecto aut.",
                    "body": "Quo similique qui eum totam quam consequatur eveniet. Modi eum accusamus omnis dolor recusandae fugit id. Ex ut sed nihil et ipsa at libero. Aut doloremque tempore.",
                    "user_id": 12,
                    "root_id": 0,
                    "main_root_id": 4,
                    "created_at": "April 15, 2018 18:25",
                    "updated_at": "April 15, 2018 18:25",
                    "tree_path": [
                      "4"
                    ],
                    "user": {
                      "id": 12,
                      "first_name": "Earlene Cummerata",
                      "last_name": "Miss Harold Emard",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 23,
                      "state_id": 12,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "April 15, 2018 18:25",
                      "updated_at": "April 15, 2018 18:25",
                      "email": "sherman.cain@moriettemcdermott.info",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "organization_ids": [
                        15
                      ],
                      "roles": null,
                      "group_ids": [

                      ],
                      "organization_settings": null
                    }
                  },
                  "notifiable": {
                    "id": 11,
                    "first_name": "Earlene Cummerata",
                    "last_name": "Miss Harold Emard",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 21,
                    "state_id": 11,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "April 15, 2018 18:25",
                    "updated_at": "April 15, 2018 18:25",
                    "email": "jazmin.cole@bergstrom.co",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      13
                    ],
                    "roles": null,
                    "group_ids": [

                    ],
                    "organization_settings": {
                      "id": 10,
                      "user_id": 11,
                      "organization_id": 13,
                      "role": "admin",
                      "created_at": "April 15, 2018 18:25",
                      "updated_at": "April 15, 2018 18:25",
                      "status": "active",
                      "exclude_students_ids": [

                      ],
                      "files_controll_enabled": false,
                      "messanger_access_enabled": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Activity with 'id'=0 [WHERE \"activities\".\"notifiable_id\" = $1 AND \"activities\".\"notifiable_type\" = $2]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Activity",
        "tags": [
          "Activities"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "notifiable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "notifiable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "User",
              "Group"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Activity account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Activity with 'id'=0 [WHERE \"activities\".\"notifiable_id\" = $1 AND \"activities\".\"notifiable_type\" = $2]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses": {
      "get": {
        "summary": "Get Courses inside organization",
        "tags": [
          "Admin - Course"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "get courses from specific group"
          },
          {
            "name": "term",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "term for searching by [:title, :description]"
          },
          {
            "name": "sort_field",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "title",
              "created_at",
              "lessons_count",
              "active_user_ids"
            ],
            "description": "field for sorting"
          },
          {
            "name": "sort_flag",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "ASC",
              "DESC"
            ],
            "description": "flag for sorting"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "courses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "image": {
                        "type": "object",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "organization_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "lessons_count": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "group_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "integer",
                          "properties": {
                          }
                        }
                      },
                      "active_user_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "integer",
                          "properties": {
                          }
                        }
                      },
                      "course_users_state": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "string",
                          "properties": {
                          }
                        }
                      },
                      "course_for_current_user": {
                        "description": "information about user's association to this course",
                        "type": "object",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "courses"
              ]
            },
            "examples": {
              "application/json": {
                "courses": [
                  {
                    "id": 1,
                    "title": "McCullough and Sons",
                    "description": "recontextualize turn-key mindshare",
                    "image": {
                      "url": "https://equipengine-dev.s3-eu-west-2.amazonaws.com/uploads/course/image/1/image.jpeg?X-Amz-Expires=600&X-Amz-Date=20180415T182554Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ4HLSQCUSVYCXNUA/20180415/eu-west-2/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=1acec69f0ff7eb30ff459c5238bcb335d84c40719dabcf0470fa5fab28a1cce2"
                    },
                    "user_id": 40,
                    "organization_id": 49,
                    "created_at": "2018-04-15T18:25:53.666Z",
                    "updated_at": "2018-04-15T18:25:53.666Z",
                    "lessons_count": 0,
                    "group_ids": [

                    ],
                    "active_user_ids": [

                    ],
                    "course_users_state": [

                    ],
                    "course_for_current_user": null
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Course",
        "tags": [
          "Admin - Course"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "image": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "image": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "lessons_count": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "active_user_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "course_users_state": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "string",
                        "properties": {
                        }
                      }
                    },
                    "course_for_current_user": {
                      "description": "information about user's association to this course",
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course"
              ]
            },
            "examples": {
              "application/json": {
                "course": {
                  "id": 9,
                  "title": "McCullough and Sons",
                  "description": "recontextualize turn-key mindshare",
                  "image": {
                    "url": null
                  },
                  "user_id": 55,
                  "organization_id": 63,
                  "created_at": "April 15, 2018 18:26",
                  "updated_at": "April 15, 2018 18:26",
                  "lessons_count": 0,
                  "group_ids": [

                  ],
                  "active_user_ids": null,
                  "course_users_state": null,
                  "course_for_current_user": null
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses/{id}": {
      "get": {
        "summary": "Get Course Details",
        "tags": [
          "Admin - Course"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "image": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "lessons_count": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "active_user_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "course_users_state": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "string",
                        "properties": {
                        }
                      }
                    },
                    "course_for_current_user": {
                      "description": "information about user's association to this course",
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course"
              ]
            },
            "examples": {
              "application/json": {
                "course": {
                  "id": 4,
                  "title": "McCullough and Sons",
                  "description": "recontextualize turn-key mindshare",
                  "image": {
                    "url": "https://equipengine-dev.s3-eu-west-2.amazonaws.com/uploads/course/image/4/image.jpeg?X-Amz-Expires=600&X-Amz-Date=20180415T182601Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ4HLSQCUSVYCXNUA/20180415/eu-west-2/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=9d3936fa7d96cc8a8fd8c949d9908b7d146f433f15c6fc328594f6ac1c71661f"
                  },
                  "user_id": 47,
                  "organization_id": 55,
                  "created_at": "April 15, 2018 18:25",
                  "updated_at": "April 15, 2018 18:25",
                  "lessons_count": 0,
                  "group_ids": [

                  ],
                  "active_user_ids": null,
                  "course_users_state": null,
                  "course_for_current_user": null
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Course with 'id'=0 [WHERE \"courses\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Course Details",
        "tags": [
          "Admin - Course"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "image": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "image": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "lesson_users": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "course"
              ]
            },
            "examples": {
              "application/json": {
                "course": {
                  "id": 12,
                  "title": "McCullough and Sons",
                  "description": "recontextualize turn-key mindshare",
                  "image": {
                    "url": "https://equipengine-dev.s3-eu-west-2.amazonaws.com/uploads/course/image/12/image.jpeg?X-Amz-Expires=600&X-Amz-Date=20180415T182609Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ4HLSQCUSVYCXNUA/20180415/eu-west-2/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=f4411bc3ff3a79e2ef0c8821a55ef09a493029eb8938db1b7c996c6d2a035309"
                  },
                  "user_id": 64,
                  "organization_id": 71,
                  "created_at": "April 15, 2018 18:26",
                  "updated_at": "April 15, 2018 18:26",
                  "lessons_count": 0,
                  "group_ids": [

                  ],
                  "active_user_ids": null,
                  "course_users_state": null,
                  "course_for_current_user": null
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Course with 'id'=0 [WHERE \"courses\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Course",
        "tags": [
          "Admin - Course"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Course account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Course with 'id'=0 [WHERE \"courses\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses/{course_id}/lessons": {
      "get": {
        "summary": "Lessons for course",
        "tags": [
          "Admin - Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "lessons": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "active",
                          "pause"
                        ]
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "course_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "course_settings": {
                        "description": "course settings for current group",
                        "type": "object",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "lessons"
              ]
            },
            "examples": {
              "application/json": {
                "lessons": [
                  {
                    "id": 1,
                    "title": "Carter, Stokes and Kozey",
                    "description": "embrace viral interfaces",
                    "status": "active",
                    "user_id": 84,
                    "course_id": 20,
                    "created_at": "April 15, 2018 18:26",
                    "updated_at": "April 15, 2018 18:26",
                    "course_settings": null,
                    "tasks": [

                    ]
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add lesson to course",
        "tags": [
          "Admin - Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "lesson": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "lesson"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "lesson": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "course_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "course_settings": {
                      "description": "course settings for current group",
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "lesson"
              ]
            },
            "examples": {
              "application/json": {
                "lesson": {
                  "id": 5,
                  "title": "Carter, Stokes and Kozey",
                  "description": "embrace viral interfaces",
                  "status": "active",
                  "user_id": 92,
                  "course_id": 23,
                  "created_at": "April 15, 2018 18:26",
                  "updated_at": "April 15, 2018 18:26",
                  "course_settings": null,
                  "tasks": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses/{course_id}/lessons/{id}": {
      "get": {
        "summary": "Get info about lesson at specific course",
        "tags": [
          "Admin - Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "included_lesson_users_for_current_user",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "lesson_users for current user and courses will be included inside course instance in meta section"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "lesson": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "course_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "course_settings": {
                      "description": "course settings for current group",
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "lesson"
              ]
            },
            "examples": {
              "application/json": {
                "lesson": {
                  "id": 8,
                  "title": "Carter, Stokes and Kozey",
                  "description": "embrace viral interfaces",
                  "status": "active",
                  "user_id": 106,
                  "course_id": 27,
                  "created_at": "April 15, 2018 18:26",
                  "updated_at": "April 15, 2018 18:26",
                  "course_settings": null,
                  "tasks": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Lesson with 'id'=0 [WHERE \"lessons\".\"course_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update attributes of lesson",
        "tags": [
          "Admin - Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "lesson": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "lesson"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "lesson": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    }
                  }
                }
              },
              "required": [
                "lesson"
              ]
            },
            "examples": {
              "application/json": {
                "lesson": {
                  "id": 12,
                  "title": "Carter, Stokes and Kozey",
                  "description": "embrace viral interfaces",
                  "status": "active",
                  "user_id": 119,
                  "course_id": 31,
                  "created_at": "April 15, 2018 18:26",
                  "updated_at": "April 15, 2018 18:26",
                  "course_settings": null,
                  "tasks": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Lesson with 'id'=0 [WHERE \"lessons\".\"course_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete lesson",
        "tags": [
          "Admin - Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Lesson account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Lesson with 'id'=0 [WHERE \"lessons\".\"course_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses/{course_id}/lessons/{lesson_id}/tasks": {
      "get": {
        "summary": "List of Tasks",
        "tags": [
          "Admin - Tasks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "lesson_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "tasks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "action_type": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "reading",
                          "question",
                          "watch"
                        ]
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "lesson_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "required": [
                "tasks"
              ]
            },
            "examples": {
              "application/json": {
                "tasks": [
                  {
                    "id": 1,
                    "action_type": "reading",
                    "description": "Quis est placeat non vel perferendis. Aut ut provident. Tenetur vitae error eos. Natus dolor delectus voluptas.",
                    "lesson_id": 20,
                    "user_id": 145,
                    "created_at": "April 15, 2018 18:26",
                    "updated_at": "April 15, 2018 18:26",
                    "attachments": [

                    ],
                    "videos": [

                    ],
                    "comments": [

                    ]
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Task",
        "tags": [
          "Admin - Tasks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "lesson_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "properties": {
                    "action_type": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "reading",
                        "question",
                        "watch"
                      ]
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "attachments_attributes": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "description": {
                            "type": "text",
                            "x-nullable": true
                          },
                          "data": {
                            "type": "object",
                            "x-nullable": true
                          },
                          "title": {
                            "type": "string",
                            "x-nullable": true
                          }
                        }
                      }
                    },
                    "videos_attributes": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "video_link": {
                            "type": "string",
                            "x-nullable": true
                          },
                          "title": {
                            "type": "string",
                            "x-nullable": true
                          },
                          "description": {
                            "type": "string",
                            "x-nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "task"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "action_type": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "reading",
                        "question",
                        "watch"
                      ]
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "lesson_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    }
                  }
                }
              },
              "required": [
                "task"
              ]
            },
            "examples": {
              "application/json": {
                "task": {
                  "id": 9,
                  "action_type": "reading",
                  "description": "Quis est placeat non vel perferendis. Aut ut provident. Tenetur vitae error eos. Natus dolor delectus voluptas.",
                  "lesson_id": 27,
                  "user_id": 168,
                  "created_at": "April 15, 2018 18:26",
                  "updated_at": "April 15, 2018 18:26",
                  "attachments": [

                  ],
                  "videos": [

                  ],
                  "comments": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses/{course_id}/lessons/{lesson_id}/tasks/{id}": {
      "get": {
        "summary": "Details of Task",
        "tags": [
          "Admin - Tasks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "lesson_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "action_type": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "reading",
                        "question",
                        "watch"
                      ]
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "lesson_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    }
                  }
                }
              },
              "required": [
                "task"
              ]
            },
            "examples": {
              "application/json": {
                "task": {
                  "id": 4,
                  "action_type": "reading",
                  "description": "Quis est placeat non vel perferendis. Aut ut provident. Tenetur vitae error eos. Natus dolor delectus voluptas.",
                  "lesson_id": 23,
                  "user_id": 155,
                  "created_at": "April 15, 2018 18:26",
                  "updated_at": "April 15, 2018 18:26",
                  "attachments": [

                  ],
                  "videos": [

                  ],
                  "comments": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Task with 'id'=0 [WHERE \"tasks\".\"lesson_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update details of Task",
        "tags": [
          "Admin - Tasks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "lesson_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "properties": {
                    "action_type": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "reading",
                        "question",
                        "watch"
                      ]
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "attachments_attributes": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "description": {
                            "type": "text",
                            "x-nullable": true
                          },
                          "data": {
                            "type": "object",
                            "x-nullable": true
                          },
                          "title": {
                            "type": "string",
                            "x-nullable": true
                          }
                        }
                      }
                    },
                    "videos_attributes": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "video_link": {
                            "type": "string",
                            "x-nullable": true
                          },
                          "title": {
                            "type": "string",
                            "x-nullable": true
                          },
                          "description": {
                            "type": "string",
                            "x-nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "task"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "properties": {
                    "action_type": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "reading",
                        "question",
                        "watch"
                      ]
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "task"
              ]
            },
            "examples": {
              "application/json": {
                "task": {
                  "id": 12,
                  "action_type": "reading",
                  "description": "Quis est placeat non vel perferendis. Aut ut provident. Tenetur vitae error eos. Natus dolor delectus voluptas.",
                  "lesson_id": 31,
                  "user_id": 181,
                  "created_at": "April 15, 2018 18:27",
                  "updated_at": "April 15, 2018 18:27",
                  "attachments": [

                  ],
                  "videos": [

                  ],
                  "comments": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Task with 'id'=0 [WHERE \"tasks\".\"lesson_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Task",
        "tags": [
          "Admin - Tasks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "lesson_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Task account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Task with 'id'=0 [WHERE \"tasks\".\"lesson_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{attachmentable_type}/{attachmentable_id}/attachments": {
      "get": {
        "summary": "Attachments",
        "tags": [
          "Attachments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "attachmentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "attachmentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Task",
              "TaskUser",
              "Course",
              "Group",
              "Lesson",
              "Organization",
              "Chat",
              "ChatMessage"
            ]
          },
          {
            "name": "term",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "term for searching by [:file_name, :title, :description]"
          },
          {
            "name": "sort_field",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "file_name",
              "title",
              "created_at"
            ],
            "description": "field for sorting"
          },
          {
            "name": "sort_flag",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "ASC",
              "DESC"
            ],
            "description": "flag for sorting"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "attachments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "data": {
                        "type": "object",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "organization_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "attachmentable_type": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "attachmentable_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "file_name": {
                        "type": "string",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "attachments"
              ]
            },
            "examples": {
              "application/json": {
                "attachments": [
                  {
                    "id": 1,
                    "title": "West-Lind",
                    "description": "generate open-source users",
                    "data": {
                      "url": "https://equipengine-dev.s3-eu-west-2.amazonaws.com/uploads/attachment/data/1/data.jpeg?X-Amz-Expires=600&X-Amz-Date=20180415T182718Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ4HLSQCUSVYCXNUA/20180415/eu-west-2/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=31e611d64c44620406707396981f5cdf1799f21e1dba29e3d7ae541f885de9b3"
                    },
                    "user_id": 210,
                    "organization_id": 211,
                    "created_at": "April 15, 2018 18:27",
                    "updated_at": "April 15, 2018 18:27",
                    "attachmentable_type": "Task",
                    "attachmentable_id": 20,
                    "file_name": null,
                    "attachmentable": {
                      "id": 20,
                      "action_type": "question",
                      "description": "Quis est placeat non vel perferendis. Aut ut provident. Tenetur vitae error eos. Natus dolor delectus voluptas.",
                      "lesson_id": 40,
                      "user_id": 213,
                      "created_at": "April 15, 2018 18:27",
                      "updated_at": "April 15, 2018 18:27",
                      "attachments": [
                        {
                        }
                      ],
                      "videos": [

                      ],
                      "comments": [

                      ]
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Attachment",
        "tags": [
          "Attachments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "attachmentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "attachmentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Task",
              "TaskUser",
              "Course",
              "Group",
              "Lesson",
              "Organization",
              "Chat",
              "ChatMessage"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "attachment": {
                  "type": "object",
                  "properties": {
                    "attachmentable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "attachmentable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "data": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "attachment"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "attachment": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "data": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "attachmentable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "attachmentable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "file_name": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "attachment"
              ]
            },
            "examples": {
              "application/json": {
                "attachment": {
                  "id": 5,
                  "title": "",
                  "description": null,
                  "data": {
                    "url": "https://equipengine-dev.s3-eu-west-2.amazonaws.com/uploads/attachment/data/5/data.jpeg?X-Amz-Expires=600&X-Amz-Date=20180415T182727Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ4HLSQCUSVYCXNUA/20180415/eu-west-2/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=b04bc4bbb39a47b070c38cda918eb7c93612a12e81d45cd274beb217796f48e8"
                  },
                  "user_id": 223,
                  "organization_id": 223,
                  "created_at": "April 15, 2018 18:27",
                  "updated_at": "April 15, 2018 18:27",
                  "attachmentable_type": "Task",
                  "attachmentable_id": 23,
                  "file_name": null,
                  "attachmentable": {
                    "id": 23,
                    "action_type": "question",
                    "description": "Quis est placeat non vel perferendis. Aut ut provident. Tenetur vitae error eos. Natus dolor delectus voluptas.",
                    "lesson_id": 43,
                    "user_id": 226,
                    "created_at": "April 15, 2018 18:27",
                    "updated_at": "April 15, 2018 18:27",
                    "attachments": [
                      {
                      },
                      {
                      }
                    ],
                    "videos": [

                    ],
                    "comments": [

                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{attachmentable_type}/{attachmentable_id}/attachments/{id}": {
      "put": {
        "summary": "Update Attachment",
        "tags": [
          "Attachments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "attachmentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "attachmentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Task",
              "TaskUser",
              "Course",
              "Group",
              "Lesson",
              "Organization",
              "Chat",
              "ChatMessage"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "attachment": {
                  "type": "object",
                  "properties": {
                    "attachmentable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "attachmentable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "data": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "attachment"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "attachment": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "data": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "attachmentable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "attachmentable_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "attachment"
              ]
            },
            "examples": {
              "application/json": {
                "attachment": {
                  "id": 8,
                  "title": "West-Lind",
                  "description": "generate open-source users",
                  "data": {
                    "url": "https://equipengine-dev.s3-eu-west-2.amazonaws.com/uploads/attachment/data/8/data.jpeg?X-Amz-Expires=600&X-Amz-Date=20180415T182733Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ4HLSQCUSVYCXNUA/20180415/eu-west-2/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=372f30a11772adab9f7d036ccf77cc6e447ef46daebc10044d75b6c28e7b2f22"
                  },
                  "user_id": 237,
                  "organization_id": 238,
                  "created_at": "April 15, 2018 18:27",
                  "updated_at": "April 15, 2018 18:27",
                  "attachmentable_type": "Organization",
                  "attachmentable_id": 244,
                  "file_name": null,
                  "attachmentable": {
                    "id": 244,
                    "title": "Graham Inc",
                    "subdomain": "hellerkoepp244",
                    "domain": "ikaltenwerth.org",
                    "created_at": "April 15, 2018 18:27",
                    "updated_at": "April 15, 2018 18:27"
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Attachment with 'id'=0 [WHERE \"attachments\".\"attachmentable_id\" = $1 AND \"attachments\".\"attachmentable_type\" = $2]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Attachment",
        "tags": [
          "Attachments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "attachmentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "attachmentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Task",
              "TaskUser",
              "Course",
              "Group",
              "Lesson",
              "Organization",
              "Chat",
              "ChatMessage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Attachment account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Attachment with 'id'=0 [WHERE \"attachments\".\"attachmentable_id\" = $1 AND \"attachments\".\"attachmentable_type\" = $2]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/chats/{chat_id}/chat_messages": {
      "get": {
        "summary": "List of Chat Messages",
        "tags": [
          "ChatMessages"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "chat_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "chat_messages": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "chat_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "message": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "required": [
                "chat_messages"
              ]
            },
            "examples": {
              "application/json": {
                "chat_messages": [
                  {
                    "id": 1,
                    "user_id": 273,
                    "chat_id": 1,
                    "message": "Est aut ipsa iusto. Est veritatis enim. Sunt ad delectus vel culpa corporis laborum. Et perferendis eos quis. Aspernatur voluptatem numquam error ut et quia velit.",
                    "created_at": "April 15, 2018 18:27",
                    "updated_at": "April 15, 2018 18:27",
                    "attachments": [
                      {
                        "id": 16,
                        "title": "West-Lind",
                        "description": "generate open-source users",
                        "data": {
                          "url": "https://equipengine-dev.s3-eu-west-2.amazonaws.com/uploads/attachment/data/16/data.jpeg?X-Amz-Expires=600&X-Amz-Date=20180415T182753Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ4HLSQCUSVYCXNUA/20180415/eu-west-2/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=f9c05e09c24d1cb301318f0f1ee815bbe237747e8881039fd8b094eade5094c8"
                        },
                        "user_id": 272,
                        "organization_id": 273,
                        "created_at": "April 15, 2018 18:27",
                        "updated_at": "April 15, 2018 18:27",
                        "attachmentable_type": "ChatMessage",
                        "attachmentable_id": 1,
                        "file_name": null
                      }
                    ]
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Chat Message",
        "tags": [
          "ChatMessages"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "chat_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "chat_message": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "to_user_id": {
                      "description": "recepient of message, if chat is not determinated yet",
                      "type": "integer"
                    },
                    "attachment_id": {
                      "description": "attachment from chat, that uploaded before and should to be attached to current message",
                      "type": "integer"
                    }
                  }
                }
              },
              "required": [
                "chat_message"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "chat_message": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "chat_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "message": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    }
                  }
                }
              },
              "required": [
                "chat_message"
              ]
            },
            "examples": {
              "application/json": {
                "chat_message": {
                  "id": 5,
                  "user_id": 279,
                  "chat_id": 4,
                  "message": "Est aut ipsa iusto. Est veritatis enim. Sunt ad delectus vel culpa corporis laborum. Et perferendis eos quis. Aspernatur voluptatem numquam error ut et quia velit.",
                  "created_at": "April 15, 2018 18:27",
                  "updated_at": "April 15, 2018 18:27",
                  "attachments": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/chats/{chat_id}/chat_messages/{id}": {
      "put": {
        "summary": "Update details of Chat Message",
        "tags": [
          "ChatMessages"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "chat_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "chat_message": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "text",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "chat_message"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "chat_message": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "text",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "chat_message"
              ]
            },
            "examples": {
              "application/json": {
                "chat_message": {
                  "id": 8,
                  "user_id": 288,
                  "chat_id": 8,
                  "message": "Est aut ipsa iusto. Est veritatis enim. Sunt ad delectus vel culpa corporis laborum. Et perferendis eos quis. Aspernatur voluptatem numquam error ut et quia velit.",
                  "created_at": "April 15, 2018 18:27",
                  "updated_at": "April 15, 2018 18:27",
                  "attachments": [
                    {
                      "id": 22,
                      "title": "West-Lind",
                      "description": "generate open-source users",
                      "data": {
                        "url": "https://equipengine-dev.s3-eu-west-2.amazonaws.com/uploads/attachment/data/22/data.jpeg?X-Amz-Expires=600&X-Amz-Date=20180415T182800Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ4HLSQCUSVYCXNUA/20180415/eu-west-2/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=8caa9d879f0ddd8e2472872cbc8fa149f3c62843ff37668bd8f071759dbc9efa"
                      },
                      "user_id": 287,
                      "organization_id": 287,
                      "created_at": "April 15, 2018 18:27",
                      "updated_at": "April 15, 2018 18:27",
                      "attachmentable_type": "ChatMessage",
                      "attachmentable_id": 8,
                      "file_name": null
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find ChatMessage with 'id'=0 [WHERE \"chat_messages\".\"chat_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Chat Message",
        "tags": [
          "ChatMessages"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "chat_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting ChatMessage account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find ChatMessage with 'id'=0 [WHERE \"chat_messages\".\"chat_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/chats/with_opponent/{opponent_id}": {
      "get": {
        "summary": "Get/Create Chat with opponent",
        "tags": [
          "Chats"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "opponent_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "chat": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "chat"
              ]
            },
            "examples": {
              "application/json": {
                "chat": {
                  "id": 18,
                  "title": "",
                  "created_at": "April 15, 2018 18:28",
                  "updated_at": "April 15, 2018 18:28",
                  "organization_id": 305,
                  "users": [
                    {
                      "id": 306,
                      "first_name": "Earlene Cummerata",
                      "last_name": "Miss Harold Emard",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 611,
                      "state_id": 306,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "April 15, 2018 18:28",
                      "updated_at": "April 15, 2018 18:28",
                      "email": "nickolas_bahringer@satterfield.net",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "organization_ids": [
                        305
                      ],
                      "roles": null,
                      "group_ids": [

                      ],
                      "organization_settings": {
                        "id": 280,
                        "user_id": 306,
                        "organization_id": 305,
                        "role": "admin",
                        "created_at": "April 15, 2018 18:28",
                        "updated_at": "April 15, 2018 18:28",
                        "status": "active",
                        "exclude_students_ids": [

                        ],
                        "files_controll_enabled": false,
                        "messanger_access_enabled": false
                      }
                    },
                    {
                      "id": 307,
                      "first_name": "Earlene Cummerata",
                      "last_name": "Miss Harold Emard",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 613,
                      "state_id": 307,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "April 15, 2018 18:28",
                      "updated_at": "April 15, 2018 18:28",
                      "email": "dejon@oconner.org",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "organization_ids": [
                        305
                      ],
                      "roles": null,
                      "group_ids": [

                      ],
                      "organization_settings": {
                        "id": 281,
                        "user_id": 307,
                        "organization_id": 305,
                        "role": "admin",
                        "created_at": "April 15, 2018 18:28",
                        "updated_at": "April 15, 2018 18:28",
                        "status": "active",
                        "exclude_students_ids": [

                        ],
                        "files_controll_enabled": false,
                        "messanger_access_enabled": false
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/chats": {
      "get": {
        "summary": "List of Chats",
        "tags": [
          "Chats"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "chats": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "organization_id": {
                        "type": "integer",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "chats"
              ]
            },
            "examples": {
              "application/json": {
                "chats": [
                  {
                    "id": 21,
                    "title": "Alias nesciunt eligendi a.",
                    "created_at": "April 15, 2018 18:28",
                    "updated_at": "April 15, 2018 18:28",
                    "organization_id": 308,
                    "users": [

                    ]
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/chats/{id}": {
      "get": {
        "summary": "Details of Chat",
        "tags": [
          "Chats"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "chat": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "chat"
              ]
            },
            "examples": {
              "application/json": {
                "chat": {
                  "id": 24,
                  "title": "Alias nesciunt eligendi a.",
                  "created_at": "April 15, 2018 18:28",
                  "updated_at": "April 15, 2018 18:28",
                  "organization_id": 311,
                  "users": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Chat with 'id'=0"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update details of Chat",
        "tags": [
          "Chats"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "chat": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "chat"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "chat": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "chat"
              ]
            },
            "examples": {
              "application/json": {
                "chat": {
                  "id": 28,
                  "title": "Alias nesciunt eligendi a.",
                  "created_at": "April 15, 2018 18:28",
                  "updated_at": "April 15, 2018 18:28",
                  "organization_id": 315,
                  "users": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Chat with 'id'=0"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Chat",
        "tags": [
          "Chats"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Chat account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Chat with 'id'=0"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/cities": {
      "get": {
        "summary": "List of Cities",
        "tags": [
          "Cities"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "cities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "state_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "required": [
                "cities"
              ]
            },
            "examples": {
              "application/json": {
                "cities": [
                  {
                    "id": 1,
                    "name": "Okunevaborough",
                    "state_id": 333,
                    "created_at": "April 15, 2018 18:28",
                    "updated_at": "April 15, 2018 18:28",
                    "state": {
                      "id": 333,
                      "name": "Nebraska",
                      "country_id": 666,
                      "code": "NC",
                      "created_at": "April 15, 2018 18:28",
                      "updated_at": "April 15, 2018 18:28",
                      "country": {
                        "id": 666,
                        "code": "CV",
                        "name": "Armenia",
                        "phonecode": 453
                      }
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cities/{id}": {
      "get": {
        "summary": "Details of City",
        "tags": [
          "Cities"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "city": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    }
                  }
                }
              },
              "required": [
                "city"
              ]
            },
            "examples": {
              "application/json": {
                "city": {
                  "id": 2,
                  "name": "West Tommiefort",
                  "state_id": 335,
                  "created_at": "April 15, 2018 18:28",
                  "updated_at": "April 15, 2018 18:28",
                  "state": {
                    "id": 335,
                    "name": "Alabama",
                    "country_id": 670,
                    "code": "NC",
                    "created_at": "April 15, 2018 18:28",
                    "updated_at": "April 15, 2018 18:28",
                    "country": {
                      "id": 670,
                      "code": "CV",
                      "name": "Barbados",
                      "phonecode": 453
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find City with 'id'=0"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{commentable_type}/{commentable_id}/comments": {
      "get": {
        "summary": "List of Comments as tree view by default",
        "tags": [
          "Comments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "commentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "commentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Group",
              "TaskUser",
              "CourseThread"
            ]
          },
          {
            "name": "only_roots",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "returns only root comments"
          },
          {
            "name": "root_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "returns comments under specific comment"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "comments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "commentable_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "commentable_type": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "body": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer"
                      },
                      "root_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "main_root_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "tree_path": {
                        "type": "text",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "comments"
              ]
            },
            "examples": {
              "application/json": {
                "comments": [
                  {
                    "id": 13,
                    "commentable_id": 28,
                    "commentable_type": "Group",
                    "title": "Velit laboriosam reprehenderit facere architecto aut.",
                    "body": "Quo similique qui eum totam quam consequatur eveniet. Modi eum accusamus omnis dolor recusandae fugit id. Ex ut sed nihil et ipsa at libero. Aut doloremque tempore.",
                    "user_id": 335,
                    "root_id": 0,
                    "main_root_id": 13,
                    "created_at": "April 15, 2018 18:28",
                    "updated_at": "April 15, 2018 18:28",
                    "tree_path": [
                      "13"
                    ],
                    "user": {
                      "id": 335,
                      "first_name": "Earlene Cummerata",
                      "last_name": "Miss Harold Emard",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 675,
                      "state_id": 338,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "April 15, 2018 18:28",
                      "updated_at": "April 15, 2018 18:28",
                      "email": "tia@grimescrooks.name",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "organization_ids": [
                        327
                      ],
                      "roles": null,
                      "group_ids": [

                      ],
                      "organization_settings": {
                        "id": 304,
                        "user_id": 335,
                        "organization_id": 327,
                        "role": "student",
                        "created_at": "April 15, 2018 18:28",
                        "updated_at": "April 15, 2018 18:28",
                        "status": "active",
                        "exclude_students_ids": [

                        ],
                        "files_controll_enabled": false,
                        "messanger_access_enabled": false
                      }
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Comment",
        "tags": [
          "Comments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "commentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "commentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Group",
              "TaskUser",
              "CourseThread"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "object",
                  "properties": {
                    "body": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "subject": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "root_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "attachment_id": {
                      "description": "attachment from thread, that uploaded before and should to be attached to current message",
                      "type": "integer"
                    }
                  }
                }
              },
              "required": [
                "comment"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "commentable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "commentable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "body": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer"
                    },
                    "root_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "main_root_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "tree_path": {
                      "type": "text",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "comment"
              ]
            },
            "examples": {
              "application/json": {
                "comment": {
                  "id": 17,
                  "commentable_id": 31,
                  "commentable_type": "Group",
                  "title": "Velit laboriosam reprehenderit facere architecto aut.",
                  "body": "Quo similique qui eum totam quam consequatur eveniet. Modi eum accusamus omnis dolor recusandae fugit id. Ex ut sed nihil et ipsa at libero. Aut doloremque tempore.",
                  "user_id": 339,
                  "root_id": 0,
                  "main_root_id": 0,
                  "created_at": "April 15, 2018 18:28",
                  "updated_at": "April 15, 2018 18:28",
                  "tree_path": [

                  ],
                  "user": {
                    "id": 339,
                    "first_name": "Earlene Cummerata",
                    "last_name": "Miss Harold Emard",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 683,
                    "state_id": 342,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "April 15, 2018 18:28",
                    "updated_at": "April 15, 2018 18:28",
                    "email": "aglae@prohaska.info",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      330
                    ],
                    "roles": null,
                    "group_ids": [

                    ],
                    "organization_settings": {
                      "id": 307,
                      "user_id": 339,
                      "organization_id": 330,
                      "role": "student",
                      "created_at": "April 15, 2018 18:28",
                      "updated_at": "April 15, 2018 18:28",
                      "status": "active",
                      "exclude_students_ids": [

                      ],
                      "files_controll_enabled": false,
                      "messanger_access_enabled": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{commentable_type}/{commentable_id}/comments/{id}": {
      "put": {
        "summary": "Update details of Comment",
        "tags": [
          "Comments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "commentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "commentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Group",
              "TaskUser",
              "CourseThread"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "object",
                  "properties": {
                    "body": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "subject": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "root_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "attachment_id": {
                      "description": "attachment from thread, that uploaded before and should to be attached to current message",
                      "type": "integer"
                    }
                  }
                }
              },
              "required": [
                "comment"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "body": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "root_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "comment"
              ]
            },
            "examples": {
              "application/json": {
                "comment": {
                  "id": 20,
                  "commentable_id": 35,
                  "commentable_type": "Group",
                  "title": "Velit laboriosam reprehenderit facere architecto aut.",
                  "body": "Quo similique qui eum totam quam consequatur eveniet. Modi eum accusamus omnis dolor recusandae fugit id. Ex ut sed nihil et ipsa at libero. Aut doloremque tempore.",
                  "user_id": 344,
                  "root_id": 0,
                  "main_root_id": 20,
                  "created_at": "April 15, 2018 18:28",
                  "updated_at": "April 15, 2018 18:28",
                  "tree_path": [
                    "20"
                  ],
                  "user": {
                    "id": 344,
                    "first_name": "Earlene Cummerata",
                    "last_name": "Miss Harold Emard",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 693,
                    "state_id": 347,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "April 15, 2018 18:28",
                    "updated_at": "April 15, 2018 18:28",
                    "email": "devante_koelpin@kunze.biz",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      335
                    ],
                    "roles": null,
                    "group_ids": [

                    ],
                    "organization_settings": {
                      "id": 311,
                      "user_id": 344,
                      "organization_id": 335,
                      "role": "student",
                      "created_at": "April 15, 2018 18:28",
                      "updated_at": "April 15, 2018 18:28",
                      "status": "active",
                      "exclude_students_ids": [

                      ],
                      "files_controll_enabled": false,
                      "messanger_access_enabled": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Comment with 'id'=0 [WHERE \"comments\".\"commentable_id\" = $1 AND \"comments\".\"commentable_type\" = $2]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Comment",
        "tags": [
          "Comments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "commentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "commentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Group",
              "TaskUser",
              "CourseThread"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Comment account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Comment with 'id'=0 [WHERE \"comments\".\"commentable_id\" = $1 AND \"comments\".\"commentable_type\" = $2]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/countries": {
      "get": {
        "summary": "List of Countries",
        "tags": [
          "Countries"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "countries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "code": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "name": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "phonecode": {
                        "type": "integer",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "countries"
              ]
            },
            "examples": {
              "application/json": {
                "countries": [
                  {
                    "id": 715,
                    "code": "CV",
                    "name": "Indonesia",
                    "phonecode": 453
                  },
                  {
                    "id": 716,
                    "code": "CV",
                    "name": "Samoa",
                    "phonecode": 453
                  },
                  {
                    "id": 717,
                    "code": "CV",
                    "name": "Afghanistan",
                    "phonecode": 453
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 3,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/countries/{id}": {
      "get": {
        "summary": "Details of Country",
        "tags": [
          "Countries"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "country": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "phonecode": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "country"
              ]
            },
            "examples": {
              "application/json": {
                "country": {
                  "id": 720,
                  "code": "CV",
                  "name": "Cocos (Keeling) Islands",
                  "phonecode": 453
                }
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Country with 'id'=0"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/course_groups": {
      "get": {
        "summary": "Courses in group",
        "tags": [
          "Courses vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "get courses from specific group"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "course_groups": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "course_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "group_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "precourse_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "complete_lesson_can": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "teacher",
                          "student",
                          "all"
                        ]
                      },
                      "reports_enabled": {
                        "type": "boolean",
                        "x-nullable": true
                      },
                      "files_enabled": {
                        "type": "boolean",
                        "x-nullable": true
                      },
                      "discussing_enabled": {
                        "type": "boolean",
                        "x-nullable": true
                      },
                      "student_content_enabled": {
                        "type": "boolean",
                        "x-nullable": true
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "active",
                          "pause"
                        ]
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "required": [
                "course_groups"
              ]
            },
            "examples": {
              "application/json": {
                "course_groups": [
                  {
                    "id": 15,
                    "course_id": 74,
                    "group_id": 44,
                    "precourse_id": 75,
                    "complete_lesson_can": "all",
                    "reports_enabled": true,
                    "files_enabled": true,
                    "discussing_enabled": true,
                    "student_content_enabled": true,
                    "status": "active",
                    "created_at": "April 15, 2018 18:28",
                    "updated_at": "April 15, 2018 18:28"
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Course to group",
        "tags": [
          "Courses vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "get courses from specific group"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course_group": {
                  "type": "object",
                  "properties": {
                    "complete_lesson_can": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "teacher",
                        "student",
                        "all"
                      ]
                    },
                    "discussing_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "files_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "precourse_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "reports_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "student_content_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "course_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course_group"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "course_group": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "course_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "group_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "precourse_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "complete_lesson_can": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "teacher",
                        "student",
                        "all"
                      ]
                    },
                    "reports_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "files_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "discussing_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "student_content_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    }
                  }
                }
              },
              "required": [
                "course_group"
              ]
            },
            "examples": {
              "application/json": {
                "course_group": {
                  "id": 19,
                  "course_id": 82,
                  "group_id": 47,
                  "precourse_id": 83,
                  "complete_lesson_can": "all",
                  "reports_enabled": true,
                  "files_enabled": true,
                  "discussing_enabled": true,
                  "student_content_enabled": true,
                  "status": "active",
                  "created_at": "April 15, 2018 18:28",
                  "updated_at": "April 15, 2018 18:28"
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/course_groups/{id}": {
      "put": {
        "summary": "Update Course in group",
        "tags": [
          "Courses vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "get courses from specific group"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course_group": {
                  "type": "object",
                  "properties": {
                    "complete_lesson_can": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "teacher",
                        "student",
                        "all"
                      ]
                    },
                    "discussing_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "files_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "precourse_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "reports_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "student_content_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course_group"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "course_group": {
                  "type": "object",
                  "properties": {
                    "precourse_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "complete_lesson_can": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "teacher",
                        "student",
                        "all"
                      ]
                    },
                    "reports_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "files_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "discussing_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "student_content_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    }
                  }
                }
              },
              "required": [
                "course_group"
              ]
            },
            "examples": {
              "application/json": {
                "course_group": {
                  "id": 22,
                  "course_id": 88,
                  "group_id": 51,
                  "precourse_id": 91,
                  "complete_lesson_can": "all",
                  "reports_enabled": true,
                  "files_enabled": true,
                  "discussing_enabled": true,
                  "student_content_enabled": true,
                  "status": "active",
                  "created_at": "April 15, 2018 18:28",
                  "updated_at": "April 15, 2018 18:28"
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find CourseGroup with 'id'=0 [WHERE \"course_groups\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Course from group",
        "tags": [
          "Courses vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "get courses from specific group"
          }
        ],
        "responses": {
          "200": {
            "description": "deleting CourseGroup account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find CourseGroup with 'id'=0 [WHERE \"course_groups\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{course_id}/course_threads": {
      "get": {
        "summary": "List of Course Threads",
        "tags": [
          "CourseThreads"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "sort_field",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "title",
              "created_at",
              "comments_count",
              "last_activity_at"
            ],
            "description": "field for sorting"
          },
          {
            "name": "sort_flag",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "ASC",
              "DESC"
            ],
            "description": "flag for sorting"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "course_threads": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "comments_count": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "last_activity_at": {
                        "type": "datetime",
                        "x-nullable": true
                      },
                      "course_group_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "last_comment": {
                        "type": "object",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "course_threads"
              ]
            },
            "examples": {
              "application/json": {
                "course_threads": [
                  {
                    "id": 1,
                    "title": "Voluptatem omnis explicabo repellendus vitae perferendis.",
                    "user_id": 408,
                    "comments_count": 0,
                    "created_at": "April 15, 2018 18:29",
                    "updated_at": "April 15, 2018 18:29",
                    "last_activity_at": null,
                    "course_group_id": 30,
                    "last_comment": {
                      "id": 28,
                      "commentable_id": 1,
                      "commentable_type": "CourseThread",
                      "title": "Velit laboriosam reprehenderit facere architecto aut.",
                      "body": "Quo similique qui eum totam quam consequatur eveniet. Modi eum accusamus omnis dolor recusandae fugit id. Ex ut sed nihil et ipsa at libero. Aut doloremque tempore.",
                      "user_id": 408,
                      "root_id": 0,
                      "main_root_id": 28,
                      "created_at": "April 15, 2018 18:29",
                      "updated_at": "April 15, 2018 18:29",
                      "tree_path": [
                        "28"
                      ],
                      "user": {
                        "id": 408,
                        "first_name": "Earlene Cummerata",
                        "last_name": "Miss Harold Emard",
                        "phone_number": "",
                        "date_of_birth": null,
                        "address": "",
                        "country_id": 824,
                        "state_id": 411,
                        "zip_code": "",
                        "status": "active",
                        "created_at": "April 15, 2018 18:29",
                        "updated_at": "April 15, 2018 18:29",
                        "email": "betty_kertzmann@okuneva.info",
                        "avatar": {
                          "url": null,
                          "small": {
                            "url": null
                          },
                          "middle": {
                            "url": null
                          }
                        },
                        "organization_ids": [
                          414
                        ],
                        "roles": null,
                        "group_ids": [

                        ],
                        "organization_settings": {
                          "id": 369,
                          "user_id": 408,
                          "organization_id": 414,
                          "role": "student",
                          "created_at": "April 15, 2018 18:29",
                          "updated_at": "April 15, 2018 18:29",
                          "status": "active",
                          "exclude_students_ids": [

                          ],
                          "files_controll_enabled": false,
                          "messanger_access_enabled": false
                        }
                      }
                    },
                    "user": {
                      "id": 408,
                      "first_name": "Earlene Cummerata",
                      "last_name": "Miss Harold Emard",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 824,
                      "state_id": 411,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "April 15, 2018 18:29",
                      "updated_at": "April 15, 2018 18:29",
                      "email": "betty_kertzmann@okuneva.info",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "organization_ids": [
                        414
                      ],
                      "roles": null,
                      "group_ids": [

                      ],
                      "organization_settings": {
                        "id": 369,
                        "user_id": 408,
                        "organization_id": 414,
                        "role": "student",
                        "created_at": "April 15, 2018 18:29",
                        "updated_at": "April 15, 2018 18:29",
                        "status": "active",
                        "exclude_students_ids": [

                        ],
                        "files_controll_enabled": false,
                        "messanger_access_enabled": false
                      }
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Course Thread",
        "tags": [
          "CourseThreads"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course_thread": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course_thread"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "course_thread": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "comments_count": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "last_activity_at": {
                      "type": "datetime",
                      "x-nullable": true
                    },
                    "course_group_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "last_comment": {
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course_thread"
              ]
            },
            "examples": {
              "application/json": {
                "course_thread": {
                  "id": 9,
                  "title": "In et qui placeat rerum eaque voluptatem deleniti fugit.",
                  "user_id": 424,
                  "comments_count": 0,
                  "created_at": "April 15, 2018 18:29",
                  "updated_at": "April 15, 2018 18:29",
                  "last_activity_at": null,
                  "course_group_id": 37,
                  "last_comment": null,
                  "user": {
                    "id": 424,
                    "first_name": "Earlene Cummerata",
                    "last_name": "Miss Harold Emard",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 856,
                    "state_id": 427,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "April 15, 2018 18:29",
                    "updated_at": "April 15, 2018 18:29",
                    "email": "ollie@spinka.biz",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      428
                    ],
                    "roles": null,
                    "group_ids": [

                    ],
                    "organization_settings": {
                      "id": 383,
                      "user_id": 424,
                      "organization_id": 428,
                      "role": "student",
                      "created_at": "April 15, 2018 18:29",
                      "updated_at": "April 15, 2018 18:29",
                      "status": "active",
                      "exclude_students_ids": [

                      ],
                      "files_controll_enabled": false,
                      "messanger_access_enabled": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{course_id}/course_threads/{id}": {
      "get": {
        "summary": "Details of Course Thread",
        "tags": [
          "CourseThreads"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "course_thread": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "comments_count": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "last_activity_at": {
                      "type": "datetime",
                      "x-nullable": true
                    },
                    "course_group_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "last_comment": {
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course_thread"
              ]
            },
            "examples": {
              "application/json": {
                "course_thread": {
                  "id": 4,
                  "title": "Quae et sapiente nulla ducimus eos iure accusantium.",
                  "user_id": 415,
                  "comments_count": 0,
                  "created_at": "April 15, 2018 18:29",
                  "updated_at": "April 15, 2018 18:29",
                  "last_activity_at": null,
                  "course_group_id": 33,
                  "last_comment": {
                    "id": 31,
                    "commentable_id": 4,
                    "commentable_type": "CourseThread",
                    "title": "Velit laboriosam reprehenderit facere architecto aut.",
                    "body": "Quo similique qui eum totam quam consequatur eveniet. Modi eum accusamus omnis dolor recusandae fugit id. Ex ut sed nihil et ipsa at libero. Aut doloremque tempore.",
                    "user_id": 415,
                    "root_id": 0,
                    "main_root_id": 31,
                    "created_at": "April 15, 2018 18:29",
                    "updated_at": "April 15, 2018 18:29",
                    "tree_path": [
                      "31"
                    ],
                    "user": {
                      "id": 415,
                      "first_name": "Earlene Cummerata",
                      "last_name": "Miss Harold Emard",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 838,
                      "state_id": 418,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "April 15, 2018 18:29",
                      "updated_at": "April 15, 2018 18:29",
                      "email": "lonie_lynch@bednar.io",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "organization_ids": [
                        420
                      ],
                      "roles": null,
                      "group_ids": [

                      ],
                      "organization_settings": {
                        "id": 375,
                        "user_id": 415,
                        "organization_id": 420,
                        "role": "student",
                        "created_at": "April 15, 2018 18:29",
                        "updated_at": "April 15, 2018 18:29",
                        "status": "active",
                        "exclude_students_ids": [

                        ],
                        "files_controll_enabled": false,
                        "messanger_access_enabled": false
                      }
                    }
                  },
                  "user": {
                    "id": 415,
                    "first_name": "Earlene Cummerata",
                    "last_name": "Miss Harold Emard",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 838,
                    "state_id": 418,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "April 15, 2018 18:29",
                    "updated_at": "April 15, 2018 18:29",
                    "email": "lonie_lynch@bednar.io",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      420
                    ],
                    "roles": null,
                    "group_ids": [

                    ],
                    "organization_settings": {
                      "id": 375,
                      "user_id": 415,
                      "organization_id": 420,
                      "role": "student",
                      "created_at": "April 15, 2018 18:29",
                      "updated_at": "April 15, 2018 18:29",
                      "status": "active",
                      "exclude_students_ids": [

                      ],
                      "files_controll_enabled": false,
                      "messanger_access_enabled": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find CourseThread with 'id'=0 [WHERE \"course_groups\".\"group_id\" = $1 AND \"course_groups\".\"course_id\" = $2]"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update details of Course Thread",
        "tags": [
          "CourseThreads"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course_thread": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course_thread"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "course_thread": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course_thread"
              ]
            },
            "examples": {
              "application/json": {
                "course_thread": {
                  "id": 12,
                  "title": "Molestiae excepturi ad quasi accusantium repellendus possimus distinctio omnis.",
                  "user_id": 434,
                  "comments_count": 0,
                  "created_at": "April 15, 2018 18:29",
                  "updated_at": "April 15, 2018 18:29",
                  "last_activity_at": null,
                  "course_group_id": 41,
                  "last_comment": {
                    "id": 38,
                    "commentable_id": 12,
                    "commentable_type": "CourseThread",
                    "title": "Velit laboriosam reprehenderit facere architecto aut.",
                    "body": "Quo similique qui eum totam quam consequatur eveniet. Modi eum accusamus omnis dolor recusandae fugit id. Ex ut sed nihil et ipsa at libero. Aut doloremque tempore.",
                    "user_id": 434,
                    "root_id": 0,
                    "main_root_id": 38,
                    "created_at": "April 15, 2018 18:29",
                    "updated_at": "April 15, 2018 18:29",
                    "tree_path": [
                      "38"
                    ],
                    "user": {
                      "id": 434,
                      "first_name": "Earlene Cummerata",
                      "last_name": "Miss Harold Emard",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 876,
                      "state_id": 437,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "April 15, 2018 18:29",
                      "updated_at": "April 15, 2018 18:29",
                      "email": "jennings@reynolds.com",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "organization_ids": [
                        440
                      ],
                      "roles": null,
                      "group_ids": [

                      ],
                      "organization_settings": {
                        "id": 392,
                        "user_id": 434,
                        "organization_id": 440,
                        "role": "student",
                        "created_at": "April 15, 2018 18:29",
                        "updated_at": "April 15, 2018 18:29",
                        "status": "active",
                        "exclude_students_ids": [

                        ],
                        "files_controll_enabled": false,
                        "messanger_access_enabled": false
                      }
                    }
                  },
                  "user": {
                    "id": 434,
                    "first_name": "Earlene Cummerata",
                    "last_name": "Miss Harold Emard",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 876,
                    "state_id": 437,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "April 15, 2018 18:29",
                    "updated_at": "April 15, 2018 18:29",
                    "email": "jennings@reynolds.com",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      440
                    ],
                    "roles": null,
                    "group_ids": [

                    ],
                    "organization_settings": {
                      "id": 392,
                      "user_id": 434,
                      "organization_id": 440,
                      "role": "student",
                      "created_at": "April 15, 2018 18:29",
                      "updated_at": "April 15, 2018 18:29",
                      "status": "active",
                      "exclude_students_ids": [

                      ],
                      "files_controll_enabled": false,
                      "messanger_access_enabled": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find CourseThread with 'id'=0 [WHERE \"course_groups\".\"group_id\" = $1 AND \"course_groups\".\"course_id\" = $2]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Course Thread",
        "tags": [
          "CourseThreads"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting CourseThread account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find CourseThread with 'id'=0 [WHERE \"course_groups\".\"group_id\" = $1 AND \"course_groups\".\"course_id\" = $2]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses": {
      "get": {
        "summary": "Get Courses inside organization",
        "tags": [
          "Courses"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "term",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "term for searching by [:title, :description]"
          },
          {
            "name": "sort_field",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "title",
              "created_at",
              "lessons_count",
              "active_user_ids"
            ],
            "description": "field for sorting"
          },
          {
            "name": "sort_flag",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "ASC",
              "DESC"
            ],
            "description": "flag for sorting"
          },
          {
            "name": "included_lesson_users_for_current_user",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "lesson_users for current user and courses will be included"
          },
          {
            "name": "included_lesson_users",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "lesson_users for courses will be included"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "courses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "image": {
                        "type": "object",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "organization_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "lessons_count": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "group_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "integer",
                          "properties": {
                          }
                        }
                      },
                      "active_user_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "integer",
                          "properties": {
                          }
                        }
                      },
                      "course_users_state": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "string",
                          "properties": {
                          }
                        }
                      },
                      "course_for_current_user": {
                        "description": "information about user's association to this course",
                        "type": "object",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "courses"
              ]
            },
            "examples": {
              "application/json": {
                "courses": [
                  {
                    "id": 129,
                    "title": "McCullough and Sons",
                    "description": "recontextualize turn-key mindshare",
                    "image": {
                      "url": "https://equipengine-dev.s3-eu-west-2.amazonaws.com/uploads/course/image/129/image.jpeg?X-Amz-Expires=600&X-Amz-Date=20180415T182937Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ4HLSQCUSVYCXNUA/20180415/eu-west-2/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=fd54dfe6ad7685e6fa361daa4baf903114dc80e1a38144e113b7c86df49fb221"
                    },
                    "user_id": 458,
                    "organization_id": 462,
                    "created_at": "April 15, 2018 18:29",
                    "updated_at": "April 15, 2018 18:29",
                    "lessons_count": 0,
                    "group_ids": [
                      80
                    ],
                    "active_user_ids": null,
                    "course_users_state": null,
                    "lesson_users": [

                    ],
                    "lesson_users_for_current_user": [

                    ],
                    "course_for_current_user": null
                  },
                  {
                    "id": 128,
                    "title": "McCullough and Sons",
                    "description": "recontextualize turn-key mindshare",
                    "image": {
                      "url": "https://equipengine-dev.s3-eu-west-2.amazonaws.com/uploads/course/image/128/image.jpeg?X-Amz-Expires=600&X-Amz-Date=20180415T182937Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ4HLSQCUSVYCXNUA/20180415/eu-west-2/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=6c99265ead9dd3b4f874e3caa11eaef04df4dae87c2a6b9fc6f4236e2283848e"
                    },
                    "user_id": 456,
                    "organization_id": 462,
                    "created_at": "April 15, 2018 18:29",
                    "updated_at": "April 15, 2018 18:29",
                    "lessons_count": 1,
                    "group_ids": [
                      80
                    ],
                    "active_user_ids": null,
                    "course_users_state": null,
                    "lesson_users": [

                    ],
                    "lesson_users_for_current_user": [

                    ],
                    "course_for_current_user": null
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 2,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{id}": {
      "get": {
        "summary": "Get Course Details",
        "tags": [
          "Courses"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "image": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "lessons_count": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "active_user_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "course_users_state": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "string",
                        "properties": {
                        }
                      }
                    },
                    "course_for_current_user": {
                      "description": "information about user's association to this course",
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course"
              ]
            },
            "examples": {
              "application/json": {
                "course": {
                  "id": 134,
                  "title": "McCullough and Sons",
                  "description": "recontextualize turn-key mindshare",
                  "image": {
                    "url": "https://equipengine-dev.s3-eu-west-2.amazonaws.com/uploads/course/image/134/image.jpeg?X-Amz-Expires=600&X-Amz-Date=20180415T182945Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJ4HLSQCUSVYCXNUA/20180415/eu-west-2/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=ab44bc51f4f660ebfccc867585651b1463bf58ca805bdf3bde6783119f373377"
                  },
                  "user_id": 469,
                  "organization_id": 474,
                  "created_at": "April 15, 2018 18:29",
                  "updated_at": "April 15, 2018 18:29",
                  "lessons_count": 1,
                  "group_ids": [
                    83
                  ],
                  "active_user_ids": null,
                  "course_users_state": null,
                  "course_for_current_user": {
                    "id": 39,
                    "course_id": 134,
                    "user_id": 468,
                    "status": "active",
                    "created_at": "April 15, 2018 18:29",
                    "updated_at": "April 15, 2018 18:29",
                    "course_group_id": 56,
                    "position": 2,
                    "can_start": true
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Course with 'id'=0 [WHERE \"course_groups\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/group_users": {
      "get": {
        "summary": "Users in group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "sort_field",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "role",
              "last_name",
              "first_name",
              "created_at",
              "status"
            ],
            "description": "field for sorting"
          },
          {
            "name": "sort_flag",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "ASC",
              "DESC"
            ],
            "description": "flag for sorting"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "group_users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "group_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "active",
                          "pause"
                        ]
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "role": {
                        "type": "string"
                      },
                      "organization_id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "required": [
                "group_users"
              ]
            },
            "examples": {
              "application/json": {
                "group_users": [
                  {
                    "id": 54,
                    "first_name": "Earlene Cummerata",
                    "last_name": "Miss Harold Emard",
                    "role": "",
                    "organization_id": 490
                  },
                  {
                    "id": 55,
                    "first_name": "Earlene Cummerata",
                    "last_name": "Miss Harold Emard",
                    "role": "admin",
                    "organization_id": 490
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 2,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add User to group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "group_user": {
                  "type": "object",
                  "properties": {
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "group_user"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "group_user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "group_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string"
                    },
                    "organization_id": {
                      "type": "integer"
                    }
                  }
                }
              },
              "required": [
                "group_user"
              ]
            },
            "examples": {
              "application/json": {
                "group_user": {
                  "id": 62,
                  "user_id": 492,
                  "group_id": 90,
                  "created_at": "April 15, 2018 18:30",
                  "updated_at": "April 15, 2018 18:30",
                  "status": "active",
                  "first_name": "Earlene Cummerata",
                  "last_name": "Miss Harold Emard",
                  "role": "admin",
                  "organization_id": 496
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/group_users/{id}": {
      "put": {
        "summary": "Change status of user in group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "group_user": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    }
                  }
                }
              },
              "required": [
                "group_user"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "group_user": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    }
                  }
                }
              },
              "required": [
                "group_user"
              ]
            },
            "examples": {
              "application/json": {
                "group_user": {
                  "id": 67,
                  "user_id": 501,
                  "group_id": 94,
                  "created_at": "April 15, 2018 18:30",
                  "updated_at": "April 15, 2018 18:30",
                  "status": "active",
                  "first_name": "Earlene Cummerata",
                  "last_name": "Miss Harold Emard",
                  "role": "",
                  "organization_id": 504
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find GroupUser with 'id'=0 [WHERE \"group_users\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user from group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting GroupUser account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find GroupUser with 'id'=0 [WHERE \"group_users\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/group_users/batch_update": {
      "put": {
        "summary": "Change status of batch users in group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "status",
            "in": "body",
            "type": "string",
            "enum": [
              "active",
              "pause"
            ],
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns status and errors",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                },
                "errors": {
                  "type": "array"
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "errors": [

                ],
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups": {
      "get": {
        "summary": "Get Groups inside organization",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "visibility",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "private",
              "public"
            ],
            "description": "Filter groups by visibility"
          },
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "active",
              "pause"
            ],
            "description": "Filter groups by status"
          },
          {
            "name": "my",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "return user's groups"
          },
          {
            "name": "term",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "term for searching by [:description, :title]"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "groups": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "organization_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "active",
                          "pause"
                        ]
                      },
                      "user_limit": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "visibility": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "private",
                          "public"
                        ]
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "count_participants": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "noticeboard_settings": {
                        "type": "jsonb"
                      },
                      "user_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "integer",
                          "properties": {
                          }
                        }
                      },
                      "participated": {
                        "description": "group_user instance for current user if he participated in group",
                        "type": "object",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "groups"
              ]
            },
            "examples": {
              "application/json": {
                "groups": [
                  {
                    "id": 106,
                    "organization_id": 528,
                    "title": "Cremin LLC",
                    "description": "expedite value-added action-items",
                    "status": "active",
                    "user_limit": 10,
                    "visibility": "public",
                    "created_at": "April 15, 2018 18:30",
                    "updated_at": "April 15, 2018 18:30",
                    "count_participants": 1,
                    "user_id": 0,
                    "noticeboard_settings": {
                      "student_can_post": true,
                      "noticeboard_enabled": true,
                      "student_can_comment": true
                    },
                    "user_ids": [
                      526
                    ],
                    "participated": {
                      "id": 89,
                      "user_id": 526,
                      "group_id": 106,
                      "created_at": "April 15, 2018 18:30",
                      "updated_at": "April 15, 2018 18:30",
                      "status": "active",
                      "first_name": "Earlene Cummerata",
                      "last_name": "Miss Harold Emard",
                      "role": "admin",
                      "organization_id": 528
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Group",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "user_limit": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "visibility": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "private",
                        "public"
                      ]
                    },
                    "noticeboard_enabled": {
                      "type": "boolean"
                    },
                    "student_can_post": {
                      "type": "boolean"
                    },
                    "student_can_comment": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "required": [
                "group"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "user_limit": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "visibility": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "private",
                        "public"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "count_participants": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "noticeboard_settings": {
                      "type": "jsonb"
                    },
                    "user_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "participated": {
                      "description": "group_user instance for current user if he participated in group",
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "group"
              ]
            },
            "examples": {
              "application/json": {
                "group": {
                  "id": 114,
                  "organization_id": 535,
                  "title": "Cremin LLC",
                  "description": "expedite value-added action-items",
                  "status": "active",
                  "user_limit": 10,
                  "visibility": "public",
                  "created_at": "April 15, 2018 18:30",
                  "updated_at": "April 15, 2018 18:30",
                  "count_participants": 0,
                  "user_id": 535,
                  "noticeboard_settings": {
                  },
                  "user_ids": [

                  ],
                  "participated": null
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{id}": {
      "get": {
        "summary": "Get Group Details",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "user_limit": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "visibility": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "private",
                        "public"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "count_participants": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "noticeboard_settings": {
                      "type": "jsonb"
                    },
                    "user_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "participated": {
                      "description": "group_user instance for current user if he participated in group",
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "group"
              ]
            },
            "examples": {
              "application/json": {
                "group": {
                  "id": 109,
                  "organization_id": 531,
                  "title": "Cremin LLC",
                  "description": "expedite value-added action-items",
                  "status": "active",
                  "user_limit": 10,
                  "visibility": "public",
                  "created_at": "April 15, 2018 18:30",
                  "updated_at": "April 15, 2018 18:30",
                  "count_participants": 1,
                  "user_id": 0,
                  "noticeboard_settings": {
                    "student_can_post": true,
                    "noticeboard_enabled": true,
                    "student_can_comment": true
                  },
                  "user_ids": [
                    530
                  ],
                  "participated": {
                    "id": 92,
                    "user_id": 530,
                    "group_id": 109,
                    "created_at": "April 15, 2018 18:30",
                    "updated_at": "April 15, 2018 18:30",
                    "status": "active",
                    "first_name": "Earlene Cummerata",
                    "last_name": "Miss Harold Emard",
                    "role": "admin",
                    "organization_id": 531
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Group with 'id'=0 [WHERE \"groups\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Group Details",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "user_limit": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "visibility": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "private",
                        "public"
                      ]
                    },
                    "noticeboard_enabled": {
                      "type": "boolean"
                    },
                    "student_can_post": {
                      "type": "boolean"
                    },
                    "student_can_comment": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "required": [
                "group"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "user_limit": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "visibility": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "private",
                        "public"
                      ]
                    }
                  }
                }
              },
              "required": [
                "group"
              ]
            },
            "examples": {
              "application/json": {
                "group": {
                  "id": 117,
                  "organization_id": 539,
                  "title": "Cremin LLC",
                  "description": "expedite value-added action-items",
                  "status": "active",
                  "user_limit": 10,
                  "visibility": "public",
                  "created_at": "April 15, 2018 18:30",
                  "updated_at": "April 15, 2018 18:30",
                  "count_participants": 1,
                  "user_id": 0,
                  "noticeboard_settings": {
                    "student_can_post": true,
                    "noticeboard_enabled": true,
                    "student_can_comment": true
                  },
                  "user_ids": [
                    539
                  ],
                  "participated": {
                    "id": 99,
                    "user_id": 539,
                    "group_id": 117,
                    "created_at": "April 15, 2018 18:30",
                    "updated_at": "April 15, 2018 18:30",
                    "status": "active",
                    "first_name": "Earlene Cummerata",
                    "last_name": "Miss Harold Emard",
                    "role": "admin",
                    "organization_id": 539
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Group with 'id'=0 [WHERE \"groups\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Group",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Group account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Group with 'id'=0 [WHERE \"groups\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{course_id}/lessons": {
      "get": {
        "summary": "Lessons for course",
        "tags": [
          "Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "lessons": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "active",
                          "pause"
                        ]
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "course_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "course_settings": {
                        "description": "course settings for current group",
                        "type": "object",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "lessons"
              ]
            },
            "examples": {
              "application/json": {
                "lessons": [
                  {
                    "id": 61,
                    "title": "Carter, Stokes and Kozey",
                    "description": "embrace viral interfaces",
                    "status": "active",
                    "user_id": 551,
                    "course_id": 142,
                    "created_at": "April 15, 2018 18:31",
                    "updated_at": "April 15, 2018 18:31",
                    "course_settings": {
                      "id": 64,
                      "course_id": 142,
                      "group_id": 125,
                      "precourse_id": 0,
                      "complete_lesson_can": "all",
                      "reports_enabled": true,
                      "files_enabled": true,
                      "discussing_enabled": true,
                      "student_content_enabled": true,
                      "status": "active",
                      "created_at": "April 15, 2018 18:31",
                      "updated_at": "April 15, 2018 18:31"
                    },
                    "tasks": [

                    ]
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{course_id}/lessons/{id}": {
      "get": {
        "summary": "Get info about lesson at specific course",
        "tags": [
          "Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "included_lesson_users_for_current_user",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "lesson_users for current user and courses will be included inside course instance in meta section"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "lesson": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "course_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "course_settings": {
                      "description": "course settings for current group",
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "lesson"
              ]
            },
            "examples": {
              "application/json": {
                "lesson": {
                  "id": 64,
                  "title": "Carter, Stokes and Kozey",
                  "description": "embrace viral interfaces",
                  "status": "active",
                  "user_id": 561,
                  "course_id": 145,
                  "created_at": "April 15, 2018 18:31",
                  "updated_at": "April 15, 2018 18:31",
                  "course_settings": {
                    "id": 67,
                    "course_id": 145,
                    "group_id": 128,
                    "precourse_id": 0,
                    "complete_lesson_can": "all",
                    "reports_enabled": true,
                    "files_enabled": true,
                    "discussing_enabled": true,
                    "student_content_enabled": true,
                    "status": "active",
                    "created_at": "April 15, 2018 18:31",
                    "updated_at": "April 15, 2018 18:31"
                  },
                  "tasks": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Lesson with 'id'=0 [WHERE \"lessons\".\"course_id\" = $1 AND \"lessons\".\"status\" = $2]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{course_id}/lessons/{id}/complete": {
      "put": {
        "summary": "Complete/Uncomplete lesson",
        "tags": [
          "Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "completed",
            "in": "query",
            "type": "boolean",
            "required": true
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "student id if current user is teacher and he mark lesson of some student"
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns result",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        }
      }
    },
    "/api/v1/passwords": {
      "post": {
        "summary": "Send reset password token",
        "tags": [
          "Passwords"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "user's email or id required"
                },
                "id": {
                  "type": "integer",
                  "description": "user's email or id required"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update password",
        "tags": [
          "Passwords"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string"
                },
                "password_confirmation": {
                  "type": "string"
                },
                "reset_password_token": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "password changed",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "x-nullable": true
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended",
                        "deleted"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "email": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "organization_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "roles": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "organization_settings": {
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 578,
                  "first_name": "Earlene Cummerata",
                  "last_name": "Miss Harold Emard",
                  "phone_number": "",
                  "date_of_birth": null,
                  "address": "",
                  "country_id": 1164,
                  "state_id": 581,
                  "zip_code": "",
                  "status": "active",
                  "created_at": "April 15, 2018 18:31",
                  "updated_at": "April 15, 2018 18:31",
                  "email": "reilly@flatley.info",
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "organization_ids": [
                    575
                  ],
                  "roles": null,
                  "group_ids": [

                  ],
                  "organization_settings": null
                },
                "token": "eyJhbGciOiJIUzI1NiJ9.eyJpZCI6NTc4LCJleHAiOjE1NTUzNTMwNzMsInR5cGUiOiJ1c2VyIiwiZW1haWwiOiJyZWlsbHlAZmxhdGxleS5pbmZvIn0.aLEF5KCC8gJaz7TLYNeivfKmWnozm-BVnXLTU6Ch__k"
              }
            }
          },
          "400": {
            "description": "fail with wrong token",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "invalid data"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/registrations": {
      "post": {
        "summary": "Sign up",
        "tags": [
          "Sign up"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "user created",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "x-nullable": true
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended",
                        "deleted"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "email": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "organization_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "roles": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "organization_settings": {
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 583,
                  "first_name": "",
                  "last_name": "",
                  "phone_number": "",
                  "date_of_birth": null,
                  "address": "",
                  "country_id": 0,
                  "state_id": 0,
                  "zip_code": "",
                  "status": "active",
                  "created_at": "April 15, 2018 18:31",
                  "updated_at": "April 15, 2018 18:31",
                  "email": "katelynn.murray@mcculloughrutherford.io",
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "organization_ids": [

                  ],
                  "roles": null,
                  "group_ids": [

                  ],
                  "organization_settings": null
                }
              }
            }
          },
          "400": {
            "description": "registration is fail with existing email",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "items": {
                      "email": "array"
                    }
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "wrong_data",
                "errors": [
                  {
                    "email": [
                      "has already been taken"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions": {
      "delete": {
        "summary": "Destroy a session",
        "tags": [
          "Session"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "session destroyed",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a session",
        "tags": [
          "Session"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "session created",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "x-nullable": true
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended",
                        "deleted"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "email": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "organization_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "roles": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "organization_settings": {
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 589,
                  "first_name": "Earlene Cummerata",
                  "last_name": "Miss Harold Emard",
                  "phone_number": "",
                  "date_of_birth": null,
                  "address": "",
                  "country_id": 1184,
                  "state_id": 591,
                  "zip_code": "",
                  "status": "active",
                  "created_at": "April 15, 2018 18:31",
                  "updated_at": "April 15, 2018 18:31",
                  "email": "eileen_aufderhar@mohr.biz",
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "organization_ids": [
                    585
                  ],
                  "roles": null,
                  "group_ids": [

                  ],
                  "organization_settings": null
                },
                "token": "eyJhbGciOiJIUzI1NiJ9.eyJpZCI6NTg5LCJleHAiOjE1NTUzNTMwNzQsInR5cGUiOiJ1c2VyIiwiZW1haWwiOiJlaWxlZW5fYXVmZGVyaGFyQG1vaHIuYml6In0.N80A6YzFbnbSrH6i435Z0jUNFtvrvEtxyJEd2By1heQ"
              }
            }
          },
          "401": {
            "description": "session is fail with wrong email",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "wrong_credentials",
                "errors": [
                  "Error with your login or password"
                ]
              }
            }
          },
          "400": {
            "description": "session is fail if user is not confirmed",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "items": {
                      "email": "array"
                    }
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": 400,
                "errors": [
                  {
                    "email": "email is not confirmed"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/states": {
      "get": {
        "summary": "List of States",
        "tags": [
          "States"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "states": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "country_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "code": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "required": [
                "states"
              ]
            },
            "examples": {
              "application/json": {
                "states": [
                  {
                    "id": 599,
                    "name": "Kansas",
                    "country_id": 1201,
                    "code": "NC",
                    "created_at": "April 15, 2018 18:31",
                    "updated_at": "April 15, 2018 18:31",
                    "country": {
                      "id": 1201,
                      "code": "CV",
                      "name": "Niue",
                      "phonecode": 453
                    }
                  },
                  {
                    "id": 600,
                    "name": "North Carolina",
                    "country_id": 1202,
                    "code": "NC",
                    "created_at": "April 15, 2018 18:31",
                    "updated_at": "April 15, 2018 18:31",
                    "country": {
                      "id": 1202,
                      "code": "CV",
                      "name": "Venezuela",
                      "phonecode": 453
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 2,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/states/{id}": {
      "get": {
        "summary": "Details of State",
        "tags": [
          "States"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "state": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    }
                  }
                }
              },
              "required": [
                "state"
              ]
            },
            "examples": {
              "application/json": {
                "state": {
                  "id": 602,
                  "name": "Alaska",
                  "country_id": 1205,
                  "code": "NC",
                  "created_at": "April 15, 2018 18:31",
                  "updated_at": "April 15, 2018 18:31",
                  "country": {
                    "id": 1205,
                    "code": "CV",
                    "name": "Serbia",
                    "phonecode": 453
                  }
                }
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find State with 'id'=0"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{course_id}/lessons/{lesson_id}/tasks": {
      "get": {
        "summary": "List of Tasks",
        "tags": [
          "Tasks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "lesson_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "tasks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "action_type": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "reading",
                          "question",
                          "watch"
                        ]
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "lesson_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "required": [
                "tasks"
              ]
            },
            "examples": {
              "application/json": {
                "tasks": [
                  {
                    "id": 34,
                    "action_type": "reading",
                    "description": "Quis est placeat non vel perferendis. Aut ut provident. Tenetur vitae error eos. Natus dolor delectus voluptas.",
                    "lesson_id": 69,
                    "user_id": 600,
                    "created_at": "April 15, 2018 18:31",
                    "updated_at": "April 15, 2018 18:31",
                    "attachments": [

                    ],
                    "videos": [

                    ],
                    "comments": [

                    ]
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{course_id}/lessons/{lesson_id}/tasks/{id}": {
      "get": {
        "summary": "Details of Task",
        "tags": [
          "Tasks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "lesson_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "action_type": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "reading",
                        "question",
                        "watch"
                      ]
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "lesson_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    }
                  }
                }
              },
              "required": [
                "task"
              ]
            },
            "examples": {
              "application/json": {
                "task": {
                  "id": 37,
                  "action_type": "reading",
                  "description": "Quis est placeat non vel perferendis. Aut ut provident. Tenetur vitae error eos. Natus dolor delectus voluptas.",
                  "lesson_id": 72,
                  "user_id": 610,
                  "created_at": "April 15, 2018 18:31",
                  "updated_at": "April 15, 2018 18:31",
                  "attachments": [

                  ],
                  "videos": [

                  ],
                  "comments": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Task with 'id'=0 [WHERE \"tasks\".\"lesson_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "summary": "Get Users inside organization",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "get users from specific group"
          },
          {
            "name": "term",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "term for searching by [:first_name, :last_name, :email]"
          },
          {
            "name": "role",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "filter by role(student, teacher)"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "first_name": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "last_name": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "phone_number": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "date_of_birth": {
                        "type": "date",
                        "x-nullable": true
                      },
                      "address": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "country_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "state_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "zip_code": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "active",
                          "suspended",
                          "deleted"
                        ]
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "email": {
                        "type": "string"
                      },
                      "avatar": {
                        "type": "object",
                        "x-nullable": true
                      },
                      "organization_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "integer",
                          "properties": {
                          }
                        }
                      },
                      "roles": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "group_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "integer",
                          "properties": {
                          }
                        }
                      },
                      "organization_settings": {
                        "type": "object",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "users"
              ]
            },
            "examples": {
              "application/json": {
                "users": [
                  {
                    "id": 623,
                    "first_name": "Earlene Cummerata",
                    "last_name": "Miss Harold Emard",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 1255,
                    "state_id": 628,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "April 15, 2018 18:31",
                    "updated_at": "April 15, 2018 18:31",
                    "email": "tamara@kertzmanncremin.name",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "organization_ids": [
                      617
                    ],
                    "roles": null,
                    "group_ids": [

                    ],
                    "organization_settings": {
                      "id": 562,
                      "user_id": 623,
                      "organization_id": 617,
                      "role": "admin",
                      "created_at": "April 15, 2018 18:31",
                      "updated_at": "April 15, 2018 18:31",
                      "status": "active",
                      "exclude_students_ids": [

                      ],
                      "files_controll_enabled": false,
                      "messanger_access_enabled": false
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create User",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "email": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "password_confirmation": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended",
                        "deleted"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "email": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "organization_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "roles": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "organization_settings": {
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 633,
                  "first_name": "Earlene Cummerata",
                  "last_name": "Miss Harold Emard",
                  "phone_number": "",
                  "date_of_birth": null,
                  "address": "",
                  "country_id": 1275,
                  "state_id": 638,
                  "zip_code": "",
                  "status": "active",
                  "created_at": "April 15, 2018 18:31",
                  "updated_at": "April 15, 2018 18:31",
                  "email": "joany@blick.io",
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "organization_ids": [

                  ],
                  "roles": null,
                  "group_ids": [

                  ],
                  "organization_settings": null
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "summary": "Get User Details",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended",
                        "deleted"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "email": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "organization_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "roles": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "organization_settings": {
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 627,
                  "first_name": "Earlene Cummerata",
                  "last_name": "Miss Harold Emard",
                  "phone_number": "",
                  "date_of_birth": null,
                  "address": "",
                  "country_id": 1263,
                  "state_id": 632,
                  "zip_code": "",
                  "status": "active",
                  "created_at": "April 15, 2018 18:31",
                  "updated_at": "April 15, 2018 18:31",
                  "email": "kole.wuckert@hilpert.biz",
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "organization_ids": [
                    620
                  ],
                  "roles": null,
                  "group_ids": [

                  ],
                  "organization_settings": {
                    "id": 565,
                    "user_id": 627,
                    "organization_id": 620,
                    "role": "admin",
                    "created_at": "April 15, 2018 18:31",
                    "updated_at": "April 15, 2018 18:31",
                    "status": "active",
                    "exclude_students_ids": [

                    ],
                    "files_controll_enabled": false,
                    "messanger_access_enabled": false
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find User with 'id'=0"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update User Details",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "email": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "password_confirmation": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "organization_users_attributes": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "role": {
                            "type": "string",
                            "x-nullable": true,
                            "enum": [
                              "student",
                              "teacher",
                              "admin"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "x-nullable": true,
                            "enum": [
                              "active",
                              "suspended"
                            ]
                          },
                          "exclude_students_ids": {
                            "type": "array",
                            "x-nullable": true,
                            "items": {
                              "type": "integer",
                              "properties": {
                              }
                            }
                          },
                          "files_controll_enabled": {
                            "type": "boolean",
                            "x-nullable": true
                          },
                          "messanger_access_enabled": {
                            "type": "boolean",
                            "x-nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "email": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 637,
                  "first_name": "Earlene Cummerata",
                  "last_name": "Miss Harold Emard",
                  "phone_number": "",
                  "date_of_birth": null,
                  "address": "",
                  "country_id": 1285,
                  "state_id": 643,
                  "zip_code": "",
                  "status": "active",
                  "created_at": "April 15, 2018 18:31",
                  "updated_at": "April 15, 2018 18:31",
                  "email": "rashawn@kuphalkunze.net",
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "organization_ids": [
                    627
                  ],
                  "roles": null,
                  "group_ids": [

                  ],
                  "organization_settings": {
                    "id": 572,
                    "user_id": 637,
                    "organization_id": 627,
                    "role": "admin",
                    "created_at": "April 15, 2018 18:31",
                    "updated_at": "April 15, 2018 18:31",
                    "status": "active",
                    "exclude_students_ids": [

                    ],
                    "files_controll_enabled": false,
                    "messanger_access_enabled": false
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find User with 'id'=0"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete User",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting User account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find User with 'id'=0"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}/send_set_password_link": {
      "post": {
        "summary": "Send set password link to user",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns result",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find User with 'id'=0"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{videoable_type}/{videoable_id}/videos": {
      "get": {
        "summary": "Videos",
        "tags": [
          "Videos"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "videoable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "videoable_type",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "videos": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "length": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "organization_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "videoable_type": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "videoable_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "video_link": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "draft",
                          "processing",
                          "ready",
                          "failed"
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "videos"
              ]
            },
            "examples": {
              "application/json": {
                "videos": [
                  {
                    "id": 1,
                    "title": "Treutel-Hirthe",
                    "length": 3861,
                    "organization_id": 639,
                    "user_id": 652,
                    "videoable_type": "Task",
                    "videoable_id": 41,
                    "created_at": "April 15, 2018 18:31",
                    "updated_at": "April 15, 2018 18:31",
                    "video_link": "https://youtu.be/BL50xRTnHTQ",
                    "status": "ready",
                    "videoable": {
                      "id": 41,
                      "action_type": "reading",
                      "description": "Quis est placeat non vel perferendis. Aut ut provident. Tenetur vitae error eos. Natus dolor delectus voluptas.",
                      "lesson_id": 76,
                      "user_id": 655,
                      "created_at": "April 15, 2018 18:31",
                      "updated_at": "April 15, 2018 18:31",
                      "attachments": [

                      ],
                      "videos": [
                        {
                        }
                      ],
                      "comments": [

                      ]
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Video with youtube link",
        "tags": [
          "Videos"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "videoable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "videoable_type",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "video": {
                  "type": "object",
                  "properties": {
                    "videoable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "videoable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "video_link": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "video"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "video": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "length": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "videoable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "videoable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "video_link": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "draft",
                        "processing",
                        "ready",
                        "failed"
                      ]
                    }
                  }
                }
              },
              "required": [
                "video"
              ]
            },
            "examples": {
              "application/json": {
                "video": {
                  "id": 5,
                  "title": "",
                  "length": 3861,
                  "organization_id": 651,
                  "user_id": 665,
                  "videoable_type": "Task",
                  "videoable_id": 44,
                  "created_at": "April 15, 2018 18:31",
                  "updated_at": "April 15, 2018 18:31",
                  "video_link": "https://youtu.be/BL50xRTnHTQ",
                  "status": "ready",
                  "videoable": {
                    "id": 44,
                    "action_type": "reading",
                    "description": "Quis est placeat non vel perferendis. Aut ut provident. Tenetur vitae error eos. Natus dolor delectus voluptas.",
                    "lesson_id": 79,
                    "user_id": 668,
                    "created_at": "April 15, 2018 18:31",
                    "updated_at": "April 15, 2018 18:31",
                    "attachments": [

                    ],
                    "videos": [
                      {
                      },
                      {
                      }
                    ],
                    "comments": [

                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{videoable_type}/{videoable_id}/videos/get_token": {
      "post": {
        "summary": "Get token for uploading video to Sproutvideo",
        "tags": [
          "Videos"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "videoable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "videoable_type",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "video": {
                  "type": "object",
                  "properties": {
                    "videoable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "videoable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "video_link": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "video"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "video": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "length": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "videoable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "videoable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "video_link": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "draft",
                        "processing",
                        "ready",
                        "failed"
                      ]
                    }
                  }
                }
              },
              "required": [
                "video"
              ]
            },
            "examples": {
              "application/json": {
                "video": {
                  "id": 9,
                  "title": "",
                  "length": 0,
                  "organization_id": 666,
                  "user_id": 679,
                  "videoable_type": "Task",
                  "videoable_id": 47,
                  "created_at": "April 15, 2018 18:31",
                  "updated_at": "April 15, 2018 18:31",
                  "video_link": "",
                  "status": "draft",
                  "sproutvideo_id": null,
                  "token": "1993f4278df6f323cd6d05c877e6a046",
                  "embed_code": null,
                  "videoable": {
                    "id": 47,
                    "action_type": "reading",
                    "description": "Quis est placeat non vel perferendis. Aut ut provident. Tenetur vitae error eos. Natus dolor delectus voluptas.",
                    "lesson_id": 82,
                    "user_id": 682,
                    "created_at": "April 15, 2018 18:31",
                    "updated_at": "April 15, 2018 18:31",
                    "attachments": [

                    ],
                    "videos": [
                      {
                      },
                      {
                      }
                    ],
                    "comments": [

                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{videoable_type}/{videoable_id}/videos/{id}": {
      "put": {
        "summary": "Update Video",
        "tags": [
          "Videos"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "videoable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "videoable_type",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "video": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "video"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "video": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "video"
              ]
            },
            "examples": {
              "application/json": {
                "video": {
                  "id": 12,
                  "title": "Treutel-Hirthe",
                  "length": 3861,
                  "organization_id": 681,
                  "user_id": 693,
                  "videoable_type": "Task",
                  "videoable_id": 50,
                  "created_at": "April 15, 2018 18:32",
                  "updated_at": "April 15, 2018 18:32",
                  "video_link": "https://youtu.be/BL50xRTnHTQ",
                  "status": "ready",
                  "videoable": {
                    "id": 50,
                    "action_type": "reading",
                    "description": "Quis est placeat non vel perferendis. Aut ut provident. Tenetur vitae error eos. Natus dolor delectus voluptas.",
                    "lesson_id": 85,
                    "user_id": 696,
                    "created_at": "April 15, 2018 18:31",
                    "updated_at": "April 15, 2018 18:31",
                    "attachments": [

                    ],
                    "videos": [
                      {
                      }
                    ],
                    "comments": [

                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Video with 'id'=0 [WHERE \"videos\".\"videoable_id\" = $1 AND \"videos\".\"videoable_type\" = $2]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Video",
        "tags": [
          "Videos"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "videoable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "videoable_type",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Video account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Video with 'id'=0 [WHERE \"videos\".\"videoable_id\" = $1 AND \"videos\".\"videoable_type\" = $2]"
                ]
              }
            }
          }
        }
      }
    }
  }
}