{
  "swagger": "2.0",
  "info": {
    "title": "API V1",
    "version": "v1"
  },
  "paths": {
    "/api/v1/{notifiable_type}/{notifiable_id}/activities": {
      "get": {
        "summary": "Activities",
        "tags": [
          "Activities"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "notifiable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "notifiable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "User",
              "Group"
            ]
          },
          {
            "name": "flagged",
            "in": "query",
            "type": "boolean",
            "required": false
          },
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "pending",
              "sent",
              "read"
            ],
            "description": "Filter activities by status"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "Filter activities by person who created it"
          },
          {
            "name": "lesson_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "Filter activities by lesson"
          },
          {
            "name": "course_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "Filter activities by course"
          },
          {
            "name": "sort_field",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "created_at",
              "flagged",
              "status"
            ],
            "description": "field for sorting"
          },
          {
            "name": "sort_flag",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "ASC",
              "DESC"
            ],
            "description": "flag for sorting"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "activities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "eventable_type": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "eventable_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "notifiable_type": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "notifiable_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "message": {
                        "type": "jsonb"
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "pending",
                          "sent",
                          "read"
                        ]
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "task_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "lesson_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "course_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "group_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "organization_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "flagged": {
                        "type": "boolean",
                        "x-nullable": true
                      },
                      "teachers": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "object",
                          "properties": {
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "activities"
              ]
            },
            "examples": {
              "application/json": {
                "activities": [

                ],
                "meta": {
                  "total_pages": 0,
                  "total_count": 0,
                  "size": 0,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{notifiable_type}/{notifiable_id}/activities/{id}": {
      "put": {
        "summary": "Update status of Activity",
        "tags": [
          "Activities"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "notifiable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "notifiable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "User",
              "Group"
            ]
          },
          {
            "name": "flagged",
            "in": "query",
            "type": "boolean",
            "required": false
          },
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "pending",
              "sent",
              "read"
            ],
            "description": "Filter activities by status"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "Filter activities by person who created it"
          },
          {
            "name": "lesson_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "Filter activities by lesson"
          },
          {
            "name": "course_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "Filter activities by course"
          },
          {
            "name": "sort_field",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "created_at",
              "flagged",
              "status"
            ],
            "description": "field for sorting"
          },
          {
            "name": "sort_flag",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "ASC",
              "DESC"
            ],
            "description": "flag for sorting"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "activity": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "pending",
                        "sent",
                        "read"
                      ]
                    },
                    "flagged": {
                      "type": "boolean",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "activity"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "activity": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "pending",
                        "sent",
                        "read"
                      ]
                    },
                    "flagged": {
                      "type": "boolean",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "activity"
              ]
            },
            "examples": {
              "application/json": {
                "activity": {
                  "id": 7,
                  "eventable_type": "Comment",
                  "eventable_id": 4,
                  "notifiable_type": "User",
                  "notifiable_id": 17,
                  "message": {
                    "plain_text": "Asperiores quo perferendis eos quasi voluptatibus.",
                    "teacher_ids": [
                      17
                    ]
                  },
                  "status": "pending",
                  "created_at": "2018-08-02T11:10:45.000+00:00",
                  "updated_at": "2018-08-02T11:10:45.000+00:00",
                  "task_id": 4,
                  "lesson_id": 4,
                  "course_id": 4,
                  "group_id": 7,
                  "organization_id": 16,
                  "user_id": 18,
                  "flagged": false,
                  "teachers": [
                    {
                      "id": 17,
                      "first_name": "Kaela Abernathy",
                      "last_name": "Katarina MacGyver",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 65,
                      "state_id": 33,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "2018-08-02T11:10:45.000+00:00",
                      "updated_at": "2018-08-02T11:10:45.000+00:00",
                      "email": "thad.ward@brown.info",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "enable_email_notifications": true,
                      "email_notifications": {
                      },
                      "organization_ids": [
                        16
                      ],
                      "roles": null,
                      "participated_group_ids": [

                      ],
                      "organization_settings": {
                        "id": 16,
                        "user_id": 17,
                        "organization_id": 16,
                        "role": "teacher",
                        "created_at": "2018-08-02T11:10:45.000+00:00",
                        "updated_at": "2018-08-02T11:10:45.000+00:00",
                        "status": "active",
                        "exclude_students_ids": [

                        ],
                        "files_controll_enabled": true,
                        "messanger_access_enabled": true,
                        "activity_settings": null
                      }
                    }
                  ],
                  "eventable": {
                    "id": 4,
                    "commentable_id": 8,
                    "commentable_type": "Group",
                    "title": "Non beatae adipisci voluptatibus.",
                    "body": "Ex expedita cupiditate. Recusandae doloribus est distinctio. Est qui mollitia. Nostrum eum porro nesciunt voluptatem. Enim ducimus in sed quaerat in.",
                    "user_id": 21,
                    "root_id": 0,
                    "main_root_id": 4,
                    "created_at": "2018-08-02T11:10:45.000+00:00",
                    "updated_at": "2018-08-02T11:10:45.000+00:00",
                    "tree_path": [
                      "4"
                    ],
                    "user": {
                      "id": 21,
                      "first_name": "Kaela Abernathy",
                      "last_name": "Katarina MacGyver",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 79,
                      "state_id": 40,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "2018-08-02T11:10:45.000+00:00",
                      "updated_at": "2018-08-02T11:10:45.000+00:00",
                      "email": "jayson.walsh@franecki.net",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "enable_email_notifications": true,
                      "email_notifications": {
                      },
                      "organization_ids": [
                        20
                      ],
                      "roles": null,
                      "participated_group_ids": [

                      ],
                      "organization_settings": null
                    }
                  },
                  "notifiable": {
                    "id": 17,
                    "first_name": "Kaela Abernathy",
                    "last_name": "Katarina MacGyver",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 65,
                    "state_id": 33,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "2018-08-02T11:10:45.000+00:00",
                    "updated_at": "2018-08-02T11:10:45.000+00:00",
                    "email": "thad.ward@brown.info",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "enable_email_notifications": true,
                    "email_notifications": {
                    },
                    "organization_ids": [
                      16
                    ],
                    "roles": null,
                    "participated_group_ids": [

                    ],
                    "organization_settings": {
                      "id": 16,
                      "user_id": 17,
                      "organization_id": 16,
                      "role": "teacher",
                      "created_at": "2018-08-02T11:10:45.000+00:00",
                      "updated_at": "2018-08-02T11:10:45.000+00:00",
                      "status": "active",
                      "exclude_students_ids": [

                      ],
                      "files_controll_enabled": true,
                      "messanger_access_enabled": true,
                      "activity_settings": null
                    }
                  },
                  "lesson": {
                    "id": 4,
                    "title": "Runolfsdottir Inc",
                    "description": "facilitate viral technologies",
                    "status": "active",
                    "user_id": 20,
                    "course_id": 4,
                    "created_at": "2018-08-02T11:10:45.000+00:00",
                    "updated_at": "2018-08-02T11:10:45.000+00:00",
                    "course_settings": null,
                    "lesson_user_for_current_student": [

                    ]
                  },
                  "task": {
                    "id": 4,
                    "action_type": "reading",
                    "description": "Repellendus sit eos repudiandae ipsum cupiditate eveniet. Temporibus asperiores quae. Nostrum ea et labore beatae nobis repudiandae. Consequatur et voluptas repellat aliquid veritatis sunt.",
                    "lesson_id": 4,
                    "user_id": 17,
                    "created_at": "2018-08-02T11:10:45.000+00:00",
                    "updated_at": "2018-08-02T11:10:45.000+00:00",
                    "task_user": null
                  },
                  "course": {
                    "id": 4,
                    "title": "Stamm-Deckow",
                    "description": "iterate robust metrics",
                    "image": {
                      "url": "/uploads/image.jpeg"
                    },
                    "user_id": 19,
                    "organization_id": 0,
                    "created_at": "2018-08-02T11:10:45.000+00:00",
                    "updated_at": "2018-08-02T11:10:45.000+00:00",
                    "lessons_count": 1,
                    "banner_image": {
                      "url": "/uploads/banner_image.jpeg"
                    },
                    "group_ids": [
                      7
                    ],
                    "organization_ids": [
                      16
                    ],
                    "active_user_ids": null,
                    "course_users_state": null,
                    "course_for_current_student": null
                  },
                  "group": {
                    "id": 7,
                    "organization_id": 16,
                    "title": "Walter-Hartmann",
                    "description": "strategize seamless channels",
                    "status": "active",
                    "user_limit": 10,
                    "visibility": "public",
                    "created_at": "2018-08-02T11:10:45.000+00:00",
                    "updated_at": "2018-08-02T11:10:45.000+00:00",
                    "count_participants": 1,
                    "user_id": 0,
                    "noticeboard_settings": {
                      "student_can_post": true,
                      "noticeboard_enabled": true,
                      "student_can_comment": true
                    },
                    "user_ids": [
                      18
                    ],
                    "completed": 0,
                    "incomplete": 1,
                    "participated": null
                  },
                  "user": {
                    "id": 18,
                    "first_name": "Kaela Abernathy",
                    "last_name": "Katarina MacGyver",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 67,
                    "state_id": 34,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "2018-08-02T11:10:45.000+00:00",
                    "updated_at": "2018-08-02T11:10:45.000+00:00",
                    "email": "christop@hettinger.biz",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "enable_email_notifications": true,
                    "email_notifications": {
                    },
                    "organization_ids": [
                      16
                    ],
                    "roles": null,
                    "participated_group_ids": [
                      7
                    ],
                    "organization_settings": {
                      "id": 17,
                      "user_id": 18,
                      "organization_id": 16,
                      "role": "student",
                      "created_at": "2018-08-02T11:10:45.000+00:00",
                      "updated_at": "2018-08-02T11:10:45.000+00:00",
                      "status": "active",
                      "exclude_students_ids": [

                      ],
                      "files_controll_enabled": true,
                      "messanger_access_enabled": true,
                      "activity_settings": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Activity with 'id'=0 [WHERE \"activities\".\"notifiable_id\" = $1 AND \"activities\".\"notifiable_type\" = $2]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Activity",
        "tags": [
          "Activities"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "notifiable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "notifiable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "User",
              "Group"
            ]
          },
          {
            "name": "flagged",
            "in": "query",
            "type": "boolean",
            "required": false
          },
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "pending",
              "sent",
              "read"
            ],
            "description": "Filter activities by status"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "Filter activities by person who created it"
          },
          {
            "name": "lesson_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "Filter activities by lesson"
          },
          {
            "name": "course_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "Filter activities by course"
          },
          {
            "name": "sort_field",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "created_at",
              "flagged",
              "status"
            ],
            "description": "field for sorting"
          },
          {
            "name": "sort_flag",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "ASC",
              "DESC"
            ],
            "description": "flag for sorting"
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Activity account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Activity with 'id'=0 [WHERE \"activities\".\"notifiable_id\" = $1 AND \"activities\".\"notifiable_type\" = $2]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses": {
      "get": {
        "summary": "Get Courses inside organization",
        "tags": [
          "Admin - Course"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "get courses from specific group"
          },
          {
            "name": "term",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "term for searching by [:title, :description]"
          },
          {
            "name": "sort_field",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "title",
              "created_at",
              "lessons_count",
              "active_user_ids"
            ],
            "description": "field for sorting"
          },
          {
            "name": "sort_flag",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "ASC",
              "DESC"
            ],
            "description": "flag for sorting"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "courses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "image": {
                        "type": "object",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "organization_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "lessons_count": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "banner_image": {
                        "type": "object",
                        "x-nullable": true
                      },
                      "group_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "integer",
                          "properties": {
                          }
                        }
                      },
                      "organization_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "integer",
                          "properties": {
                          }
                        }
                      },
                      "active_user_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "integer",
                          "properties": {
                          }
                        }
                      },
                      "course_users_state": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "string",
                          "properties": {
                          }
                        }
                      },
                      "course_for_current_student": {
                        "description": "information about user's association to this course",
                        "type": "object",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "courses"
              ]
            },
            "examples": {
              "application/json": {
                "courses": [

                ],
                "meta": {
                  "total_pages": 0,
                  "total_count": 0,
                  "size": 0,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Course",
        "tags": [
          "Admin - Course"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "image": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "image": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "lessons_count": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "banner_image": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "organization_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "active_user_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "course_users_state": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "string",
                        "properties": {
                        }
                      }
                    },
                    "course_for_current_student": {
                      "description": "information about user's association to this course",
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course"
              ]
            },
            "examples": {
              "application/json": {
                "course": {
                  "id": 20,
                  "title": "Stamm-Deckow",
                  "description": "iterate robust metrics",
                  "image": {
                    "url": null
                  },
                  "user_id": 77,
                  "organization_id": 74,
                  "created_at": "2018-08-02T11:10:54.000+00:00",
                  "updated_at": "2018-08-02T11:10:54.000+00:00",
                  "lessons_count": 0,
                  "banner_image": {
                    "url": null
                  },
                  "group_ids": [

                  ],
                  "organization_ids": [
                    74
                  ],
                  "active_user_ids": null,
                  "course_users_state": null,
                  "course_for_current_student": null
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses/{id}": {
      "get": {
        "summary": "Get Course Details",
        "tags": [
          "Admin - Course"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "image": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "lessons_count": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "banner_image": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "organization_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "active_user_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "course_users_state": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "string",
                        "properties": {
                        }
                      }
                    },
                    "course_for_current_student": {
                      "description": "information about user's association to this course",
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course"
              ]
            },
            "examples": {
              "application/json": {
                "course": {
                  "id": 15,
                  "title": "Stamm-Deckow",
                  "description": "iterate robust metrics",
                  "image": {
                    "url": "/uploads/image.jpeg"
                  },
                  "user_id": 69,
                  "organization_id": 0,
                  "created_at": "2018-08-02T11:10:53.000+00:00",
                  "updated_at": "2018-08-02T11:10:53.000+00:00",
                  "lessons_count": 0,
                  "banner_image": {
                    "url": "/uploads/banner_image.jpeg"
                  },
                  "group_ids": [

                  ],
                  "organization_ids": [
                    66
                  ],
                  "active_user_ids": null,
                  "course_users_state": null,
                  "course_for_current_student": null
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Course with 'id'=0 [WHERE (\"courses\".\"organization_id\" = $1 OR \"courses\".\"id\" IN (SELECT \"addon_courses\".\"course_id\" FROM \"addon_courses\" INNER JOIN addon_organizations as ao ON\n        (ao.addon_id = addon_courses.addon_id and ao.organization_id = 72)))]"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Course Details",
        "tags": [
          "Admin - Course"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "image": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "image": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "lesson_users": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "course"
              ]
            },
            "examples": {
              "application/json": {
                "course": {
                  "id": 23,
                  "title": "Stamm-Deckow",
                  "description": "iterate robust metrics",
                  "image": {
                    "url": "/uploads/image.jpeg"
                  },
                  "user_id": 86,
                  "organization_id": 0,
                  "created_at": "2018-08-02T11:10:55.000+00:00",
                  "updated_at": "2018-08-02T11:10:55.000+00:00",
                  "lessons_count": 0,
                  "banner_image": {
                    "url": "/uploads/banner_image.jpeg"
                  },
                  "group_ids": [

                  ],
                  "organization_ids": [
                    81
                  ],
                  "active_user_ids": null,
                  "course_users_state": null,
                  "course_for_current_student": null
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Course with 'id'=0 [WHERE (\"courses\".\"organization_id\" = $1 OR \"courses\".\"id\" IN (SELECT \"addon_courses\".\"course_id\" FROM \"addon_courses\" INNER JOIN addon_organizations as ao ON\n        (ao.addon_id = addon_courses.addon_id and ao.organization_id = 88)))]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Course",
        "tags": [
          "Admin - Course"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Course account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Course with 'id'=27 [WHERE \"courses\".\"organization_id\" = $1]"
                ]
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Course with 'id'=0 [WHERE (\"courses\".\"organization_id\" = $1 OR \"courses\".\"id\" IN (SELECT \"addon_courses\".\"course_id\" FROM \"addon_courses\" INNER JOIN addon_organizations as ao ON\n        (ao.addon_id = addon_courses.addon_id and ao.organization_id = 96)))]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses/{course_id}/lessons": {
      "get": {
        "summary": "Lessons for course",
        "tags": [
          "Admin - Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "lessons": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "active",
                          "pause"
                        ]
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "course_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "course_settings": {
                        "description": "course settings for current group",
                        "type": "object",
                        "x-nullable": true
                      },
                      "lesson_user_for_current_student": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "object",
                          "properties": {
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "lessons"
              ]
            },
            "examples": {
              "application/json": {
                "lessons": [
                  {
                    "id": 12,
                    "title": "Runolfsdottir Inc",
                    "description": "facilitate viral technologies",
                    "status": "active",
                    "user_id": 106,
                    "course_id": 31,
                    "created_at": "2018-08-02T11:10:57.000+00:00",
                    "updated_at": "2018-08-02T11:10:57.000+00:00",
                    "course_settings": null,
                    "lesson_user_for_current_student": [

                    ],
                    "tasks": [

                    ]
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "total_count": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add lesson to course",
        "tags": [
          "Admin - Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "lesson": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "lesson"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "lesson": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "course_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "course_settings": {
                      "description": "course settings for current group",
                      "type": "object",
                      "x-nullable": true
                    },
                    "lesson_user_for_current_student": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "lesson"
              ]
            },
            "examples": {
              "application/json": {
                "lesson": {
                  "id": 16,
                  "title": "Runolfsdottir Inc",
                  "description": "facilitate viral technologies",
                  "status": "active",
                  "user_id": 114,
                  "course_id": 34,
                  "created_at": "2018-08-02T11:10:58.000+00:00",
                  "updated_at": "2018-08-02T11:10:58.000+00:00",
                  "course_settings": null,
                  "lesson_user_for_current_student": [

                  ],
                  "tasks": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses/{course_id}/lessons/{id}": {
      "get": {
        "summary": "Get info about lesson at specific course",
        "tags": [
          "Admin - Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "included_lesson_users_for_current_student",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "lesson_users for current user and courses will be included inside course instance in meta section"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "lesson": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "course_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "course_settings": {
                      "description": "course settings for current group",
                      "type": "object",
                      "x-nullable": true
                    },
                    "lesson_user_for_current_student": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "lesson"
              ]
            },
            "examples": {
              "application/json": {
                "lesson": {
                  "id": 19,
                  "title": "Runolfsdottir Inc",
                  "description": "facilitate viral technologies",
                  "status": "active",
                  "user_id": 128,
                  "course_id": 38,
                  "created_at": "2018-08-02T11:10:59.000+00:00",
                  "updated_at": "2018-08-02T11:10:59.000+00:00",
                  "course_settings": null,
                  "lesson_user_for_current_student": [

                  ],
                  "tasks": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Lesson with 'id'=0 [WHERE \"lessons\".\"course_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update attributes of lesson",
        "tags": [
          "Admin - Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "lesson": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "lesson"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "lesson": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    }
                  }
                }
              },
              "required": [
                "lesson"
              ]
            },
            "examples": {
              "application/json": {
                "lesson": {
                  "id": 23,
                  "title": "Runolfsdottir Inc",
                  "description": "facilitate viral technologies",
                  "status": "active",
                  "user_id": 141,
                  "course_id": 42,
                  "created_at": "2018-08-02T11:11:00.000+00:00",
                  "updated_at": "2018-08-02T11:11:00.000+00:00",
                  "course_settings": null,
                  "lesson_user_for_current_student": [

                  ],
                  "tasks": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Lesson with 'id'=0 [WHERE \"lessons\".\"course_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete lesson",
        "tags": [
          "Admin - Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Lesson account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Lesson with 'id'=0 [WHERE \"lessons\".\"course_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses/{course_id}/lessons/{lesson_id}/tasks": {
      "get": {
        "summary": "List of Tasks",
        "tags": [
          "Admin - Tasks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "lesson_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "tasks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "action_type": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "reading",
                          "question",
                          "watch"
                        ]
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "lesson_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "task_user": {
                        "description": "task_user - association for user/task/group",
                        "type": "object",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "tasks"
              ]
            },
            "examples": {
              "application/json": {
                "tasks": [
                  {
                    "id": 12,
                    "action_type": "reading",
                    "description": "Repellendus sit eos repudiandae ipsum cupiditate eveniet. Temporibus asperiores quae. Nostrum ea et labore beatae nobis repudiandae. Consequatur et voluptas repellat aliquid veritatis sunt.",
                    "lesson_id": 31,
                    "user_id": 167,
                    "created_at": "2018-08-02T11:11:02.000+00:00",
                    "updated_at": "2018-08-02T11:11:02.000+00:00",
                    "task_user": null,
                    "attachments": [

                    ],
                    "videos": [

                    ]
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "total_count": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Task",
        "tags": [
          "Admin - Tasks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "lesson_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "properties": {
                    "action_type": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "reading",
                        "question",
                        "watch"
                      ]
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "attachments_attributes": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "description": {
                            "type": "text",
                            "x-nullable": true
                          },
                          "data": {
                            "type": "object",
                            "x-nullable": true
                          },
                          "title": {
                            "type": "string",
                            "x-nullable": true
                          },
                          "data_key": {
                            "type": "string",
                            "x-nullable": true
                          }
                        }
                      }
                    },
                    "videos_attributes": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "video_link": {
                            "type": "string",
                            "x-nullable": true
                          },
                          "title": {
                            "type": "string",
                            "x-nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "task"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "action_type": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "reading",
                        "question",
                        "watch"
                      ]
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "lesson_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "task_user": {
                      "description": "task_user - association for user/task/group",
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "task"
              ]
            },
            "examples": {
              "application/json": {
                "task": {
                  "id": 20,
                  "action_type": "reading",
                  "description": "Repellendus sit eos repudiandae ipsum cupiditate eveniet. Temporibus asperiores quae. Nostrum ea et labore beatae nobis repudiandae. Consequatur et voluptas repellat aliquid veritatis sunt.",
                  "lesson_id": 38,
                  "user_id": 190,
                  "created_at": "2018-08-02T11:11:05.000+00:00",
                  "updated_at": "2018-08-02T11:11:05.000+00:00",
                  "task_user": null,
                  "attachments": [

                  ],
                  "videos": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/courses/{course_id}/lessons/{lesson_id}/tasks/{id}": {
      "get": {
        "summary": "Details of Task",
        "tags": [
          "Admin - Tasks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "lesson_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "action_type": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "reading",
                        "question",
                        "watch"
                      ]
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "lesson_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "task_user": {
                      "description": "task_user - association for user/task/group",
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "task"
              ]
            },
            "examples": {
              "application/json": {
                "task": {
                  "id": 15,
                  "action_type": "reading",
                  "description": "Repellendus sit eos repudiandae ipsum cupiditate eveniet. Temporibus asperiores quae. Nostrum ea et labore beatae nobis repudiandae. Consequatur et voluptas repellat aliquid veritatis sunt.",
                  "lesson_id": 34,
                  "user_id": 177,
                  "created_at": "2018-08-02T11:11:03.000+00:00",
                  "updated_at": "2018-08-02T11:11:03.000+00:00",
                  "task_user": null,
                  "attachments": [

                  ],
                  "videos": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Task with 'id'=0 [WHERE \"tasks\".\"lesson_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update details of Task",
        "tags": [
          "Admin - Tasks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "lesson_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "properties": {
                    "action_type": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "reading",
                        "question",
                        "watch"
                      ]
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "attachments_attributes": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "description": {
                            "type": "text",
                            "x-nullable": true
                          },
                          "data": {
                            "type": "object",
                            "x-nullable": true
                          },
                          "title": {
                            "type": "string",
                            "x-nullable": true
                          },
                          "data_key": {
                            "type": "string",
                            "x-nullable": true
                          }
                        }
                      }
                    },
                    "videos_attributes": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "video_link": {
                            "type": "string",
                            "x-nullable": true
                          },
                          "title": {
                            "type": "string",
                            "x-nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "task"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "properties": {
                    "action_type": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "reading",
                        "question",
                        "watch"
                      ]
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "task"
              ]
            },
            "examples": {
              "application/json": {
                "task": {
                  "id": 23,
                  "action_type": "reading",
                  "description": "Repellendus sit eos repudiandae ipsum cupiditate eveniet. Temporibus asperiores quae. Nostrum ea et labore beatae nobis repudiandae. Consequatur et voluptas repellat aliquid veritatis sunt.",
                  "lesson_id": 42,
                  "user_id": 203,
                  "created_at": "2018-08-02T11:11:06.000+00:00",
                  "updated_at": "2018-08-02T11:11:06.000+00:00",
                  "task_user": null,
                  "attachments": [

                  ],
                  "videos": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Task with 'id'=0 [WHERE \"tasks\".\"lesson_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Task",
        "tags": [
          "Admin - Tasks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "lesson_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Task account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Task with 'id'=0 [WHERE \"tasks\".\"lesson_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{attachmentable_type}/{attachmentable_id}/attachments": {
      "get": {
        "summary": "Attachments",
        "tags": [
          "Attachments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "attachmentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "attachmentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Task",
              "TaskUser",
              "Course",
              "Group",
              "Lesson",
              "Organization",
              "Chat",
              "ChatMessage"
            ]
          },
          {
            "name": "term",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "term for searching by [:file_name, :title, :description]"
          },
          {
            "name": "sort_field",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "file_name",
              "title",
              "created_at"
            ],
            "description": "field for sorting"
          },
          {
            "name": "sort_flag",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "ASC",
              "DESC"
            ],
            "description": "flag for sorting"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "attachments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "data": {
                        "type": "object",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "organization_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "attachmentable_type": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "attachmentable_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "file_name": {
                        "type": "string",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "attachments"
              ]
            },
            "examples": {
              "application/json": {
                "attachments": [
                  {
                    "id": 1,
                    "title": "Casper Inc",
                    "description": "harness killer methodologies",
                    "data": {
                      "url": "https://s3-eu-central-1.amazonaws.com/equipengine-api/uploads/attachment/data/1/data.jpeg?X-Amz-Expires=600&X-Amz-Date=20180802T111110Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAINPATHRPIQWJVTJA/20180802/eu-central-1/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=91cd8c89fc37e7f62561a087468695b815cd608b81e73dd79005818a54e5ea48"
                    },
                    "user_id": 232,
                    "organization_id": 220,
                    "created_at": "2018-08-02T11:11:08.000+00:00",
                    "updated_at": "2018-08-02T11:11:08.000+00:00",
                    "attachmentable_type": "Task",
                    "attachmentable_id": 31,
                    "file_name": null,
                    "attachmentable": {
                      "id": 31,
                      "action_type": "question",
                      "description": "Repellendus sit eos repudiandae ipsum cupiditate eveniet. Temporibus asperiores quae. Nostrum ea et labore beatae nobis repudiandae. Consequatur et voluptas repellat aliquid veritatis sunt.",
                      "lesson_id": 51,
                      "user_id": 235,
                      "created_at": "2018-08-02T11:11:08.000+00:00",
                      "updated_at": "2018-08-02T11:11:08.000+00:00",
                      "task_user": null,
                      "attachments": [
                        {
                        }
                      ],
                      "videos": [

                      ]
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "total_count": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Attachment",
        "tags": [
          "Attachments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "attachmentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "attachmentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Task",
              "TaskUser",
              "Course",
              "Group",
              "Lesson",
              "Organization",
              "Chat",
              "ChatMessage"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "attachment": {
                  "type": "object",
                  "properties": {
                    "attachmentable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "attachmentable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "data": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "data_key": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "attachment"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "attachment": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "data": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "attachmentable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "attachmentable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "file_name": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "attachment"
              ]
            },
            "examples": {
              "application/json": {
                "attachment": {
                  "id": 5,
                  "title": "",
                  "description": null,
                  "data": {
                    "url": "https://s3-eu-central-1.amazonaws.com/equipengine-api/uploads/attachment/data/5/data.jpeg?X-Amz-Expires=600&X-Amz-Date=20180802T111114Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAINPATHRPIQWJVTJA/20180802/eu-central-1/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=d6150232dbbceaa314eca6382bdb29cf98af9acc816aff571a51d485ee7061a6"
                  },
                  "user_id": 245,
                  "organization_id": 232,
                  "created_at": "2018-08-02T11:11:13.000+00:00",
                  "updated_at": "2018-08-02T11:11:13.000+00:00",
                  "attachmentable_type": "Task",
                  "attachmentable_id": 34,
                  "file_name": null,
                  "attachmentable": {
                    "id": 34,
                    "action_type": "question",
                    "description": "Repellendus sit eos repudiandae ipsum cupiditate eveniet. Temporibus asperiores quae. Nostrum ea et labore beatae nobis repudiandae. Consequatur et voluptas repellat aliquid veritatis sunt.",
                    "lesson_id": 54,
                    "user_id": 248,
                    "created_at": "2018-08-02T11:11:12.000+00:00",
                    "updated_at": "2018-08-02T11:11:12.000+00:00",
                    "task_user": null,
                    "attachments": [
                      {
                      },
                      {
                      }
                    ],
                    "videos": [

                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated"
          }
        }
      }
    },
    "/api/v1/{attachmentable_type}/{attachmentable_id}/attachments/{id}": {
      "put": {
        "summary": "Update Attachment",
        "tags": [
          "Attachments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "attachmentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "attachmentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Task",
              "TaskUser",
              "Course",
              "Group",
              "Lesson",
              "Organization",
              "Chat",
              "ChatMessage"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "attachment": {
                  "type": "object",
                  "properties": {
                    "attachmentable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "attachmentable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "data": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "data_key": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "attachment"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "attachment": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "data": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "attachmentable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "attachmentable_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "attachment"
              ]
            },
            "examples": {
              "application/json": {
                "attachment": {
                  "id": 7,
                  "title": "Casper Inc",
                  "description": "harness killer methodologies",
                  "data": {
                    "url": "https://s3-eu-central-1.amazonaws.com/equipengine-api/uploads/attachment/data/7/data.jpeg?X-Amz-Expires=600&X-Amz-Date=20180802T111117Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAINPATHRPIQWJVTJA/20180802/eu-central-1/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=19518486e1ec29a1ba0734ddc4640df48bd77afac1d5367afdfbda2794a90721"
                  },
                  "user_id": 254,
                  "organization_id": 243,
                  "created_at": "2018-08-02T11:11:16.000+00:00",
                  "updated_at": "2018-08-02T11:11:17.000+00:00",
                  "attachmentable_type": "Organization",
                  "attachmentable_id": 249,
                  "file_name": null,
                  "attachmentable": {
                    "title": "Howell, Dach and Hoppe",
                    "subdomain": "dibbert249",
                    "domain": "ipswift.org",
                    "description": "Tremblay, Schowalter and Howe",
                    "logo": {
                      "url": null,
                      "display": {
                        "url": null
                      }
                    },
                    "address": "Treutel-Fay",
                    "zip_code": "Larson Inc",
                    "website": "ankundingmorar.io",
                    "email": "sasha@rosenbaum.com",
                    "phone": "Ledner LLC",
                    "language": "ru",
                    "display_settings": {
                      "display_name": "Koss-MacGyver",
                      "display_type": "display_name"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Attachment with 'id'=0 [WHERE \"attachments\".\"attachmentable_id\" = $1 AND \"attachments\".\"attachmentable_type\" = $2]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Attachment",
        "tags": [
          "Attachments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "attachmentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "attachmentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Task",
              "TaskUser",
              "Course",
              "Group",
              "Lesson",
              "Organization",
              "Chat",
              "ChatMessage"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Attachment account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Attachment with 'id'=0 [WHERE \"attachments\".\"attachmentable_id\" = $1 AND \"attachments\".\"attachmentable_type\" = $2]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/chats/{chat_id}/chat_messages": {
      "get": {
        "summary": "List of Chat Messages",
        "tags": [
          "ChatMessages"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "chat_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "chat_messages": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "chat_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "message": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "required": [
                "chat_messages"
              ]
            },
            "examples": {
              "application/json": {
                "chat_messages": [
                  {
                    "id": 1,
                    "user_id": 290,
                    "chat_id": 1,
                    "message": "Dolores incidunt natus et. Libero vel et est autem. Dolorum consequatur cumque est nostrum. Quidem possimus qui alias sint consectetur qui culpa. Quam laudantium esse fugiat eos minima.",
                    "created_at": "2018-08-02T11:11:24.000+00:00",
                    "updated_at": "2018-08-02T11:11:24.000+00:00",
                    "attachments": [
                      {
                        "id": 15,
                        "title": "Casper Inc",
                        "description": "harness killer methodologies",
                        "data": {
                          "url": "https://s3-eu-central-1.amazonaws.com/equipengine-api/uploads/attachment/data/15/data.jpeg?X-Amz-Expires=600&X-Amz-Date=20180802T111125Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAINPATHRPIQWJVTJA/20180802/eu-central-1/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=99f6a4f6628bac9dadc22a6e538f1b2b4ad8e5dc8f8b5d2da76295739f21c1c1"
                        },
                        "user_id": 289,
                        "organization_id": 278,
                        "created_at": "2018-08-02T11:11:24.000+00:00",
                        "updated_at": "2018-08-02T11:11:24.000+00:00",
                        "attachmentable_type": "ChatMessage",
                        "attachmentable_id": 1,
                        "file_name": null
                      }
                    ]
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "total_count": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Chat Message",
        "tags": [
          "ChatMessages"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "chat_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "chat_message": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "to_user_id": {
                      "description": "recepient of message, if chat is not determinated yet",
                      "type": "integer"
                    },
                    "attachment_id": {
                      "description": "attachment from chat, that uploaded before and should to be attached to current message",
                      "type": "integer"
                    }
                  }
                }
              },
              "required": [
                "chat_message"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "chat_message": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "chat_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "message": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    }
                  }
                }
              },
              "required": [
                "chat_message"
              ]
            },
            "examples": {
              "application/json": {
                "chat_message": {
                  "id": 5,
                  "user_id": 296,
                  "chat_id": 4,
                  "message": "Dolores incidunt natus et. Libero vel et est autem. Dolorum consequatur cumque est nostrum. Quidem possimus qui alias sint consectetur qui culpa. Quam laudantium esse fugiat eos minima.",
                  "created_at": "2018-08-02T11:11:27.000+00:00",
                  "updated_at": "2018-08-02T11:11:27.000+00:00",
                  "attachments": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/chats/{chat_id}/chat_messages/{id}": {
      "put": {
        "summary": "Update details of Chat Message",
        "tags": [
          "ChatMessages"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "chat_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "chat_message": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "text",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "chat_message"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "chat_message": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "text",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "chat_message"
              ]
            },
            "examples": {
              "application/json": {
                "chat_message": {
                  "id": 8,
                  "user_id": 305,
                  "chat_id": 8,
                  "message": "Dolores incidunt natus et. Libero vel et est autem. Dolorum consequatur cumque est nostrum. Quidem possimus qui alias sint consectetur qui culpa. Quam laudantium esse fugiat eos minima.",
                  "created_at": "2018-08-02T11:11:29.000+00:00",
                  "updated_at": "2018-08-02T11:11:29.000+00:00",
                  "attachments": [
                    {
                      "id": 21,
                      "title": "Casper Inc",
                      "description": "harness killer methodologies",
                      "data": {
                        "url": "https://s3-eu-central-1.amazonaws.com/equipengine-api/uploads/attachment/data/21/data.jpeg?X-Amz-Expires=600&X-Amz-Date=20180802T111130Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAINPATHRPIQWJVTJA/20180802/eu-central-1/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=b671d4c0d8e0fa548cd23e79b9e64df0b28da8e7cd352445ddee0740b3ad0a81"
                      },
                      "user_id": 304,
                      "organization_id": 292,
                      "created_at": "2018-08-02T11:11:29.000+00:00",
                      "updated_at": "2018-08-02T11:11:29.000+00:00",
                      "attachmentable_type": "ChatMessage",
                      "attachmentable_id": 8,
                      "file_name": null
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find ChatMessage with 'id'=0 [WHERE \"chat_messages\".\"chat_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Chat Message",
        "tags": [
          "ChatMessages"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "chat_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting ChatMessage account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find ChatMessage with 'id'=0 [WHERE \"chat_messages\".\"chat_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/chats/with_opponent/{opponent_id}": {
      "get": {
        "summary": "Get/Create Chat with opponent",
        "tags": [
          "Chats"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "opponent_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "chat": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "chat"
              ]
            },
            "examples": {
              "application/json": {
                "chat": {
                  "id": 18,
                  "title": "",
                  "created_at": "2018-08-02T11:11:35.000+00:00",
                  "updated_at": "2018-08-02T11:11:35.000+00:00",
                  "organization_id": 310,
                  "users": [
                    {
                      "id": 324,
                      "first_name": "Kaela Abernathy",
                      "last_name": "Katarina MacGyver",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 1267,
                      "state_id": 634,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "2018-08-02T11:11:35.000+00:00",
                      "updated_at": "2018-08-02T11:11:35.000+00:00",
                      "email": "jarret@runolfon.name",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "enable_email_notifications": true,
                      "email_notifications": {
                      },
                      "organization_ids": [
                        310
                      ],
                      "roles": null,
                      "participated_group_ids": [

                      ],
                      "organization_settings": {
                        "id": 299,
                        "user_id": 324,
                        "organization_id": 310,
                        "role": "admin",
                        "created_at": "2018-08-02T11:11:35.000+00:00",
                        "updated_at": "2018-08-02T11:11:35.000+00:00",
                        "status": "active",
                        "exclude_students_ids": [

                        ],
                        "files_controll_enabled": true,
                        "messanger_access_enabled": true,
                        "activity_settings": null
                      }
                    },
                    {
                      "id": 323,
                      "first_name": "Kaela Abernathy",
                      "last_name": "Katarina MacGyver",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 1263,
                      "state_id": 632,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "2018-08-02T11:11:35.000+00:00",
                      "updated_at": "2018-08-02T11:11:35.000+00:00",
                      "email": "cooper@bauch.info",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "enable_email_notifications": true,
                      "email_notifications": {
                      },
                      "organization_ids": [
                        310
                      ],
                      "roles": null,
                      "participated_group_ids": [

                      ],
                      "organization_settings": {
                        "id": 298,
                        "user_id": 323,
                        "organization_id": 310,
                        "role": "admin",
                        "created_at": "2018-08-02T11:11:35.000+00:00",
                        "updated_at": "2018-08-02T11:11:35.000+00:00",
                        "status": "active",
                        "exclude_students_ids": [

                        ],
                        "files_controll_enabled": true,
                        "messanger_access_enabled": true,
                        "activity_settings": null
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/chats": {
      "get": {
        "summary": "List of Chats",
        "tags": [
          "Chats"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "chats": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "organization_id": {
                        "type": "integer",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "chats"
              ]
            },
            "examples": {
              "application/json": {
                "chats": [
                  {
                    "id": 21,
                    "title": "Repudiandae asperiores provident dolor adipisci commodi consequatur occaecati sequi.",
                    "created_at": "2018-08-02T11:11:36.000+00:00",
                    "updated_at": "2018-08-02T11:11:36.000+00:00",
                    "organization_id": 313,
                    "users": [

                    ]
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "total_count": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/chats/{id}": {
      "get": {
        "summary": "Details of Chat",
        "tags": [
          "Chats"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "chat": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "chat"
              ]
            },
            "examples": {
              "application/json": {
                "chat": {
                  "id": 24,
                  "title": "Repudiandae asperiores provident dolor adipisci commodi consequatur occaecati sequi.",
                  "created_at": "2018-08-02T11:11:36.000+00:00",
                  "updated_at": "2018-08-02T11:11:36.000+00:00",
                  "organization_id": 316,
                  "users": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Chat with 'id'=0"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update details of Chat",
        "tags": [
          "Chats"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "chat": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "chat"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "chat": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "chat"
              ]
            },
            "examples": {
              "application/json": {
                "chat": {
                  "id": 28,
                  "title": "Repudiandae asperiores provident dolor adipisci commodi consequatur occaecati sequi.",
                  "created_at": "2018-08-02T11:11:37.000+00:00",
                  "updated_at": "2018-08-02T11:11:37.000+00:00",
                  "organization_id": 320,
                  "users": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Chat with 'id'=0"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Chat",
        "tags": [
          "Chats"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Chat account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Chat with 'id'=0"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/cities": {
      "get": {
        "summary": "List of Cities",
        "tags": [
          "Cities"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "cities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "state_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "required": [
                "cities"
              ]
            },
            "examples": {
              "application/json": {
                "cities": [
                  {
                    "id": 1,
                    "name": "Larissachester",
                    "state_id": 679,
                    "created_at": "2018-08-02T11:11:38.000+00:00",
                    "updated_at": "2018-08-02T11:11:38.000+00:00",
                    "state": {
                      "id": 679,
                      "name": "Louisiana",
                      "country_id": 1358,
                      "code": "KY",
                      "created_at": "2018-08-02T11:11:38.000+00:00",
                      "updated_at": "2018-08-02T11:11:38.000+00:00",
                      "country": {
                        "id": 1358,
                        "code": "ER",
                        "name": "Virgin Islands, British",
                        "phonecode": 988
                      }
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "total_count": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cities/{id}": {
      "get": {
        "summary": "Details of City",
        "tags": [
          "Cities"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "city": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    }
                  }
                }
              },
              "required": [
                "city"
              ]
            },
            "examples": {
              "application/json": {
                "city": {
                  "id": 2,
                  "name": "Feeneyland",
                  "state_id": 682,
                  "created_at": "2018-08-02T11:11:38.000+00:00",
                  "updated_at": "2018-08-02T11:11:38.000+00:00",
                  "state": {
                    "id": 682,
                    "name": "Vermont",
                    "country_id": 1364,
                    "code": "KY",
                    "created_at": "2018-08-02T11:11:38.000+00:00",
                    "updated_at": "2018-08-02T11:11:38.000+00:00",
                    "country": {
                      "id": 1364,
                      "code": "ER",
                      "name": "Sweden",
                      "phonecode": 988
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find City with 'id'=0"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{commentable_type}/{commentable_id}/comments": {
      "get": {
        "summary": "List of Comments as tree view by default",
        "tags": [
          "Comments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "commentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "commentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Group",
              "TaskUser",
              "CourseThread"
            ]
          },
          {
            "name": "only_roots",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "returns only root comments"
          },
          {
            "name": "root_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "returns comments under specific comment"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "comments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "commentable_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "commentable_type": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "body": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer"
                      },
                      "root_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "main_root_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "tree_path": {
                        "type": "text",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "comments"
              ]
            },
            "examples": {
              "application/json": {
                "comments": [
                  {
                    "id": 13,
                    "commentable_id": 38,
                    "commentable_type": "Group",
                    "title": "Non beatae adipisci voluptatibus.",
                    "body": "Ex expedita cupiditate. Recusandae doloribus est distinctio. Est qui mollitia. Nostrum eum porro nesciunt voluptatem. Enim ducimus in sed quaerat in.",
                    "user_id": 352,
                    "root_id": 0,
                    "main_root_id": 13,
                    "created_at": "2018-08-02T11:11:38.000+00:00",
                    "updated_at": "2018-08-02T11:11:38.000+00:00",
                    "tree_path": [
                      "13"
                    ],
                    "user": {
                      "id": 352,
                      "first_name": "Kaela Abernathy",
                      "last_name": "Katarina MacGyver",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 1373,
                      "state_id": 687,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "2018-08-02T11:11:38.000+00:00",
                      "updated_at": "2018-08-02T11:11:38.000+00:00",
                      "email": "trey@zemlak.com",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "enable_email_notifications": true,
                      "email_notifications": {
                      },
                      "organization_ids": [
                        332
                      ],
                      "roles": null,
                      "participated_group_ids": [
                        38
                      ],
                      "organization_settings": {
                        "id": 322,
                        "user_id": 352,
                        "organization_id": 332,
                        "role": "student",
                        "created_at": "2018-08-02T11:11:38.000+00:00",
                        "updated_at": "2018-08-02T11:11:38.000+00:00",
                        "status": "active",
                        "exclude_students_ids": [

                        ],
                        "files_controll_enabled": true,
                        "messanger_access_enabled": true,
                        "activity_settings": null
                      }
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "total_count": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Comment",
        "tags": [
          "Comments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "commentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "commentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Group",
              "TaskUser",
              "CourseThread"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "object",
                  "properties": {
                    "body": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "subject": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "root_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "attachment_id": {
                      "description": "attachment from thread, that uploaded before and should to be attached to current message",
                      "type": "integer"
                    }
                  }
                }
              },
              "required": [
                "comment"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "commentable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "commentable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "body": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer"
                    },
                    "root_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "main_root_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "tree_path": {
                      "type": "text",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "comment"
              ]
            },
            "examples": {
              "application/json": {
                "comment": {
                  "id": 17,
                  "commentable_id": 41,
                  "commentable_type": "Group",
                  "title": "Non beatae adipisci voluptatibus.",
                  "body": "Ex expedita cupiditate. Recusandae doloribus est distinctio. Est qui mollitia. Nostrum eum porro nesciunt voluptatem. Enim ducimus in sed quaerat in.",
                  "user_id": 356,
                  "root_id": 0,
                  "main_root_id": 0,
                  "created_at": "2018-08-02T11:11:40.000+00:00",
                  "updated_at": "2018-08-02T11:11:40.000+00:00",
                  "tree_path": [

                  ],
                  "user": {
                    "id": 356,
                    "first_name": "Kaela Abernathy",
                    "last_name": "Katarina MacGyver",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 1387,
                    "state_id": 694,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "2018-08-02T11:11:39.000+00:00",
                    "updated_at": "2018-08-02T11:11:40.000+00:00",
                    "email": "madilyn.macgyver@reichertframi.biz",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "enable_email_notifications": true,
                    "email_notifications": {
                    },
                    "organization_ids": [
                      335
                    ],
                    "roles": null,
                    "participated_group_ids": [
                      41
                    ],
                    "organization_settings": {
                      "id": 325,
                      "user_id": 356,
                      "organization_id": 335,
                      "role": "student",
                      "created_at": "2018-08-02T11:11:39.000+00:00",
                      "updated_at": "2018-08-02T11:11:39.000+00:00",
                      "status": "active",
                      "exclude_students_ids": [

                      ],
                      "files_controll_enabled": true,
                      "messanger_access_enabled": true,
                      "activity_settings": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{commentable_type}/{commentable_id}/comments/{id}": {
      "put": {
        "summary": "Update details of Comment",
        "tags": [
          "Comments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "commentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "commentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Group",
              "TaskUser",
              "CourseThread"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "object",
                  "properties": {
                    "body": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "subject": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "root_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "attachment_id": {
                      "description": "attachment from thread, that uploaded before and should to be attached to current message",
                      "type": "integer"
                    }
                  }
                }
              },
              "required": [
                "comment"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "body": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "root_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "comment"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "not allowed"
                ]
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "not allowed"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Comment",
        "tags": [
          "Comments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "commentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "commentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "enum": [
              "Group",
              "TaskUser",
              "CourseThread"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Comment account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "not allowed"
                ]
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "not allowed"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/countries": {
      "get": {
        "summary": "List of Countries",
        "tags": [
          "Countries"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "countries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "code": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "name": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "phonecode": {
                        "type": "integer",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "countries"
              ]
            },
            "examples": {
              "application/json": {
                "countries": [
                  {
                    "id": 1447,
                    "code": "ER",
                    "name": "Maldives",
                    "phonecode": 988
                  },
                  {
                    "id": 1448,
                    "code": "ER",
                    "name": "Montserrat",
                    "phonecode": 988
                  },
                  {
                    "id": 1449,
                    "code": "ER",
                    "name": "Spain",
                    "phonecode": 988
                  },
                  {
                    "id": 1450,
                    "code": "ER",
                    "name": "Heard Island and McDonald Islands",
                    "phonecode": 988
                  },
                  {
                    "id": 1451,
                    "code": "ER",
                    "name": "Tunisia",
                    "phonecode": 988
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "total_count": 5,
                  "size": 5,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/countries/{id}": {
      "get": {
        "summary": "Details of Country",
        "tags": [
          "Countries"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "country": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "phonecode": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "country"
              ]
            },
            "examples": {
              "application/json": {
                "country": {
                  "id": 1456,
                  "code": "ER",
                  "name": "French Guiana",
                  "phonecode": 988
                }
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Country with 'id'=0"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/course_groups": {
      "get": {
        "summary": "Courses in group",
        "tags": [
          "Courses vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "get courses from specific group"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "course_groups": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "course_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "group_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "precourse_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "complete_lesson_can": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "teacher",
                          "student",
                          "all"
                        ]
                      },
                      "reports_enabled": {
                        "type": "boolean",
                        "x-nullable": true
                      },
                      "files_enabled": {
                        "type": "boolean",
                        "x-nullable": true
                      },
                      "discussing_enabled": {
                        "type": "boolean",
                        "x-nullable": true
                      },
                      "student_content_enabled": {
                        "type": "boolean",
                        "x-nullable": true
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "active",
                          "pause"
                        ]
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "required": [
                "course_groups"
              ]
            },
            "examples": {
              "application/json": {
                "course_groups": [
                  {
                    "id": 25,
                    "course_id": 84,
                    "group_id": 54,
                    "precourse_id": 85,
                    "complete_lesson_can": "all",
                    "reports_enabled": true,
                    "files_enabled": true,
                    "discussing_enabled": true,
                    "student_content_enabled": true,
                    "status": "active",
                    "created_at": "2018-08-02T11:11:43.000+00:00",
                    "updated_at": "2018-08-02T11:11:43.000+00:00",
                    "course": {
                      "id": 84,
                      "title": "Stamm-Deckow",
                      "description": "iterate robust metrics",
                      "image": {
                        "url": "/uploads/image.jpeg"
                      },
                      "user_id": 376,
                      "organization_id": 0,
                      "created_at": "2018-08-02T11:11:43.000+00:00",
                      "updated_at": "2018-08-02T11:11:43.000+00:00",
                      "lessons_count": 0,
                      "banner_image": {
                        "url": "/uploads/banner_image.jpeg"
                      },
                      "group_ids": [
                        54
                      ],
                      "organization_ids": [
                        353
                      ],
                      "active_user_ids": null,
                      "course_users_state": null,
                      "course_for_current_student": null
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "total_count": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Course to group",
        "tags": [
          "Courses vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "get courses from specific group"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course_group": {
                  "type": "object",
                  "properties": {
                    "complete_lesson_can": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "teacher",
                        "student",
                        "all"
                      ]
                    },
                    "discussing_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "files_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "precourse_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "reports_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "student_content_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "course_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course_group"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "course_group": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "course_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "group_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "precourse_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "complete_lesson_can": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "teacher",
                        "student",
                        "all"
                      ]
                    },
                    "reports_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "files_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "discussing_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "student_content_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    }
                  }
                }
              },
              "required": [
                "course_group"
              ]
            },
            "examples": {
              "application/json": {
                "course_group": {
                  "id": 29,
                  "course_id": 92,
                  "group_id": 57,
                  "precourse_id": 93,
                  "complete_lesson_can": "all",
                  "reports_enabled": true,
                  "files_enabled": true,
                  "discussing_enabled": true,
                  "student_content_enabled": true,
                  "status": "active",
                  "created_at": "2018-08-02T11:11:45.000+00:00",
                  "updated_at": "2018-08-02T11:11:45.000+00:00",
                  "course": {
                    "id": 92,
                    "title": "Stamm-Deckow",
                    "description": "iterate robust metrics",
                    "image": {
                      "url": "/uploads/image.jpeg"
                    },
                    "user_id": 388,
                    "organization_id": 0,
                    "created_at": "2018-08-02T11:11:45.000+00:00",
                    "updated_at": "2018-08-02T11:11:45.000+00:00",
                    "lessons_count": 0,
                    "banner_image": {
                      "url": "/uploads/banner_image.jpeg"
                    },
                    "group_ids": [
                      57
                    ],
                    "organization_ids": [
                      370
                    ],
                    "active_user_ids": null,
                    "course_users_state": null,
                    "course_for_current_student": null
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/course_groups/{id}": {
      "put": {
        "summary": "Update Course in group",
        "tags": [
          "Courses vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "get courses from specific group"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course_group": {
                  "type": "object",
                  "properties": {
                    "complete_lesson_can": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "teacher",
                        "student",
                        "all"
                      ]
                    },
                    "discussing_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "files_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "precourse_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "reports_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "student_content_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course_group"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "course_group": {
                  "type": "object",
                  "properties": {
                    "precourse_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "complete_lesson_can": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "teacher",
                        "student",
                        "all"
                      ]
                    },
                    "reports_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "files_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "discussing_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "student_content_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    }
                  }
                }
              },
              "required": [
                "course_group"
              ]
            },
            "examples": {
              "application/json": {
                "course_group": {
                  "id": 32,
                  "course_id": 98,
                  "group_id": 61,
                  "precourse_id": 101,
                  "complete_lesson_can": "all",
                  "reports_enabled": true,
                  "files_enabled": true,
                  "discussing_enabled": true,
                  "student_content_enabled": true,
                  "status": "active",
                  "created_at": "2018-08-02T11:11:46.000+00:00",
                  "updated_at": "2018-08-02T11:11:47.000+00:00",
                  "course": {
                    "id": 98,
                    "title": "Stamm-Deckow",
                    "description": "iterate robust metrics",
                    "image": {
                      "url": "/uploads/image.jpeg"
                    },
                    "user_id": 398,
                    "organization_id": 0,
                    "created_at": "2018-08-02T11:11:46.000+00:00",
                    "updated_at": "2018-08-02T11:11:46.000+00:00",
                    "lessons_count": 0,
                    "banner_image": {
                      "url": "/uploads/banner_image.jpeg"
                    },
                    "group_ids": [
                      61
                    ],
                    "organization_ids": [
                      382
                    ],
                    "active_user_ids": null,
                    "course_users_state": null,
                    "course_for_current_student": null
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find CourseGroup with 'id'=0 [WHERE \"course_groups\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Course from group",
        "tags": [
          "Courses vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "get courses from specific group"
          }
        ],
        "responses": {
          "200": {
            "description": "deleting CourseGroup account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find CourseGroup with 'id'=0 [WHERE \"course_groups\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{course_id}/course_threads": {
      "get": {
        "summary": "List of Course Threads",
        "tags": [
          "CourseThreads"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "sort_field",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "title",
              "created_at",
              "comments_count",
              "last_activity_at"
            ],
            "description": "field for sorting"
          },
          {
            "name": "sort_flag",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "ASC",
              "DESC"
            ],
            "description": "flag for sorting"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "course_threads": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "comments_count": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "last_activity_at": {
                        "type": "datetime",
                        "x-nullable": true
                      },
                      "course_group_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "last_comment": {
                        "type": "object",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "course_threads"
              ]
            },
            "examples": {
              "application/json": {
                "course_threads": [
                  {
                    "id": 1,
                    "title": "Dolorum animi vel sunt accusantium.",
                    "user_id": 425,
                    "comments_count": 1,
                    "created_at": "2018-08-02T11:11:50.000+00:00",
                    "updated_at": "2018-08-02T11:11:50.000+00:00",
                    "last_activity_at": "2018-08-02T11:11:50.000+00:00",
                    "course_group_id": 40,
                    "last_comment": {
                      "id": 28,
                      "commentable_id": 1,
                      "commentable_type": "CourseThread",
                      "title": "Non beatae adipisci voluptatibus.",
                      "body": "Ex expedita cupiditate. Recusandae doloribus est distinctio. Est qui mollitia. Nostrum eum porro nesciunt voluptatem. Enim ducimus in sed quaerat in.",
                      "user_id": 425,
                      "root_id": 0,
                      "main_root_id": 28,
                      "created_at": "2018-08-02T11:11:50.000+00:00",
                      "updated_at": "2018-08-02T11:11:50.000+00:00",
                      "tree_path": [
                        "28"
                      ],
                      "user": {
                        "id": 425,
                        "first_name": "Kaela Abernathy",
                        "last_name": "Katarina MacGyver",
                        "phone_number": "",
                        "date_of_birth": null,
                        "address": "",
                        "country_id": 1696,
                        "state_id": 847,
                        "zip_code": "",
                        "status": "active",
                        "created_at": "2018-08-02T11:11:50.000+00:00",
                        "updated_at": "2018-08-02T11:11:50.000+00:00",
                        "email": "afton.little@barrows.net",
                        "avatar": {
                          "url": null,
                          "small": {
                            "url": null
                          },
                          "middle": {
                            "url": null
                          }
                        },
                        "enable_email_notifications": true,
                        "email_notifications": {
                        },
                        "organization_ids": [
                          419
                        ],
                        "roles": null,
                        "participated_group_ids": [
                          70
                        ],
                        "organization_settings": {
                          "id": 387,
                          "user_id": 425,
                          "organization_id": 419,
                          "role": "student",
                          "created_at": "2018-08-02T11:11:50.000+00:00",
                          "updated_at": "2018-08-02T11:11:50.000+00:00",
                          "status": "active",
                          "exclude_students_ids": [

                          ],
                          "files_controll_enabled": true,
                          "messanger_access_enabled": true,
                          "activity_settings": null
                        }
                      }
                    },
                    "user": {
                      "id": 425,
                      "first_name": "Kaela Abernathy",
                      "last_name": "Katarina MacGyver",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 1696,
                      "state_id": 847,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "2018-08-02T11:11:50.000+00:00",
                      "updated_at": "2018-08-02T11:11:50.000+00:00",
                      "email": "afton.little@barrows.net",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "enable_email_notifications": true,
                      "email_notifications": {
                      },
                      "organization_ids": [
                        419
                      ],
                      "roles": null,
                      "participated_group_ids": [
                        70
                      ],
                      "organization_settings": {
                        "id": 387,
                        "user_id": 425,
                        "organization_id": 419,
                        "role": "student",
                        "created_at": "2018-08-02T11:11:50.000+00:00",
                        "updated_at": "2018-08-02T11:11:50.000+00:00",
                        "status": "active",
                        "exclude_students_ids": [

                        ],
                        "files_controll_enabled": true,
                        "messanger_access_enabled": true,
                        "activity_settings": null
                      }
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "total_count": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Course Thread",
        "tags": [
          "CourseThreads"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course_thread": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course_thread"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "course_thread": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "comments_count": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "last_activity_at": {
                      "type": "datetime",
                      "x-nullable": true
                    },
                    "course_group_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "last_comment": {
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course_thread"
              ]
            },
            "examples": {
              "application/json": {
                "course_thread": {
                  "id": 9,
                  "title": "Deleniti consequuntur et et qui.",
                  "user_id": 441,
                  "comments_count": 0,
                  "created_at": "2018-08-02T11:11:54.000+00:00",
                  "updated_at": "2018-08-02T11:11:54.000+00:00",
                  "last_activity_at": null,
                  "course_group_id": 47,
                  "last_comment": null,
                  "user": {
                    "id": 441,
                    "first_name": "Kaela Abernathy",
                    "last_name": "Katarina MacGyver",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 1756,
                    "state_id": 877,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "2018-08-02T11:11:53.000+00:00",
                    "updated_at": "2018-08-02T11:11:54.000+00:00",
                    "email": "valentin@grahammonahan.org",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "enable_email_notifications": true,
                    "email_notifications": {
                    },
                    "organization_ids": [
                      433
                    ],
                    "roles": null,
                    "participated_group_ids": [
                      77
                    ],
                    "organization_settings": {
                      "id": 401,
                      "user_id": 441,
                      "organization_id": 433,
                      "role": "student",
                      "created_at": "2018-08-02T11:11:53.000+00:00",
                      "updated_at": "2018-08-02T11:11:53.000+00:00",
                      "status": "active",
                      "exclude_students_ids": [

                      ],
                      "files_controll_enabled": true,
                      "messanger_access_enabled": true,
                      "activity_settings": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{course_id}/course_threads/{id}": {
      "get": {
        "summary": "Details of Course Thread",
        "tags": [
          "CourseThreads"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "course_thread": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "comments_count": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "last_activity_at": {
                      "type": "datetime",
                      "x-nullable": true
                    },
                    "course_group_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "last_comment": {
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course_thread"
              ]
            },
            "examples": {
              "application/json": {
                "course_thread": {
                  "id": 4,
                  "title": "Reprehenderit impedit ut est esse.",
                  "user_id": 432,
                  "comments_count": 1,
                  "created_at": "2018-08-02T11:11:51.000+00:00",
                  "updated_at": "2018-08-02T11:11:52.000+00:00",
                  "last_activity_at": "2018-08-02T11:11:52.000+00:00",
                  "course_group_id": 43,
                  "last_comment": {
                    "id": 31,
                    "commentable_id": 4,
                    "commentable_type": "CourseThread",
                    "title": "Non beatae adipisci voluptatibus.",
                    "body": "Ex expedita cupiditate. Recusandae doloribus est distinctio. Est qui mollitia. Nostrum eum porro nesciunt voluptatem. Enim ducimus in sed quaerat in.",
                    "user_id": 432,
                    "root_id": 0,
                    "main_root_id": 31,
                    "created_at": "2018-08-02T11:11:52.000+00:00",
                    "updated_at": "2018-08-02T11:11:52.000+00:00",
                    "tree_path": [
                      "31"
                    ],
                    "user": {
                      "id": 432,
                      "first_name": "Kaela Abernathy",
                      "last_name": "Katarina MacGyver",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 1722,
                      "state_id": 860,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "2018-08-02T11:11:51.000+00:00",
                      "updated_at": "2018-08-02T11:11:52.000+00:00",
                      "email": "nannie@morar.io",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "enable_email_notifications": true,
                      "email_notifications": {
                      },
                      "organization_ids": [
                        425
                      ],
                      "roles": null,
                      "participated_group_ids": [
                        73
                      ],
                      "organization_settings": {
                        "id": 393,
                        "user_id": 432,
                        "organization_id": 425,
                        "role": "student",
                        "created_at": "2018-08-02T11:11:51.000+00:00",
                        "updated_at": "2018-08-02T11:11:51.000+00:00",
                        "status": "active",
                        "exclude_students_ids": [

                        ],
                        "files_controll_enabled": true,
                        "messanger_access_enabled": true,
                        "activity_settings": null
                      }
                    }
                  },
                  "user": {
                    "id": 432,
                    "first_name": "Kaela Abernathy",
                    "last_name": "Katarina MacGyver",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 1722,
                    "state_id": 860,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "2018-08-02T11:11:51.000+00:00",
                    "updated_at": "2018-08-02T11:11:52.000+00:00",
                    "email": "nannie@morar.io",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "enable_email_notifications": true,
                    "email_notifications": {
                    },
                    "organization_ids": [
                      425
                    ],
                    "roles": null,
                    "participated_group_ids": [
                      73
                    ],
                    "organization_settings": {
                      "id": 393,
                      "user_id": 432,
                      "organization_id": 425,
                      "role": "student",
                      "created_at": "2018-08-02T11:11:51.000+00:00",
                      "updated_at": "2018-08-02T11:11:51.000+00:00",
                      "status": "active",
                      "exclude_students_ids": [

                      ],
                      "files_controll_enabled": true,
                      "messanger_access_enabled": true,
                      "activity_settings": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find CourseThread with 'id'=0 [WHERE \"course_groups\".\"group_id\" = $1 AND \"course_groups\".\"course_id\" = $2]"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update details of Course Thread",
        "tags": [
          "CourseThreads"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "course_thread": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course_thread"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "course_thread": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course_thread"
              ]
            },
            "examples": {
              "application/json": {
                "course_thread": {
                  "id": 12,
                  "title": "Cum earum reiciendis aliquam.",
                  "user_id": 451,
                  "comments_count": 1,
                  "created_at": "2018-08-02T11:11:55.000+00:00",
                  "updated_at": "2018-08-02T11:11:56.000+00:00",
                  "last_activity_at": "2018-08-02T11:11:55.000+00:00",
                  "course_group_id": 51,
                  "last_comment": {
                    "id": 38,
                    "commentable_id": 12,
                    "commentable_type": "CourseThread",
                    "title": "Non beatae adipisci voluptatibus.",
                    "body": "Ex expedita cupiditate. Recusandae doloribus est distinctio. Est qui mollitia. Nostrum eum porro nesciunt voluptatem. Enim ducimus in sed quaerat in.",
                    "user_id": 451,
                    "root_id": 0,
                    "main_root_id": 38,
                    "created_at": "2018-08-02T11:11:55.000+00:00",
                    "updated_at": "2018-08-02T11:11:55.000+00:00",
                    "tree_path": [
                      "38"
                    ],
                    "user": {
                      "id": 451,
                      "first_name": "Kaela Abernathy",
                      "last_name": "Katarina MacGyver",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 1800,
                      "state_id": 899,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "2018-08-02T11:11:55.000+00:00",
                      "updated_at": "2018-08-02T11:11:56.000+00:00",
                      "email": "glen_watsica@muller.net",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "enable_email_notifications": true,
                      "email_notifications": {
                      },
                      "organization_ids": [
                        445
                      ],
                      "roles": null,
                      "participated_group_ids": [
                        81
                      ],
                      "organization_settings": {
                        "id": 410,
                        "user_id": 451,
                        "organization_id": 445,
                        "role": "student",
                        "created_at": "2018-08-02T11:11:55.000+00:00",
                        "updated_at": "2018-08-02T11:11:55.000+00:00",
                        "status": "active",
                        "exclude_students_ids": [

                        ],
                        "files_controll_enabled": true,
                        "messanger_access_enabled": true,
                        "activity_settings": null
                      }
                    }
                  },
                  "user": {
                    "id": 451,
                    "first_name": "Kaela Abernathy",
                    "last_name": "Katarina MacGyver",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 1800,
                    "state_id": 899,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "2018-08-02T11:11:55.000+00:00",
                    "updated_at": "2018-08-02T11:11:56.000+00:00",
                    "email": "glen_watsica@muller.net",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "enable_email_notifications": true,
                    "email_notifications": {
                    },
                    "organization_ids": [
                      445
                    ],
                    "roles": null,
                    "participated_group_ids": [
                      81
                    ],
                    "organization_settings": {
                      "id": 410,
                      "user_id": 451,
                      "organization_id": 445,
                      "role": "student",
                      "created_at": "2018-08-02T11:11:55.000+00:00",
                      "updated_at": "2018-08-02T11:11:55.000+00:00",
                      "status": "active",
                      "exclude_students_ids": [

                      ],
                      "files_controll_enabled": true,
                      "messanger_access_enabled": true,
                      "activity_settings": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find CourseThread with 'id'=0 [WHERE \"course_groups\".\"group_id\" = $1 AND \"course_groups\".\"course_id\" = $2]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Course Thread",
        "tags": [
          "CourseThreads"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting CourseThread account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find CourseThread with 'id'=0 [WHERE \"course_groups\".\"group_id\" = $1 AND \"course_groups\".\"course_id\" = $2]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses": {
      "get": {
        "summary": "Get Courses inside organization",
        "tags": [
          "Courses"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "term",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "term for searching by [:title, :description]"
          },
          {
            "name": "sort_field",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "title",
              "created_at",
              "lessons_count",
              "active_user_ids"
            ],
            "description": "field for sorting"
          },
          {
            "name": "sort_flag",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "ASC",
              "DESC"
            ],
            "description": "flag for sorting"
          },
          {
            "name": "included_lesson_users_for_current_student",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "lesson_users for current user and courses will be included"
          },
          {
            "name": "included_lesson_users",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "lesson_users for courses will be included"
          },
          {
            "name": "student_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "teacher could see courses of specific student"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "courses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "image": {
                        "type": "object",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "organization_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "lessons_count": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "banner_image": {
                        "type": "object",
                        "x-nullable": true
                      },
                      "group_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "integer",
                          "properties": {
                          }
                        }
                      },
                      "organization_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "integer",
                          "properties": {
                          }
                        }
                      },
                      "active_user_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "integer",
                          "properties": {
                          }
                        }
                      },
                      "course_users_state": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "string",
                          "properties": {
                          }
                        }
                      },
                      "course_for_current_student": {
                        "description": "information about user's association to this course",
                        "type": "object",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "courses"
              ]
            },
            "examples": {
              "application/json": {
                "courses": [
                  {
                    "id": 139,
                    "title": "Stamm-Deckow",
                    "description": "iterate robust metrics",
                    "image": {
                      "url": "/uploads/image.jpeg"
                    },
                    "user_id": 476,
                    "organization_id": 0,
                    "created_at": "2018-08-02T11:12:00.000+00:00",
                    "updated_at": "2018-08-02T11:12:00.000+00:00",
                    "lessons_count": 0,
                    "banner_image": {
                      "url": "/uploads/banner_image.jpeg"
                    },
                    "group_ids": [
                      90
                    ],
                    "organization_ids": [
                      467
                    ],
                    "active_user_ids": null,
                    "course_users_state": null,
                    "lesson_users": [

                    ],
                    "lesson_users_for_current_student": [

                    ],
                    "course_for_current_student": null
                  },
                  {
                    "id": 138,
                    "title": "Stamm-Deckow",
                    "description": "iterate robust metrics",
                    "image": {
                      "url": "/uploads/image.jpeg"
                    },
                    "user_id": 473,
                    "organization_id": 0,
                    "created_at": "2018-08-02T11:11:59.000+00:00",
                    "updated_at": "2018-08-02T11:11:59.000+00:00",
                    "lessons_count": 1,
                    "banner_image": {
                      "url": "/uploads/banner_image.jpeg"
                    },
                    "group_ids": [
                      90
                    ],
                    "organization_ids": [
                      467
                    ],
                    "active_user_ids": null,
                    "course_users_state": null,
                    "lesson_users": [

                    ],
                    "lesson_users_for_current_student": [

                    ],
                    "course_for_current_student": null
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "total_count": 2,
                  "size": 2,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{id}": {
      "get": {
        "summary": "Get Course Details",
        "tags": [
          "Courses"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "course": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "image": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "lessons_count": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "banner_image": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "organization_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "active_user_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "course_users_state": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "string",
                        "properties": {
                        }
                      }
                    },
                    "course_for_current_student": {
                      "description": "information about user's association to this course",
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "course"
              ]
            },
            "examples": {
              "application/json": {
                "course": {
                  "id": 144,
                  "title": "Stamm-Deckow",
                  "description": "iterate robust metrics",
                  "image": {
                    "url": "/uploads/image.jpeg"
                  },
                  "user_id": 489,
                  "organization_id": 0,
                  "created_at": "2018-08-02T11:12:03.000+00:00",
                  "updated_at": "2018-08-02T11:12:03.000+00:00",
                  "lessons_count": 1,
                  "banner_image": {
                    "url": "/uploads/banner_image.jpeg"
                  },
                  "group_ids": [
                    93
                  ],
                  "organization_ids": [
                    479
                  ],
                  "active_user_ids": null,
                  "course_users_state": null,
                  "course_for_current_student": null
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Course with 'id'=0 [WHERE \"course_groups\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{id}/switch": {
      "put": {
        "summary": "Activate/Diactivate course for student",
        "tags": [
          "Courses"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "active",
            "in": "query",
            "type": "boolean",
            "required": true
          },
          {
            "name": "student_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns result",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/group_users": {
      "get": {
        "summary": "Users in group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "sort_field",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "role",
              "last_name",
              "first_name",
              "created_at",
              "status"
            ],
            "description": "field for sorting"
          },
          {
            "name": "sort_flag",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "ASC",
              "DESC"
            ],
            "description": "flag for sorting"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "group_users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "user": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "id": {
                        "type": "integer"
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "group_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "active",
                          "pause"
                        ]
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "role": {
                        "type": "string"
                      },
                      "date_added": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "organization_id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "required": [
                "group_users"
              ]
            },
            "examples": {
              "application/json": {
                "group_users": [
                  {
                    "user": {
                      "id": 515,
                      "first_name": "Kaela Abernathy",
                      "last_name": "Katarina MacGyver",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 2036,
                      "state_id": 1017,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "2018-08-02T11:12:09.000+00:00",
                      "updated_at": "2018-08-02T11:12:09.000+00:00",
                      "email": "conrad@gusikowski.biz",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "enable_email_notifications": true,
                      "email_notifications": {
                      },
                      "organization_ids": [
                        500
                      ],
                      "roles": null,
                      "participated_group_ids": [
                        98
                      ],
                      "organization_settings": null
                    },
                    "id": 73,
                    "user_id": 515,
                    "status": "active",
                    "first_name": "Kaela Abernathy",
                    "last_name": "Katarina MacGyver",
                    "role": "",
                    "date_added": "2018-08-02T11:12:09.890Z",
                    "organization_id": 499
                  },
                  {
                    "user": {
                      "id": 514,
                      "first_name": "Kaela Abernathy",
                      "last_name": "Katarina MacGyver",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 2034,
                      "state_id": 1016,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "2018-08-02T11:12:09.000+00:00",
                      "updated_at": "2018-08-02T11:12:11.000+00:00",
                      "email": "kevon@spencerrosenbaum.biz",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "enable_email_notifications": true,
                      "email_notifications": {
                      },
                      "organization_ids": [
                        499
                      ],
                      "roles": null,
                      "participated_group_ids": [
                        98
                      ],
                      "organization_settings": null
                    },
                    "id": 74,
                    "user_id": 514,
                    "status": "active",
                    "first_name": "Kaela Abernathy",
                    "last_name": "Katarina MacGyver",
                    "role": "admin",
                    "date_added": "2018-08-02T11:12:09.914Z",
                    "organization_id": 499
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "total_count": 2,
                  "size": 2,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add User to group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "group_user": {
                  "type": "object",
                  "properties": {
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "group_user"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "group_user": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "id": {
                      "type": "integer"
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "group_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string"
                    },
                    "date_added": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "organization_id": {
                      "type": "integer"
                    }
                  }
                }
              },
              "required": [
                "group_user"
              ]
            },
            "examples": {
              "application/json": {
                "group_user": {
                  "user": {
                    "id": 521,
                    "first_name": "Kaela Abernathy",
                    "last_name": "Katarina MacGyver",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 2060,
                    "state_id": 1029,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "2018-08-02T11:12:12.000+00:00",
                    "updated_at": "2018-08-02T11:12:12.000+00:00",
                    "email": "daniella@schroederparker.net",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "enable_email_notifications": true,
                    "email_notifications": {
                    },
                    "organization_ids": [
                      505
                    ],
                    "roles": null,
                    "participated_group_ids": [
                      101
                    ],
                    "organization_settings": null
                  },
                  "id": 81,
                  "user_id": 521,
                  "group_id": 101,
                  "created_at": "2018-08-02T11:12:12.000+00:00",
                  "updated_at": "2018-08-02T11:12:12.000+00:00",
                  "status": "active",
                  "first_name": "Kaela Abernathy",
                  "last_name": "Katarina MacGyver",
                  "role": "admin",
                  "date_added": null,
                  "organization_id": 505
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/group_users/{id}": {
      "put": {
        "summary": "Change status of user in group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "group_user": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    }
                  }
                }
              },
              "required": [
                "group_user"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "group_user": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    }
                  }
                }
              },
              "required": [
                "group_user"
              ]
            },
            "examples": {
              "application/json": {
                "group_user": {
                  "user": {
                    "id": 530,
                    "first_name": "Kaela Abernathy",
                    "last_name": "Katarina MacGyver",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 2094,
                    "state_id": 1046,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "2018-08-02T11:12:14.000+00:00",
                    "updated_at": "2018-08-02T11:12:14.000+00:00",
                    "email": "gregoria.treutel@barrowshaley.io",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "enable_email_notifications": true,
                    "email_notifications": {
                    },
                    "organization_ids": [
                      514
                    ],
                    "roles": null,
                    "participated_group_ids": [
                      105
                    ],
                    "organization_settings": null
                  },
                  "id": 86,
                  "user_id": 530,
                  "group_id": 105,
                  "created_at": "2018-08-02T11:12:14.000+00:00",
                  "updated_at": "2018-08-02T11:12:14.000+00:00",
                  "status": "active",
                  "first_name": "Kaela Abernathy",
                  "last_name": "Katarina MacGyver",
                  "role": "",
                  "date_added": null,
                  "organization_id": 513
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find GroupUser with 'id'=0 [WHERE \"group_users\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user from group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting GroupUser account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find GroupUser with 'id'=0 [WHERE \"group_users\".\"group_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/group_users/batch_update": {
      "put": {
        "summary": "Change status of batch users in group",
        "tags": [
          "Users vs Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "body",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "status",
            "in": "body",
            "type": "string",
            "enum": [
              "active",
              "pause"
            ],
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns status and errors",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                },
                "errors": {
                  "type": "array"
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "errors": [

                ],
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups": {
      "get": {
        "summary": "Get Groups inside organization",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "visibility",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "private",
              "public"
            ],
            "description": "Filter groups by visibility"
          },
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "required": false,
            "enum": [
              "active",
              "pause"
            ],
            "description": "Filter groups by status"
          },
          {
            "name": "my",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "return user's groups"
          },
          {
            "name": "term",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "term for searching by [:description, :title]"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "groups": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "organization_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "active",
                          "pause"
                        ]
                      },
                      "user_limit": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "visibility": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "private",
                          "public"
                        ]
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "count_participants": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "noticeboard_settings": {
                        "type": "jsonb"
                      },
                      "user_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "integer",
                          "properties": {
                          }
                        }
                      },
                      "completed": {
                        "type": "integer"
                      },
                      "incomplete": {
                        "type": "integer"
                      },
                      "participated": {
                        "description": "group_user instance for current user if he participated in group",
                        "type": "object",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "groups"
              ]
            },
            "examples": {
              "application/json": {
                "groups": [
                  {
                    "id": 117,
                    "organization_id": 537,
                    "title": "Walter-Hartmann",
                    "description": "strategize seamless channels",
                    "status": "active",
                    "user_limit": 10,
                    "visibility": "public",
                    "created_at": "2018-08-02T11:12:18.000+00:00",
                    "updated_at": "2018-08-02T11:12:18.000+00:00",
                    "count_participants": 1,
                    "user_id": 0,
                    "noticeboard_settings": {
                      "student_can_post": true,
                      "noticeboard_enabled": true,
                      "student_can_comment": true
                    },
                    "user_ids": [
                      555
                    ],
                    "completed": 0,
                    "incomplete": 0,
                    "participated": {
                      "user": {
                        "id": 555,
                        "first_name": "Kaela Abernathy",
                        "last_name": "Katarina MacGyver",
                        "phone_number": "",
                        "date_of_birth": null,
                        "address": "",
                        "country_id": 2190,
                        "state_id": 1094,
                        "zip_code": "",
                        "status": "active",
                        "created_at": "2018-08-02T11:12:18.000+00:00",
                        "updated_at": "2018-08-02T11:12:19.000+00:00",
                        "email": "cleora.runte@bahringer.net",
                        "avatar": {
                          "url": null,
                          "small": {
                            "url": null
                          },
                          "middle": {
                            "url": null
                          }
                        },
                        "enable_email_notifications": true,
                        "email_notifications": {
                        },
                        "organization_ids": [
                          537
                        ],
                        "roles": null,
                        "participated_group_ids": [
                          117
                        ],
                        "organization_settings": null
                      },
                      "id": 108,
                      "user_id": 555,
                      "group_id": 117,
                      "created_at": "2018-08-02T11:12:18.000+00:00",
                      "updated_at": "2018-08-02T11:12:18.000+00:00",
                      "status": "active",
                      "first_name": "Kaela Abernathy",
                      "last_name": "Katarina MacGyver",
                      "role": "admin",
                      "date_added": null,
                      "organization_id": 537
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "total_count": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Group",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "user_limit": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "visibility": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "private",
                        "public"
                      ]
                    },
                    "noticeboard_enabled": {
                      "type": "boolean"
                    },
                    "student_can_post": {
                      "type": "boolean"
                    },
                    "student_can_comment": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "required": [
                "group"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "user_limit": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "visibility": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "private",
                        "public"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "count_participants": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "noticeboard_settings": {
                      "type": "jsonb"
                    },
                    "user_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "completed": {
                      "type": "integer"
                    },
                    "incomplete": {
                      "type": "integer"
                    },
                    "participated": {
                      "description": "group_user instance for current user if he participated in group",
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "group"
              ]
            },
            "examples": {
              "application/json": {
                "group": {
                  "id": 125,
                  "organization_id": 544,
                  "title": "Walter-Hartmann",
                  "description": "strategize seamless channels",
                  "status": "active",
                  "user_limit": 10,
                  "visibility": "public",
                  "created_at": "2018-08-02T11:12:21.000+00:00",
                  "updated_at": "2018-08-02T11:12:21.000+00:00",
                  "count_participants": 0,
                  "user_id": 564,
                  "noticeboard_settings": {
                  },
                  "user_ids": [

                  ],
                  "completed": 0,
                  "incomplete": 0,
                  "participated": null
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{id}": {
      "get": {
        "summary": "Get Group Details",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "user_limit": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "visibility": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "private",
                        "public"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "count_participants": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "noticeboard_settings": {
                      "type": "jsonb"
                    },
                    "user_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "completed": {
                      "type": "integer"
                    },
                    "incomplete": {
                      "type": "integer"
                    },
                    "participated": {
                      "description": "group_user instance for current user if he participated in group",
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "group"
              ]
            },
            "examples": {
              "application/json": {
                "group": {
                  "id": 120,
                  "organization_id": 540,
                  "title": "Walter-Hartmann",
                  "description": "strategize seamless channels",
                  "status": "active",
                  "user_limit": 10,
                  "visibility": "public",
                  "created_at": "2018-08-02T11:12:20.000+00:00",
                  "updated_at": "2018-08-02T11:12:20.000+00:00",
                  "count_participants": 1,
                  "user_id": 0,
                  "noticeboard_settings": {
                    "student_can_post": true,
                    "noticeboard_enabled": true,
                    "student_can_comment": true
                  },
                  "user_ids": [
                    559
                  ],
                  "completed": 0,
                  "incomplete": 0,
                  "participated": {
                    "user": {
                      "id": 559,
                      "first_name": "Kaela Abernathy",
                      "last_name": "Katarina MacGyver",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 2204,
                      "state_id": 1101,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "2018-08-02T11:12:20.000+00:00",
                      "updated_at": "2018-08-02T11:12:20.000+00:00",
                      "email": "dylan_moore@witting.io",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "enable_email_notifications": true,
                      "email_notifications": {
                      },
                      "organization_ids": [
                        540
                      ],
                      "roles": null,
                      "participated_group_ids": [
                        120
                      ],
                      "organization_settings": null
                    },
                    "id": 111,
                    "user_id": 559,
                    "group_id": 120,
                    "created_at": "2018-08-02T11:12:20.000+00:00",
                    "updated_at": "2018-08-02T11:12:20.000+00:00",
                    "status": "active",
                    "first_name": "Kaela Abernathy",
                    "last_name": "Katarina MacGyver",
                    "role": "admin",
                    "date_added": null,
                    "organization_id": 540
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Group with 'id'=0 [WHERE \"groups\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Group Details",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "user_limit": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "visibility": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "private",
                        "public"
                      ]
                    },
                    "noticeboard_enabled": {
                      "type": "boolean"
                    },
                    "student_can_post": {
                      "type": "boolean"
                    },
                    "student_can_comment": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "required": [
                "group"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "group": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "user_limit": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "visibility": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "private",
                        "public"
                      ]
                    }
                  }
                }
              },
              "required": [
                "group"
              ]
            },
            "examples": {
              "application/json": {
                "group": {
                  "id": 128,
                  "organization_id": 548,
                  "title": "Walter-Hartmann",
                  "description": "strategize seamless channels",
                  "status": "active",
                  "user_limit": 10,
                  "visibility": "public",
                  "created_at": "2018-08-02T11:12:22.000+00:00",
                  "updated_at": "2018-08-02T11:12:22.000+00:00",
                  "count_participants": 1,
                  "user_id": 0,
                  "noticeboard_settings": {
                    "student_can_post": true,
                    "noticeboard_enabled": true,
                    "student_can_comment": true
                  },
                  "user_ids": [
                    568
                  ],
                  "completed": 0,
                  "incomplete": 0,
                  "participated": {
                    "user": {
                      "id": 568,
                      "first_name": "Kaela Abernathy",
                      "last_name": "Katarina MacGyver",
                      "phone_number": "",
                      "date_of_birth": null,
                      "address": "",
                      "country_id": 2238,
                      "state_id": 1118,
                      "zip_code": "",
                      "status": "active",
                      "created_at": "2018-08-02T11:12:22.000+00:00",
                      "updated_at": "2018-08-02T11:12:22.000+00:00",
                      "email": "buddy_will@ullrich.info",
                      "avatar": {
                        "url": null,
                        "small": {
                          "url": null
                        },
                        "middle": {
                          "url": null
                        }
                      },
                      "enable_email_notifications": true,
                      "email_notifications": {
                      },
                      "organization_ids": [
                        548
                      ],
                      "roles": null,
                      "participated_group_ids": [
                        128
                      ],
                      "organization_settings": null
                    },
                    "id": 118,
                    "user_id": 568,
                    "group_id": 128,
                    "created_at": "2018-08-02T11:12:22.000+00:00",
                    "updated_at": "2018-08-02T11:12:22.000+00:00",
                    "status": "active",
                    "first_name": "Kaela Abernathy",
                    "last_name": "Katarina MacGyver",
                    "role": "admin",
                    "date_added": null,
                    "organization_id": 548
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Group with 'id'=0 [WHERE \"groups\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Group",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Group account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Group with 'id'=0 [WHERE \"groups\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{course_id}/lessons": {
      "get": {
        "summary": "Lessons for course",
        "tags": [
          "Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "lessons": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "active",
                          "pause"
                        ]
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "course_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "course_settings": {
                        "description": "course settings for current group",
                        "type": "object",
                        "x-nullable": true
                      },
                      "lesson_user_for_current_student": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "object",
                          "properties": {
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "lessons"
              ]
            },
            "examples": {
              "application/json": {
                "lessons": [
                  {
                    "id": 72,
                    "title": "Runolfsdottir Inc",
                    "description": "facilitate viral technologies",
                    "status": "active",
                    "user_id": 580,
                    "course_id": 154,
                    "created_at": "2018-08-02T11:12:25.000+00:00",
                    "updated_at": "2018-08-02T11:12:25.000+00:00",
                    "course_settings": {
                      "id": 76,
                      "course_id": 154,
                      "group_id": 136,
                      "precourse_id": 0,
                      "complete_lesson_can": "all",
                      "reports_enabled": true,
                      "files_enabled": true,
                      "discussing_enabled": true,
                      "student_content_enabled": true,
                      "status": "active",
                      "created_at": "2018-08-02T11:12:25.000+00:00",
                      "updated_at": "2018-08-02T11:12:25.000+00:00",
                      "course": {
                        "id": 154,
                        "title": "Stamm-Deckow",
                        "description": "iterate robust metrics",
                        "image": {
                          "url": "/uploads/image.jpeg"
                        },
                        "user_id": 579,
                        "organization_id": 0,
                        "created_at": "2018-08-02T11:12:24.000+00:00",
                        "updated_at": "2018-08-02T11:12:24.000+00:00",
                        "lessons_count": 1,
                        "banner_image": {
                          "url": "/uploads/banner_image.jpeg"
                        },
                        "group_ids": [
                          136
                        ],
                        "organization_ids": [
                          557
                        ],
                        "active_user_ids": null,
                        "course_users_state": null,
                        "course_for_current_student": {
                          "id": 71,
                          "course_id": 154,
                          "user_id": 578,
                          "status": "active",
                          "created_at": "2018-08-02T11:12:25.000+00:00",
                          "updated_at": "2018-08-02T11:12:25.000+00:00",
                          "course_group_id": 76,
                          "position": 0,
                          "can_start": true
                        }
                      }
                    },
                    "lesson_user_for_current_student": [
                      {
                        "status": "active",
                        "created_at": "2018-08-02T11:12:25.000+00:00",
                        "course_settings": {
                          "id": 76,
                          "course_id": 154,
                          "group_id": 136,
                          "precourse_id": 0,
                          "complete_lesson_can": "all",
                          "reports_enabled": true,
                          "files_enabled": true,
                          "discussing_enabled": true,
                          "student_content_enabled": true,
                          "status": "active",
                          "created_at": "2018-08-02T11:12:25.000+00:00",
                          "updated_at": "2018-08-02T11:12:25.000+00:00",
                          "course": {
                          }
                        },
                        "course_group": {
                          "id": 76,
                          "course_id": 154,
                          "group_id": 136,
                          "precourse_id": 0,
                          "complete_lesson_can": "all",
                          "reports_enabled": true,
                          "files_enabled": true,
                          "discussing_enabled": true,
                          "student_content_enabled": true,
                          "status": "active",
                          "created_at": "2018-08-02T11:12:25.000+00:00",
                          "updated_at": "2018-08-02T11:12:25.000+00:00",
                          "course": {
                          }
                        }
                      }
                    ],
                    "tasks": [

                    ]
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "total_count": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{course_id}/lessons/{id}": {
      "get": {
        "summary": "Get info about lesson at specific course",
        "tags": [
          "Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "included_lesson_users_for_current_student",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "lesson_users for current user and courses will be included inside course instance in meta section"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "lesson": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "pause"
                      ]
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "course_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "course_settings": {
                      "description": "course settings for current group",
                      "type": "object",
                      "x-nullable": true
                    },
                    "lesson_user_for_current_student": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "lesson"
              ]
            },
            "examples": {
              "application/json": {
                "lesson": {
                  "id": 75,
                  "title": "Runolfsdottir Inc",
                  "description": "facilitate viral technologies",
                  "status": "active",
                  "user_id": 590,
                  "course_id": 157,
                  "created_at": "2018-08-02T11:12:27.000+00:00",
                  "updated_at": "2018-08-02T11:12:27.000+00:00",
                  "course_settings": {
                    "id": 79,
                    "course_id": 157,
                    "group_id": 139,
                    "precourse_id": 0,
                    "complete_lesson_can": "all",
                    "reports_enabled": true,
                    "files_enabled": true,
                    "discussing_enabled": true,
                    "student_content_enabled": true,
                    "status": "active",
                    "created_at": "2018-08-02T11:12:27.000+00:00",
                    "updated_at": "2018-08-02T11:12:27.000+00:00",
                    "course": {
                      "id": 157,
                      "title": "Stamm-Deckow",
                      "description": "iterate robust metrics",
                      "image": {
                        "url": "/uploads/image.jpeg"
                      },
                      "user_id": 589,
                      "organization_id": 0,
                      "created_at": "2018-08-02T11:12:27.000+00:00",
                      "updated_at": "2018-08-02T11:12:27.000+00:00",
                      "lessons_count": 1,
                      "banner_image": {
                        "url": "/uploads/banner_image.jpeg"
                      },
                      "group_ids": [
                        139
                      ],
                      "organization_ids": [
                        566
                      ],
                      "active_user_ids": null,
                      "course_users_state": null,
                      "lesson_users_for_current_student": [
                        {
                          "status": "active",
                          "created_at": "2018-08-02T11:12:27.000+00:00",
                          "course_settings": {
                            "id": 79,
                            "course_id": 157,
                            "group_id": 139,
                            "precourse_id": 0,
                            "complete_lesson_can": "all",
                            "reports_enabled": true,
                            "files_enabled": true,
                            "discussing_enabled": true,
                            "student_content_enabled": true,
                            "status": "active",
                            "created_at": "2018-08-02T11:12:27.000+00:00",
                            "updated_at": "2018-08-02T11:12:27.000+00:00",
                            "course": {
                            }
                          },
                          "course_group": {
                          }
                        }
                      ],
                      "course_for_current_student": {
                        "id": 74,
                        "course_id": 157,
                        "user_id": 588,
                        "status": "active",
                        "created_at": "2018-08-02T11:12:27.000+00:00",
                        "updated_at": "2018-08-02T11:12:27.000+00:00",
                        "course_group_id": 79,
                        "position": 0,
                        "can_start": true
                      }
                    }
                  },
                  "lesson_user_for_current_student": [
                    {
                      "status": "active",
                      "created_at": "2018-08-02T11:12:27.000+00:00",
                      "course_settings": {
                        "id": 79,
                        "course_id": 157,
                        "group_id": 139,
                        "precourse_id": 0,
                        "complete_lesson_can": "all",
                        "reports_enabled": true,
                        "files_enabled": true,
                        "discussing_enabled": true,
                        "student_content_enabled": true,
                        "status": "active",
                        "created_at": "2018-08-02T11:12:27.000+00:00",
                        "updated_at": "2018-08-02T11:12:27.000+00:00",
                        "course": {
                        }
                      },
                      "course_group": {
                        "id": 79,
                        "course_id": 157,
                        "group_id": 139,
                        "precourse_id": 0,
                        "complete_lesson_can": "all",
                        "reports_enabled": true,
                        "files_enabled": true,
                        "discussing_enabled": true,
                        "student_content_enabled": true,
                        "status": "active",
                        "created_at": "2018-08-02T11:12:27.000+00:00",
                        "updated_at": "2018-08-02T11:12:27.000+00:00",
                        "course": {
                        }
                      }
                    }
                  ],
                  "tasks": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Lesson with 'id'=0 [WHERE \"lessons\".\"course_id\" = $1 AND \"lessons\".\"status\" = $2]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{course_id}/lessons/{id}/complete": {
      "put": {
        "summary": "Complete/Uncomplete lesson",
        "tags": [
          "Lessons"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "completed",
            "in": "query",
            "type": "boolean",
            "required": true
          },
          {
            "name": "student_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "student id if current user is teacher and he mark lesson of some student"
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns result",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        }
      }
    },
    "/api/v1/organization_users": {
      "post": {
        "summary": "Create OrganizationUser",
        "tags": [
          "OrganizationUsers"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "organization_user": {
                  "type": "object",
                  "properties": {
                    "role": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "student",
                        "teacher",
                        "admin"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended"
                      ]
                    },
                    "exclude_students_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "files_controll_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "messanger_access_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "activity_course_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "activity_student_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "organization_user"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "organization_user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "role": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "student",
                        "teacher",
                        "admin"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended"
                      ]
                    },
                    "exclude_students_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "files_controll_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "messanger_access_enabled": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "activity_settings": {
                      "type": "jsonb",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "organization_user"
              ]
            },
            "examples": {
              "application/json": {
                "organization_user": {
                  "id": 549,
                  "user_id": 605,
                  "organization_id": 581,
                  "role": "admin",
                  "created_at": "2018-08-02T11:12:31.000+00:00",
                  "updated_at": "2018-08-02T11:12:31.000+00:00",
                  "status": "active",
                  "exclude_students_ids": [

                  ],
                  "files_controll_enabled": true,
                  "messanger_access_enabled": true,
                  "activity_settings": {
                    "activity_course_ids": [

                    ],
                    "activity_student_ids": [

                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/organization_users/{id}": {
      "delete": {
        "summary": "Delete OrganizationUser",
        "tags": [
          "OrganizationUsers"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting OrganizationUser account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find OrganizationUser with 'id'=0 [WHERE \"organization_users\".\"organization_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/organizations/{id}": {
      "get": {
        "summary": "Details of Organization",
        "tags": [
          "Organizations"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "organization": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "subdomain": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "domain": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "logo": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "website": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "email": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "phone": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "language": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "en",
                        "ge",
                        "ru"
                      ]
                    },
                    "notification_settings": {
                      "type": "jsonb",
                      "x-nullable": true
                    },
                    "display_settings": {
                      "type": "jsonb",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "organization"
              ]
            },
            "examples": {
              "application/json": {
                "organization": {
                  "id": 590,
                  "title": "Howell, Dach and Hoppe",
                  "subdomain": "weberleffler590",
                  "domain": "vstowne.name",
                  "created_at": "2018-08-02T11:12:31.787Z",
                  "updated_at": "2018-08-02T11:12:31.787Z",
                  "description": "Tremblay, Schowalter and Howe",
                  "logo": {
                    "url": null,
                    "display": {
                      "url": null
                    }
                  },
                  "address": "Treutel-Fay",
                  "zip_code": "Larson Inc",
                  "website": "ankundingmorar.io",
                  "email": "sasha@rosenbaum.com",
                  "phone": "Ledner LLC",
                  "language": "ru",
                  "notification_settings": {
                    "notification_email": "katrina@ebert.io"
                  },
                  "display_settings": {
                    "display_name": "Smith-Wyman",
                    "display_type": "display_name"
                  },
                  "country_id": 2414,
                  "state_id": 1206
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Organization with 'id'=0"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update details of Organization",
        "tags": [
          "Organizations"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "organization": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "domain": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "email": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "language": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "en",
                        "ge",
                        "ru"
                      ]
                    },
                    "logo": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "phone": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "subdomain": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "website": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "notification_email": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "display_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "display_type": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "organization"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "organization": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "subdomain": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "domain": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "logo": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "website": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "email": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "phone": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "language": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "en",
                        "ge",
                        "ru"
                      ]
                    },
                    "notification_settings": {
                      "type": "jsonb",
                      "x-nullable": true
                    },
                    "display_settings": {
                      "type": "jsonb",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "organization"
              ]
            },
            "examples": {
              "application/json": {
                "organization": {
                  "id": 594,
                  "title": "Howell, Dach and Hoppe",
                  "subdomain": "klein595",
                  "domain": "vxratke.co",
                  "created_at": "2018-08-02T11:12:32.225Z",
                  "updated_at": "2018-08-02T11:12:32.500Z",
                  "description": "Tremblay, Schowalter and Howe",
                  "logo": {
                    "url": null,
                    "display": {
                      "url": null
                    }
                  },
                  "address": "Treutel-Fay",
                  "zip_code": "Larson Inc",
                  "website": "ankundingmorar.io",
                  "email": "sasha@rosenbaum.com",
                  "phone": "Ledner LLC",
                  "language": "ru",
                  "notification_settings": {
                    "notification_email": "delta@bode.org"
                  },
                  "display_settings": {
                    "display_name": "Wolf-Barrows",
                    "display_type": "display_name"
                  },
                  "country_id": 2436,
                  "state_id": 1217
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Organization with 'id'=0"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Organization",
        "tags": [
          "Organizations"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Organization account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Organization with 'id'=0"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/passwords": {
      "post": {
        "summary": "Send reset password token",
        "tags": [
          "Passwords"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "user's email or id required"
                },
                "id": {
                  "type": "integer",
                  "description": "user's email or id required"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update password",
        "tags": [
          "Passwords"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string"
                },
                "password_confirmation": {
                  "type": "string"
                },
                "reset_password_token": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "password changed",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "x-nullable": true
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended",
                        "deleted"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "email": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "enable_email_notifications": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "email_notifications": {
                      "type": "jsonb"
                    },
                    "organization_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "roles": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "participated_group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "organization_settings": {
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 632,
                  "first_name": "Kaela Abernathy",
                  "last_name": "Katarina MacGyver",
                  "phone_number": "",
                  "date_of_birth": null,
                  "address": "",
                  "country_id": 2482,
                  "state_id": 1240,
                  "zip_code": "",
                  "status": "active",
                  "created_at": "2018-08-02T11:12:35.000+00:00",
                  "updated_at": "2018-08-02T11:12:35.000+00:00",
                  "email": "albin.kuvalis@windlerkuhic.name",
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "enable_email_notifications": true,
                  "email_notifications": {
                  },
                  "organization_ids": [
                    605
                  ],
                  "roles": null,
                  "participated_group_ids": [

                  ],
                  "organization_settings": null
                },
                "token": "eyJhbGciOiJIUzI1NiJ9.eyJpZCI6NjMyLCJleHAiOjE1NjQ3NDQzNTUsInR5cGUiOiJ1c2VyIiwiZW1haWwiOiJhbGJpbi5rdXZhbGlzQHdpbmRsZXJrdWhpYy5uYW1lIn0.uGRXULemXpuIxWRUQjJFTbcNgxW_4WNZy8LmARnwl94"
              }
            }
          },
          "400": {
            "description": "fail with wrong token",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "invalid data"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/registrations": {
      "post": {
        "summary": "Sign up",
        "tags": [
          "Sign up"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "user created",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "x-nullable": true
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended",
                        "deleted"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "email": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "enable_email_notifications": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "email_notifications": {
                      "type": "jsonb"
                    },
                    "organization_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "roles": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "participated_group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "organization_settings": {
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 637,
                  "first_name": "",
                  "last_name": "",
                  "phone_number": "",
                  "date_of_birth": null,
                  "address": "",
                  "country_id": 0,
                  "state_id": 0,
                  "zip_code": "",
                  "status": "active",
                  "created_at": "2018-08-02T11:12:35.000+00:00",
                  "updated_at": "2018-08-02T11:12:35.000+00:00",
                  "email": "jean.kaulke@daughertymante.name",
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "enable_email_notifications": true,
                  "email_notifications": {
                  },
                  "organization_ids": [

                  ],
                  "roles": null,
                  "participated_group_ids": [

                  ],
                  "organization_settings": null
                }
              }
            }
          },
          "400": {
            "description": "registration is fail with existing email",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "items": {
                      "email": "array"
                    }
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 0,
                  "first_name": "",
                  "last_name": "",
                  "phone_number": "",
                  "date_of_birth": null,
                  "address": "",
                  "country_id": 0,
                  "state_id": 0,
                  "zip_code": "",
                  "status": "active",
                  "created_at": null,
                  "updated_at": null,
                  "email": "amara_stiedemann@ratkegrady.name",
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "enable_email_notifications": true,
                  "email_notifications": {
                  },
                  "organization_ids": [

                  ],
                  "roles": null,
                  "participated_group_ids": [

                  ],
                  "organization_settings": null
                },
                "errors": {
                  "email": [
                    {
                      "error": "taken",
                      "value": "amara_stiedemann@ratkegrady.name"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions": {
      "delete": {
        "summary": "Destroy a session",
        "tags": [
          "Session"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "session destroyed",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a session",
        "tags": [
          "Session"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "session created",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "x-nullable": true
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended",
                        "deleted"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "email": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "enable_email_notifications": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "email_notifications": {
                      "type": "jsonb"
                    },
                    "organization_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "roles": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "participated_group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "organization_settings": {
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 643,
                  "first_name": "Kaela Abernathy",
                  "last_name": "Katarina MacGyver",
                  "phone_number": "",
                  "date_of_birth": null,
                  "address": "",
                  "country_id": 2522,
                  "state_id": 1260,
                  "zip_code": "",
                  "status": "active",
                  "created_at": "2018-08-02T11:12:36.000+00:00",
                  "updated_at": "2018-08-02T11:12:36.000+00:00",
                  "email": "marcus@murphy.name",
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "enable_email_notifications": true,
                  "email_notifications": {
                  },
                  "organization_ids": [
                    615
                  ],
                  "roles": null,
                  "participated_group_ids": [

                  ],
                  "organization_settings": null
                },
                "token": "eyJhbGciOiJIUzI1NiJ9.eyJpZCI6NjQzLCJleHAiOjE1NjQ3NDQzNTYsInR5cGUiOiJ1c2VyIiwiZW1haWwiOiJtYXJjdXNAbXVycGh5Lm5hbWUifQ.4zpU7StS9_Eit60VSEdPjJ3lbHeGwjIQRR5VheGyjR4"
              }
            }
          },
          "401": {
            "description": "session is fail with wrong email",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "wrong_credentials",
                "errors": [
                  "Error with your login or password"
                ]
              }
            }
          },
          "400": {
            "description": "session is fail if user is not confirmed",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "items": {
                      "email": "array"
                    }
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": 400,
                "errors": [
                  {
                    "email": "email is not confirmed"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/states": {
      "get": {
        "summary": "List of States",
        "tags": [
          "States"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "states": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "country_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "code": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "required": [
                "states"
              ]
            },
            "examples": {
              "application/json": {
                "states": [
                  {
                    "id": 1276,
                    "name": "Colorado",
                    "country_id": 2555,
                    "code": "KY",
                    "created_at": "2018-08-02T11:12:36.000+00:00",
                    "updated_at": "2018-08-02T11:12:36.000+00:00",
                    "country": {
                      "id": 2555,
                      "code": "ER",
                      "name": "Ukraine",
                      "phonecode": 988
                    }
                  },
                  {
                    "id": 1277,
                    "name": "Arizona",
                    "country_id": 2557,
                    "code": "KY",
                    "created_at": "2018-08-02T11:12:36.000+00:00",
                    "updated_at": "2018-08-02T11:12:36.000+00:00",
                    "country": {
                      "id": 2557,
                      "code": "ER",
                      "name": "Somalia",
                      "phonecode": 988
                    }
                  },
                  {
                    "id": 1278,
                    "name": "Pennsylvania",
                    "country_id": 2558,
                    "code": "KY",
                    "created_at": "2018-08-02T11:12:36.000+00:00",
                    "updated_at": "2018-08-02T11:12:36.000+00:00",
                    "country": {
                      "id": 2558,
                      "code": "ER",
                      "name": "China",
                      "phonecode": 988
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "total_count": 3,
                  "size": 3,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/states/{id}": {
      "get": {
        "summary": "Details of State",
        "tags": [
          "States"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "state": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    }
                  }
                }
              },
              "required": [
                "state"
              ]
            },
            "examples": {
              "application/json": {
                "state": {
                  "id": 1281,
                  "name": "South Dakota",
                  "country_id": 2563,
                  "code": "KY",
                  "created_at": "2018-08-02T11:12:36.000+00:00",
                  "updated_at": "2018-08-02T11:12:36.000+00:00",
                  "country": {
                    "id": 2563,
                    "code": "ER",
                    "name": "Martinique",
                    "phonecode": 988
                  }
                }
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find State with 'id'=0"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{course_id}/lessons/{lesson_id}/tasks": {
      "get": {
        "summary": "List of Tasks",
        "tags": [
          "Tasks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "lesson_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "tasks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "action_type": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "reading",
                          "question",
                          "watch"
                        ]
                      },
                      "description": {
                        "type": "text",
                        "x-nullable": true
                      },
                      "lesson_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "task_user": {
                        "description": "task_user - association for user/task/group",
                        "type": "object",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "tasks"
              ]
            },
            "examples": {
              "application/json": {
                "tasks": [
                  {
                    "id": 44,
                    "action_type": "reading",
                    "description": "Repellendus sit eos repudiandae ipsum cupiditate eveniet. Temporibus asperiores quae. Nostrum ea et labore beatae nobis repudiandae. Consequatur et voluptas repellat aliquid veritatis sunt.",
                    "lesson_id": 80,
                    "user_id": 654,
                    "created_at": "2018-08-02T11:12:37.000+00:00",
                    "updated_at": "2018-08-02T11:12:37.000+00:00",
                    "task_user": {
                      "id": 21,
                      "task_id": 44,
                      "user_id": 654,
                      "course_group_id": 84,
                      "status": "active",
                      "created_at": "2018-08-02T11:12:37.000+00:00",
                      "updated_at": "2018-08-02T11:12:37.000+00:00"
                    },
                    "attachments": [

                    ],
                    "videos": [

                    ]
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "total_count": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/groups/{group_id}/courses/{course_id}/lessons/{lesson_id}/tasks/{id}": {
      "get": {
        "summary": "Details of Task",
        "tags": [
          "Tasks"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "course_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "lesson_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "task": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "action_type": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "reading",
                        "question",
                        "watch"
                      ]
                    },
                    "description": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "lesson_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "task_user": {
                      "description": "task_user - association for user/task/group",
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "task"
              ]
            },
            "examples": {
              "application/json": {
                "task": {
                  "id": 47,
                  "action_type": "reading",
                  "description": "Repellendus sit eos repudiandae ipsum cupiditate eveniet. Temporibus asperiores quae. Nostrum ea et labore beatae nobis repudiandae. Consequatur et voluptas repellat aliquid veritatis sunt.",
                  "lesson_id": 83,
                  "user_id": 664,
                  "created_at": "2018-08-02T11:12:38.000+00:00",
                  "updated_at": "2018-08-02T11:12:38.000+00:00",
                  "task_user": {
                    "id": 24,
                    "task_id": 47,
                    "user_id": 664,
                    "course_group_id": 87,
                    "status": "active",
                    "created_at": "2018-08-02T11:12:38.000+00:00",
                    "updated_at": "2018-08-02T11:12:38.000+00:00"
                  },
                  "attachments": [

                  ],
                  "videos": [

                  ]
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Task with 'id'=0 [WHERE \"tasks\".\"lesson_id\" = $1]"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "summary": "Get Users inside organization",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "group_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "get users from specific group"
          },
          {
            "name": "term",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "term for searching by [:first_name, :last_name, :email]"
          },
          {
            "name": "role",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "filter by role(student, teacher)"
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "first_name": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "last_name": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "phone_number": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "date_of_birth": {
                        "type": "date",
                        "x-nullable": true
                      },
                      "address": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "country_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "state_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "zip_code": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "active",
                          "suspended",
                          "deleted"
                        ]
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "email": {
                        "type": "string"
                      },
                      "avatar": {
                        "type": "object",
                        "x-nullable": true
                      },
                      "enable_email_notifications": {
                        "type": "boolean",
                        "x-nullable": true
                      },
                      "email_notifications": {
                        "type": "jsonb"
                      },
                      "organization_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "integer",
                          "properties": {
                          }
                        }
                      },
                      "roles": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "participated_group_ids": {
                        "type": "array",
                        "x-nullable": true,
                        "items": {
                          "type": "integer",
                          "properties": {
                          }
                        }
                      },
                      "organization_settings": {
                        "type": "object",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "users"
              ]
            },
            "examples": {
              "application/json": {
                "users": [
                  {
                    "id": 677,
                    "first_name": "Kaela Abernathy",
                    "last_name": "Katarina MacGyver",
                    "phone_number": "",
                    "date_of_birth": null,
                    "address": "",
                    "country_id": 2657,
                    "state_id": 1329,
                    "zip_code": "",
                    "status": "active",
                    "created_at": "2018-08-02T11:12:40.000+00:00",
                    "updated_at": "2018-08-02T11:12:42.000+00:00",
                    "email": "dejuan@kling.info",
                    "avatar": {
                      "url": null,
                      "small": {
                        "url": null
                      },
                      "middle": {
                        "url": null
                      }
                    },
                    "enable_email_notifications": true,
                    "email_notifications": {
                    },
                    "organization_ids": [
                      647
                    ],
                    "roles": null,
                    "participated_group_ids": [

                    ],
                    "organization_settings": {
                      "id": 613,
                      "user_id": 677,
                      "organization_id": 647,
                      "role": "admin",
                      "created_at": "2018-08-02T11:12:41.000+00:00",
                      "updated_at": "2018-08-02T11:12:41.000+00:00",
                      "status": "active",
                      "exclude_students_ids": [

                      ],
                      "files_controll_enabled": true,
                      "messanger_access_enabled": true,
                      "activity_settings": null
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "total_count": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create User",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "email": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "password_confirmation": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "enable_email_notifications": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "notify_on_private_message": {
                      "type": "boolean"
                    },
                    "notify_on_course_response": {
                      "type": "boolean"
                    },
                    "notify_on_group_discussion_response": {
                      "type": "boolean"
                    },
                    "get_weekly_activity_summary": {
                      "type": "boolean"
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended",
                        "deleted"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "email": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "enable_email_notifications": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "email_notifications": {
                      "type": "jsonb"
                    },
                    "organization_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "roles": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "participated_group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "organization_settings": {
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 687,
                  "first_name": "Kaela Abernathy",
                  "last_name": "Katarina MacGyver",
                  "phone_number": "",
                  "date_of_birth": null,
                  "address": "",
                  "country_id": 2693,
                  "state_id": 1347,
                  "zip_code": "",
                  "status": "active",
                  "created_at": "2018-08-02T11:12:43.000+00:00",
                  "updated_at": "2018-08-02T11:12:43.000+00:00",
                  "email": "manuel@yundt.org",
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "enable_email_notifications": true,
                  "email_notifications": {
                  },
                  "organization_ids": [

                  ],
                  "roles": null,
                  "participated_group_ids": [

                  ],
                  "organization_settings": null
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "summary": "Get User Details",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as object",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "active",
                        "suspended",
                        "deleted"
                      ]
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "email": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "enable_email_notifications": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "email_notifications": {
                      "type": "jsonb"
                    },
                    "organization_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "roles": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "participated_group_ids": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "integer",
                        "properties": {
                        }
                      }
                    },
                    "organization_settings": {
                      "type": "object",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 681,
                  "first_name": "Kaela Abernathy",
                  "last_name": "Katarina MacGyver",
                  "phone_number": "",
                  "date_of_birth": null,
                  "address": "",
                  "country_id": 2671,
                  "state_id": 1336,
                  "zip_code": "",
                  "status": "active",
                  "created_at": "2018-08-02T11:12:42.000+00:00",
                  "updated_at": "2018-08-02T11:12:42.000+00:00",
                  "email": "sylvester_swift@lindgren.io",
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "enable_email_notifications": true,
                  "email_notifications": {
                  },
                  "organization_ids": [
                    650
                  ],
                  "roles": null,
                  "participated_group_ids": [

                  ],
                  "organization_settings": {
                    "id": 616,
                    "user_id": 681,
                    "organization_id": 650,
                    "role": "admin",
                    "created_at": "2018-08-02T11:12:42.000+00:00",
                    "updated_at": "2018-08-02T11:12:42.000+00:00",
                    "status": "active",
                    "exclude_students_ids": [

                    ],
                    "files_controll_enabled": true,
                    "messanger_access_enabled": true,
                    "activity_settings": null
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find User with 'id'=0"
                ]
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update User Details",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "email": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "password_confirmation": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "enable_email_notifications": {
                      "type": "boolean",
                      "x-nullable": true
                    },
                    "notify_on_private_message": {
                      "type": "boolean"
                    },
                    "notify_on_course_response": {
                      "type": "boolean"
                    },
                    "notify_on_group_discussion_response": {
                      "type": "boolean"
                    },
                    "get_weekly_activity_summary": {
                      "type": "boolean"
                    },
                    "organization_users_attributes": {
                      "type": "array",
                      "x-nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "role": {
                            "type": "string",
                            "x-nullable": true,
                            "enum": [
                              "student",
                              "teacher",
                              "admin"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "x-nullable": true,
                            "enum": [
                              "active",
                              "suspended"
                            ]
                          },
                          "exclude_students_ids": {
                            "type": "array",
                            "x-nullable": true,
                            "items": {
                              "type": "integer",
                              "properties": {
                              }
                            }
                          },
                          "files_controll_enabled": {
                            "type": "boolean",
                            "x-nullable": true
                          },
                          "messanger_access_enabled": {
                            "type": "boolean",
                            "x-nullable": true
                          },
                          "activity_course_ids": {
                            "type": "array",
                            "x-nullable": true,
                            "items": {
                              "type": "integer",
                              "properties": {
                              }
                            }
                          },
                          "activity_student_ids": {
                            "type": "array",
                            "x-nullable": true,
                            "items": {
                              "type": "integer",
                              "properties": {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "first_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "last_name": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "phone_number": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "date_of_birth": {
                      "type": "date",
                      "x-nullable": true
                    },
                    "address": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "country_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "state_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "zip_code": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "email": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "object",
                      "x-nullable": true
                    },
                    "enable_email_notifications": {
                      "type": "boolean",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "user"
              ]
            },
            "examples": {
              "application/json": {
                "user": {
                  "id": 691,
                  "first_name": "Kaela Abernathy",
                  "last_name": "Katarina MacGyver",
                  "phone_number": "",
                  "date_of_birth": null,
                  "address": "",
                  "country_id": 2709,
                  "state_id": 1355,
                  "zip_code": "",
                  "status": "active",
                  "created_at": "2018-08-02T11:12:43.000+00:00",
                  "updated_at": "2018-08-02T11:12:43.000+00:00",
                  "email": "myrl@ritchie.net",
                  "avatar": {
                    "url": null,
                    "small": {
                      "url": null
                    },
                    "middle": {
                      "url": null
                    }
                  },
                  "enable_email_notifications": true,
                  "email_notifications": {
                  },
                  "organization_ids": [
                    657
                  ],
                  "roles": null,
                  "participated_group_ids": [

                  ],
                  "organization_settings": {
                    "id": 623,
                    "user_id": 691,
                    "organization_id": 657,
                    "role": "admin",
                    "created_at": "2018-08-02T11:12:43.000+00:00",
                    "updated_at": "2018-08-02T11:12:43.000+00:00",
                    "status": "active",
                    "exclude_students_ids": [

                    ],
                    "files_controll_enabled": true,
                    "messanger_access_enabled": true,
                    "activity_settings": null
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find User with 'id'=0"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete User",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting User account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find User with 'id'=0"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}/send_set_password_link": {
      "post": {
        "summary": "Send set password link to user",
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns result",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find User with 'id'=0"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{videoable_type}/{videoable_id}/videos": {
      "get": {
        "summary": "Videos",
        "tags": [
          "Videos"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_page",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "current_count",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "videoable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "videoable_type",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns as array",
            "schema": {
              "type": "object",
              "properties": {
                "videos": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "length": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "organization_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "user_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "videoable_type": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "videoable_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "created_at": {
                        "type": "datetime"
                      },
                      "updated_at": {
                        "type": "datetime"
                      },
                      "video_link": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "status": {
                        "type": "string",
                        "x-nullable": true,
                        "enum": [
                          "draft",
                          "processing",
                          "ready",
                          "failed"
                        ]
                      },
                      "size": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "thumbnail_url": {
                        "type": "string",
                        "x-nullable": true
                      }
                    }
                  }
                }
              },
              "required": [
                "videos"
              ]
            },
            "examples": {
              "application/json": {
                "videos": [
                  {
                    "id": 1,
                    "title": "Bogan-Ryan",
                    "length": 3861,
                    "organization_id": 669,
                    "user_id": 706,
                    "videoable_type": "Task",
                    "videoable_id": 51,
                    "created_at": "2018-08-02T11:12:45.000+00:00",
                    "updated_at": "2018-08-02T11:12:45.000+00:00",
                    "video_link": "https://youtu.be/BL50xRTnHTQ",
                    "status": "ready",
                    "size": 0,
                    "thumbnail_url": "",
                    "videoable": {
                      "id": 51,
                      "action_type": "reading",
                      "description": "Repellendus sit eos repudiandae ipsum cupiditate eveniet. Temporibus asperiores quae. Nostrum ea et labore beatae nobis repudiandae. Consequatur et voluptas repellat aliquid veritatis sunt.",
                      "lesson_id": 87,
                      "user_id": 709,
                      "created_at": "2018-08-02T11:12:45.000+00:00",
                      "updated_at": "2018-08-02T11:12:45.000+00:00",
                      "task_user": null,
                      "attachments": [

                      ],
                      "videos": [
                        {
                        }
                      ]
                    }
                  }
                ],
                "meta": {
                  "total_pages": 1,
                  "total_count": 1,
                  "size": 1,
                  "limit_value": 20,
                  "current_page": 1
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add Video with youtube link",
        "tags": [
          "Videos"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "videoable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "videoable_type",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "video": {
                  "type": "object",
                  "properties": {
                    "videoable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "videoable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "video_link": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "video"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "video": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "length": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "videoable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "videoable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "video_link": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "draft",
                        "processing",
                        "ready",
                        "failed"
                      ]
                    },
                    "size": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "thumbnail_url": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "video"
              ]
            },
            "examples": {
              "application/json": {
                "video": {
                  "id": 5,
                  "title": "",
                  "length": 3861,
                  "organization_id": 681,
                  "user_id": 719,
                  "videoable_type": "Task",
                  "videoable_id": 54,
                  "created_at": "2018-08-02T11:12:49.000+00:00",
                  "updated_at": "2018-08-02T11:12:49.000+00:00",
                  "video_link": "https://youtu.be/BL50xRTnHTQ",
                  "status": "ready",
                  "size": 0,
                  "thumbnail_url": "",
                  "videoable": {
                    "id": 54,
                    "action_type": "reading",
                    "description": "Repellendus sit eos repudiandae ipsum cupiditate eveniet. Temporibus asperiores quae. Nostrum ea et labore beatae nobis repudiandae. Consequatur et voluptas repellat aliquid veritatis sunt.",
                    "lesson_id": 90,
                    "user_id": 722,
                    "created_at": "2018-08-02T11:12:48.000+00:00",
                    "updated_at": "2018-08-02T11:12:48.000+00:00",
                    "task_user": null,
                    "attachments": [

                    ],
                    "videos": [
                      {
                      },
                      {
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{videoable_type}/{videoable_id}/videos/get_token": {
      "post": {
        "summary": "Get token for uploading video to Sproutvideo",
        "tags": [
          "Videos"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "videoable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "videoable_type",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "video": {
                  "type": "object",
                  "properties": {
                    "videoable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "videoable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "video_link": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "video"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns created object",
            "schema": {
              "type": "object",
              "properties": {
                "video": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "length": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "organization_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "videoable_type": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "videoable_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "created_at": {
                      "type": "datetime"
                    },
                    "updated_at": {
                      "type": "datetime"
                    },
                    "video_link": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "draft",
                        "processing",
                        "ready",
                        "failed"
                      ]
                    },
                    "size": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "thumbnail_url": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "video"
              ]
            },
            "examples": {
              "application/json": {
                "video": {
                  "id": 9,
                  "title": "",
                  "length": 0,
                  "sproutvideo_id": null,
                  "organization_id": 696,
                  "user_id": 733,
                  "videoable_type": "Task",
                  "videoable_id": 57,
                  "created_at": "2018-08-02T11:12:53.000+00:00",
                  "updated_at": "2018-08-02T11:12:53.000+00:00",
                  "video_link": "",
                  "status": "draft",
                  "token": null,
                  "embed_code": null,
                  "size": 0,
                  "thumbnail_url": "",
                  "videoable": {
                    "id": 57,
                    "action_type": "reading",
                    "description": "Repellendus sit eos repudiandae ipsum cupiditate eveniet. Temporibus asperiores quae. Nostrum ea et labore beatae nobis repudiandae. Consequatur et voluptas repellat aliquid veritatis sunt.",
                    "lesson_id": 93,
                    "user_id": 736,
                    "created_at": "2018-08-02T11:12:52.000+00:00",
                    "updated_at": "2018-08-02T11:12:52.000+00:00",
                    "task_user": null,
                    "attachments": [

                    ],
                    "videos": [
                      {
                      },
                      {
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/{videoable_type}/{videoable_id}/videos/{id}": {
      "put": {
        "summary": "Update Video",
        "tags": [
          "Videos"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "videoable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "videoable_type",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "video": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "sproutvideo_id": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "embed_code": {
                      "type": "text",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "draft",
                        "processing",
                        "ready",
                        "failed"
                      ]
                    },
                    "length": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "size": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "thumbnail_url": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "video"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns data",
            "schema": {
              "type": "object",
              "properties": {
                "video": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "length": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "status": {
                      "type": "string",
                      "x-nullable": true,
                      "enum": [
                        "draft",
                        "processing",
                        "ready",
                        "failed"
                      ]
                    },
                    "size": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "thumbnail_url": {
                      "type": "string",
                      "x-nullable": true
                    }
                  }
                }
              },
              "required": [
                "video"
              ]
            },
            "examples": {
              "application/json": {
                "video": {
                  "id": 12,
                  "title": "Bogan-Ryan",
                  "length": 177,
                  "organization_id": 711,
                  "user_id": 747,
                  "videoable_type": "Task",
                  "videoable_id": 60,
                  "created_at": "2018-08-02T11:12:56.000+00:00",
                  "updated_at": "2018-08-02T11:12:57.000+00:00",
                  "video_link": "https://youtu.be/BL50xRTnHTQ",
                  "status": "ready",
                  "size": 0,
                  "thumbnail_url": "",
                  "videoable": {
                    "id": 60,
                    "action_type": "reading",
                    "description": "Repellendus sit eos repudiandae ipsum cupiditate eveniet. Temporibus asperiores quae. Nostrum ea et labore beatae nobis repudiandae. Consequatur et voluptas repellat aliquid veritatis sunt.",
                    "lesson_id": 96,
                    "user_id": 750,
                    "created_at": "2018-08-02T11:12:56.000+00:00",
                    "updated_at": "2018-08-02T11:12:56.000+00:00",
                    "task_user": null,
                    "attachments": [

                    ],
                    "videos": [
                      {
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "You are not authorized"
                ]
              }
            }
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Video with 'id'=0 [WHERE \"videos\".\"videoable_id\" = $1 AND \"videos\".\"videoable_type\" = $2]"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Video",
        "tags": [
          "Videos"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "videoable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "videoable_type",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "deleting Video account",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "value": true
                }
              },
              "required": [
                "success"
              ]
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          },
          "401": {
            "description": "returns error You are not authorized"
          },
          "428": {
            "description": "returns error Organization is not determinated",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": null,
                "errors": [
                  "Organization is not determinated"
                ]
              }
            }
          },
          "404": {
            "description": "returns error if instance not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "errors"
              ]
            },
            "examples": {
              "application/json": {
                "error_code": "",
                "errors": [
                  "Couldn't find Video with 'id'=0 [WHERE \"videos\".\"videoable_id\" = $1 AND \"videos\".\"videoable_type\" = $2]"
                ]
              }
            }
          }
        }
      }
    }
  }
}